

#include "Vector.amy"

char[] line = input();

int total = 0;

Vector<:char[]:> lines = new Vector<:char[]:>();

while (line[0] != '$')
{
    lines.pushBack (line);

    line = input();
}

for (int l = 0; l < lines.size; ++l)
{

    char[] line = lines.data[l];
    
    int indexcomma = 0;
    int indexdash0 = 0;
    int indexdash1 = 0;
    for (int i = 0; i < sizeof(line); ++i)
    {
        if (line[i] == '-' && indexcomma == 0)
            indexdash0 = i;
        elif (line[i] == '-')
            indexdash1 = i;
        if (line[i] == ',')
            indexcomma = i;
    }

    int begin = 0;
    int end = indexdash0;
    int iter = 0;
    char[] a_ = new char[end-begin];
    for (int i = begin; i < end; ++i)
        a_[iter++] = line[i];

    begin = indexdash0+1;
    end = indexcomma;
    iter = 0;
    char[] b_ = new char[end-begin];
    for (int i = begin; i < end; ++i)
        b_[iter++] = line[i];

    begin = indexcomma+1;
    end = indexdash1;
    iter = 0;
    char[] c_ = new char[end-begin];
    for (int i = begin; i < end; ++i)
        c_[iter++] = line[i];

    begin = indexdash1+1;
    end = sizeof(line)-1; //-1 bc newline
    iter = 0;
    char[] d_ = new char[end-begin];
    for (int i = begin; i < end; ++i)
        d_[iter++] = line[i];

    int begin0 = stringToInt (a_);
    int end0 = stringToInt (b_)+1;
    int begin1 = stringToInt (c_);
    int end1 = stringToInt (d_)+1;

    // check if a is within b
    int isAInB = 0;
    int isBInA = 0;
    if (begin0 >= begin1 && end0 <= end1)
        isAInB = 1;
    if (begin1 >= begin0 && end1 <= end0)
        isBInA = 1;
    
    if (isAInB || isBInA)
    {
        total++;
    }

}

println (total);
