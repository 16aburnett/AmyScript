// AmyAssembly compiled from AmyScript
//========================================================================

//========================================================================
//### LIBRARY CODE #######################################################
//========================================================================

// AmyScript Built-in library
// Author: Amy Burnett
//========================================================================
// Global Builtin Variables

    assign __null 0

//========================================================================
// dont execute library functions 

jump __endOfLibrary

//========================================================================
// Prints a given string to the screen
// void print (char[] stringToPrint);
print__char__1:
    // grab string
    stackget __str 0
    sizeof __size __str
    // print each char
    // init
    assign __i 0
__print__char__1__loop:
    // cond
    cmp __i __size
    jge __print__char__1__endloop
    // Body
    print __str[__i]
    // update
    add __i __i 1
    // repeat
    jump __print__char__1__loop
__print__char__1__endloop:
    return 0

//========================================================================
// Prints an int to the screen
// void print (int intToPrint);
print__int:
    stackget __str 0
    print __str
    return 0

//========================================================================
// Prints a float to the screen
// void print (float floatToPrint);
print__float:
    stackget __str 0
    print __str
    return 0

//========================================================================
// Prints a char to the screen
// void print (char charToPrint);
print__char:
    // grab string
    stackget __char 0
    print __char
    return 0

//========================================================================
// Prints an enum's integer value 
// void print (Enum e);
print__Enum:
    stackget __e 0
    print __e
    return 0

//========================================================================
// Prints a given string to the screen with a newline at the end
// void println (char[] stringToPrint);
println__char__1:
    // grab string
    stackget __str 0
    sizeof __size __str
    // print each char
    // init
    assign __i 0
__println__char__1__loop:
    // cond
    cmp __i __size
    jge __println__char__1__endloop
    // Body
    print __str[__i]
    // update
    add __i __i 1
    // repeat
    jump __println__char__1__loop
__println__char__1__endloop:
    println
    return 0

//========================================================================
// Prints an int to the screen with a newline
// void print (int intToPrint);
println__int:
    stackget __str 0
    println __str
    return 0

//========================================================================
// Prints a float to the screen with a newline
// void println (float floatToPrint);
println__float:
    stackget __str 0
    println __str
    return 0

//========================================================================
// Prints a char to the screen with a newline
// void println (char charToPrint);
println__char:
    // grab string
    stackget __char 0
    println __char
    return 0

//========================================================================
// Prints an enum's integer value with a newline
// void println (Enum e);
println__Enum:
    stackget __e 0
    println __e
    return 0

//========================================================================
// Prints a newline to the console
// void println ();
println:
    println 
    return 0

//========================================================================
// grabs input from the console 
// char[] input ();
input:
    input __line
    return __line

//========================================================================
// exits/stops the program 
exit:
    halt

//========================================================================

// Exits the program with the given exit code 
// void exit(int exit_code)
// - exit_code : 
exit__int:
    // ** not implemented for amyasm
    halt 

//========================================================================
// returns default float value
// float float ();
float:
    return 0.0

//========================================================================
// converts int to float
// float intToFloat (int);
intToFloat__int:
    stackget val 0
    itof res val
    return res

//========================================================================
// parses a float from a given char[]
// float stringToFloat (char[]);
stringToFloat__char__1:
    stackget val 0
    stof res val
    return res

//========================================================================
// returns default int value
// int int ();
int:
    return 0

//========================================================================
// returns default char value
// char char ();
char:
    return '0'

//========================================================================
// converts float to int
// int floatToInt (float);
floatToInt__float:
    stackget val 0
    ftoi res val
    return res

//========================================================================
// parses an int from a given char[]
// int stringToInt (char[]);
stringToInt__char__1:
    stackget val 0
    stoi res val
    return res

//========================================================================
// parses an int from a given char
// int charToInt (char);
charToInt__char:
    stackget val 0
    ctoi res val
    return res

//========================================================================
// converts int to string
// char[] string (int);
string__int:
    stackget val 0
    string res val
    return res

//========================================================================
// converts float to string
// char[] string (float);
string__float:
    stackget val 0
    string res val
    return res

//========================================================================

// returns default value for array and object (null)
// null null ();
null:
    return __null

//========================================================================

__endOfLibrary:
    //push prompt
    //call print

    //call input
    //response name

    //push name
    //call println

//========================================================================
//### COMPILED CODE ######################################################
//========================================================================

//========================================================================
// Class Template - 
   // Instances:
      //==================================================================
      // Class Declaration - __main____Vector__char__1 inherits __main__Object
         // Creating Dispatch Table
            MALLOC __dtable____main____Vector__char__1 4
            // Populate Dispatch Table
            ASSIGN __dtable____main____Vector__char__1[0] __method____main____Vector__char__1____pushBack__char__1
            ASSIGN __dtable____main____Vector__char__1[1] __method____main____Vector__char__1____popBack
            ASSIGN __dtable____main____Vector__char__1[2] __method____main____Vector__char__1____get__int
            ASSIGN __dtable____main____Vector__char__1[3] __method____main____Vector__char__1____set__int__char__1
         //---------------------------------------------------------------
         // Field - char[][] Vector<:char[]:>::data
         ASSIGN __field____main____Vector__char__1____data 1
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - int Vector<:char[]:>::size
         ASSIGN __field____main____Vector__char__1____size 2
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - int Vector<:char[]:>::capacity
         ASSIGN __field____main____Vector__char__1____capacity 3
         //---------------------------------------------------------------
      // skip over class methods
      JUMP __endclass____main____Vector__char__1
         //---------------------------------------------------------------
         // Constructor Declaration - Vector<:char[]:>::Vector() -> Vector<:char[]:>
         JUMP __end__ctor____main____Vector__char__1____Vector
         __ctor____main____Vector__char__1____Vector:
            // Creating Class Instance
               MALLOC __this 4
               // Add Dispatch Table
               ASSIGN __this[0] __dtable____main____Vector__char__1
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Int Literal
                           PUSH 10
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char__1____capacity
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Int Literal
                           PUSH 0
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char__1____size
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Array Allocator
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__char__1____capacity
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                           POP __size
                           MALLOC __ptr __size
                           PUSH __ptr
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char__1____data
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN __this
         __end__ctor____main____Vector__char__1____Vector:
         // End Constructor Declaration - __ctor____main____Vector__char__1____Vector
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:char[]:>::pushBack(char[]) -> void
         JUMP __end__method____main____Vector__char__1____pushBack__char__1
         __method____main____Vector__char__1____pushBack__char__1:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: val
               STACKGET __main____Vector__char__1__pushBack__val 1
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Greater Than or Equal to
                           // LHS
                              // Addition
                                 // LHS
                                    // Member Accessor
                                       // LHS
                                          // This keyword
                                             PUSH __this
                                       // RHS
                                          PUSH __field____main____Vector__char__1____size
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                 // RHS
                                    // Int Literal
                                       PUSH 1
                                 POP __rhs
                                 POP __lhs
                                 ADD __res __lhs __rhs
                                 PUSH __res
                           // RHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__char__1____capacity
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           POP __rhs
                           POP __lhs
                           GE __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__2
                     // Body
                        //------------------------------------------------
                        // Code Block
                           // Assignment - '='
                              // RHS
                                 // Multiplication
                                    // LHS
                                       // Member Accessor
                                          // LHS
                                             // This keyword
                                                PUSH __this
                                          // RHS
                                             PUSH __field____main____Vector__char__1____capacity
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    // RHS
                                       // Int Literal
                                          PUSH 2
                                    POP __rhs
                                    POP __lhs
                                    MULTIPLY __res __lhs __rhs
                                    PUSH __res
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__char__1____capacity
                                    POP __child
                                    POP __parent
                                    POP __rhs
                              ASSIGN __parent[__child] __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           // Assignment - '='
                              // RHS
                                 // Array Allocator
                                    // Member Accessor
                                       // LHS
                                          // This keyword
                                             PUSH __this
                                       // RHS
                                          PUSH __field____main____Vector__char__1____capacity
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                    POP __size
                                    MALLOC __ptr __size
                                    PUSH __ptr
                              // LHS
                                 // Variable Declaration
                                    ASSIGN __main____Vector__char__1__pushBack__block__1__if__2__block__3__nData 0
                              POP __rhs
                              ASSIGN __main____Vector__char__1__pushBack__block__1__if__2__block__3__nData __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           //---------------------------------------------
                           // For-Loop
                           // Init
                              // Assignment - '='
                                 // RHS
                                    // Int Literal
                                       PUSH 0
                                 // LHS
                                    // Variable Declaration
                                       ASSIGN __main____Vector__char__1__pushBack__block__1__if__2__block__3__for__4__i 0
                                 POP __rhs
                                 ASSIGN __main____Vector__char__1__pushBack__block__1__if__2__block__3__for__4__i __rhs
                                 PUSH __rhs
                           JUMP __forcond__4
                           __for__4:
                              // Update
                                 // Pre-Increment
                                    // RHS
                                       // Identifier - i
                                          PUSH __main____Vector__char__1__pushBack__block__1__if__2__block__3__for__4__i
                                    POP __rhs
                                    ADD __main____Vector__char__1__pushBack__block__1__if__2__block__3__for__4__i __main____Vector__char__1__pushBack__block__1__if__2__block__3__for__4__i 1
                                    ASSIGN __res __main____Vector__char__1__pushBack__block__1__if__2__block__3__for__4__i
                                    PUSH __res
                              __forcond__4:
                              // Condition
                                 // Less Than
                                    // LHS
                                       // Identifier - i
                                          PUSH __main____Vector__char__1__pushBack__block__1__if__2__block__3__for__4__i
                                    // RHS
                                       // Member Accessor
                                          // LHS
                                             // This keyword
                                                PUSH __this
                                          // RHS
                                             PUSH __field____main____Vector__char__1____size
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    POP __rhs
                                    POP __lhs
                                    LT __res __lhs __rhs
                                    PUSH __res
                                 POP __cond
                                 CMP __cond 0
                                 JEQ __endfor__4
                              // Body
                                 //---------------------------------------
                                 // Code Block
                                    // Assignment - '='
                                       // RHS
                                          // Subscript
                                             // LHS
                                                // Member Accessor
                                                   // LHS
                                                      // This keyword
                                                         PUSH __this
                                                   // RHS
                                                      PUSH __field____main____Vector__char__1____data
                                                   POP __child
                                                   POP __parent
                                                   PUSH __parent[__child]
                                             // OFFSET
                                                // Identifier - i
                                                   PUSH __main____Vector__char__1__pushBack__block__1__if__2__block__3__for__4__i
                                             POP __offset
                                             POP __pointer
                                             PUSH __pointer[__offset]
                                       // LHS
                                          // Subscript assignment
                                             // LHS
                                                // Identifier - nData
                                                   PUSH __main____Vector__char__1__pushBack__block__1__if__2__block__3__nData
                                             // OFFSET
                                                // Identifier - i
                                                   PUSH __main____Vector__char__1__pushBack__block__1__if__2__block__3__for__4__i
                                             POP __offset
                                             POP __pointer
                                       POP __rhs
                                       ASSIGN __pointer[__offset] __rhs
                                       PUSH __rhs
                                    // Statement results can be ignored
                                    POP __void
                                 //---------------------------------------
                              // Repeat
                              JUMP __for__4
                              // End of For
                              __endfor__4:
                           //---------------------------------------------
                           // Free Operator
                              // RHS
                                 // Member Accessor
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__char__1____data
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              // Free array
                              POP __array
                              FREE __array
                              PUSH __array
                           // Statement results can be ignored
                           POP __void
                           // Assignment - '='
                              // RHS
                                 // Identifier - nData
                                    PUSH __main____Vector__char__1__pushBack__block__1__if__2__block__3__nData
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__char__1____data
                                    POP __child
                                    POP __parent
                                    POP __rhs
                              ASSIGN __parent[__child] __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                        //------------------------------------------------
                     JUMP __endif__2
                     // End of if
                     __endif__2:
                  //------------------------------------------------------
                  // Assignment - '='
                     // RHS
                        // Identifier - val
                           PUSH __main____Vector__char__1__pushBack__val
                     // LHS
                        // Subscript assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__char__1____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // OFFSET
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__char__1____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           POP __offset
                           POP __pointer
                     POP __rhs
                     ASSIGN __pointer[__offset] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Pre-Increment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char__1____size
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     POP __rhs
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char__1____size
                           POP __child
                           POP __parent
                           ADD __parent[__child] __parent[__child] 1
                           ASSIGN __res __parent[__child]
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__char__1____pushBack__char__1:
         // End Method Declaration - __method____main____Vector__char__1____pushBack__char__1
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:char[]:>::popBack() -> char[]
         JUMP __end__method____main____Vector__char__1____popBack
         __method____main____Vector__char__1____popBack:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__char__1____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Pre-Decrement
                              // RHS
                                 // Member Accessor
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__char__1____size
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              POP __rhs
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__char__1____size
                                    POP __child
                                    POP __parent
                                    SUBTRACT __parent[__child] __parent[__child] 1
                                    ASSIGN __res __parent[__child]
                              PUSH __res
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__char__1____popBack:
         // End Method Declaration - __method____main____Vector__char__1____popBack
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:char[]:>::get(int) -> char[]
         JUMP __end__method____main____Vector__char__1____get__int
         __method____main____Vector__char__1____get__int:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: index
               STACKGET __main____Vector__char__1__get__index 1
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__char__1____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Identifier - index
                              PUSH __main____Vector__char__1__get__index
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__char__1____get__int:
         // End Method Declaration - __method____main____Vector__char__1____get__int
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:char[]:>::set(int, char[]) -> void
         JUMP __end__method____main____Vector__char__1____set__int__char__1
         __method____main____Vector__char__1____set__int__char__1:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: index
               STACKGET __main____Vector__char__1__set__index 1
               // Param: value
               STACKGET __main____Vector__char__1__set__value 2
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Identifier - value
                           PUSH __main____Vector__char__1__set__value
                     // LHS
                        // Subscript assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__char__1____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // OFFSET
                              // Identifier - index
                                 PUSH __main____Vector__char__1__set__index
                           POP __offset
                           POP __pointer
                     POP __rhs
                     ASSIGN __pointer[__offset] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__char__1____set__int__char__1:
         // End Method Declaration - __method____main____Vector__char__1____set__int__char__1
         //---------------------------------------------------------------

      __endclass____main____Vector__char__1:
      // End Class Declaration - __main____Vector__char__1
      //==================================================================

// End Class Template - 
//========================================================================

// Assignment - '='
   // RHS
      // Function Call - input() -> char[]
         // Arguments
         // Pushing args in reverse order
         // *** input
         CALL input
         // Remove args
         RESPONSE __retval
         PUSH __retval
   // LHS
      // Variable Declaration
         ASSIGN __main__line 0
   POP __rhs
   ASSIGN __main__line __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Assignment - '='
   // RHS
      // Int Literal
         PUSH 0
   // LHS
      // Variable Declaration
         ASSIGN __main__total 0
   POP __rhs
   ASSIGN __main__total __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Assignment - '='
   // RHS
      // Constructor Call - Vector<:char[]:>::Vector() -> Vector<:char[]:>
         // Arguments
         // Pushing args in reverse order
         CALL __ctor____main____Vector__char__1____Vector
         // Remove args
         RESPONSE __retval
         PUSH __retval
   // LHS
      // Variable Declaration
         ASSIGN __main__lines 0
   POP __rhs
   ASSIGN __main__lines __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
//------------------------------------------------------------------------
// While-Loop
__while__9:
   // Condition
      // Not Equal
         // LHS
            // Subscript
               // LHS
                  // Identifier - line
                     PUSH __main__line
               // OFFSET
                  // Int Literal
                     PUSH 0
               POP __offset
               POP __pointer
               PUSH __pointer[__offset]
         // RHS
            // Char Literal
               PUSH '$'
         POP __rhs
         POP __lhs
         NEQUAL __res __lhs __rhs
         PUSH __res
      POP __cond
      CMP __cond 0
      JEQ __endwhile__9
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Method Call - Vector<:char[]:>::pushBack(char[]) -> void
            // LHS
               // Identifier - lines
                  PUSH __main__lines
            // RHS
            // Arguments
               // Identifier - line
                  PUSH __main__line
               POP __arg0
            POP __obj
            // Pushing args in reverse order
            PUSH __arg0
            PUSH __obj
            CALL __method____main____Vector__char__1____pushBack__char__1
            POP __void
            // Remove args
            POP __void
            RESPONSE __retval
            PUSH __retval
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Function Call - input() -> char[]
                  // Arguments
                  // Pushing args in reverse order
                  // *** input
                  CALL input
                  // Remove args
                  RESPONSE __retval
                  PUSH __retval
            POP __rhs
            ASSIGN __main__line __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
      //------------------------------------------------------------------
   JUMP __while__9
   // End of While
   __endwhile__9:
//------------------------------------------------------------------------
//------------------------------------------------------------------------
// For-Loop
// Init
   // Assignment - '='
      // RHS
         // Int Literal
            PUSH 0
      // LHS
         // Variable Declaration
            ASSIGN __main__for__11__l 0
      POP __rhs
      ASSIGN __main__for__11__l __rhs
      PUSH __rhs
JUMP __forcond__11
__for__11:
   // Update
      // Pre-Increment
         // RHS
            // Identifier - l
               PUSH __main__for__11__l
         POP __rhs
         ADD __main__for__11__l __main__for__11__l 1
         ASSIGN __res __main__for__11__l
         PUSH __res
   __forcond__11:
   // Condition
      // Less Than
         // LHS
            // Identifier - l
               PUSH __main__for__11__l
         // RHS
            // Member Accessor
               // LHS
                  // Identifier - lines
                     PUSH __main__lines
               // RHS
                  PUSH __field____main____Vector__char__1____size
               POP __child
               POP __parent
               PUSH __parent[__child]
         POP __rhs
         POP __lhs
         LT __res __lhs __rhs
         PUSH __res
      POP __cond
      CMP __cond 0
      JEQ __endfor__11
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Assignment - '='
            // RHS
               // Subscript
                  // LHS
                     // Member Accessor
                        // LHS
                           // Identifier - lines
                              PUSH __main__lines
                        // RHS
                           PUSH __field____main____Vector__char__1____data
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                  // OFFSET
                     // Identifier - l
                        PUSH __main__for__11__l
                  POP __offset
                  POP __pointer
                  PUSH __pointer[__offset]
            // LHS
               // Variable Declaration
                  ASSIGN __main__for__11__block__12__line 0
            POP __rhs
            ASSIGN __main__for__11__block__12__line __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Int Literal
                  PUSH 0
            // LHS
               // Variable Declaration
                  ASSIGN __main__for__11__block__12__indexcomma 0
            POP __rhs
            ASSIGN __main__for__11__block__12__indexcomma __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Int Literal
                  PUSH 0
            // LHS
               // Variable Declaration
                  ASSIGN __main__for__11__block__12__indexdash0 0
            POP __rhs
            ASSIGN __main__for__11__block__12__indexdash0 __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Int Literal
                  PUSH 0
            // LHS
               // Variable Declaration
                  ASSIGN __main__for__11__block__12__indexdash1 0
            POP __rhs
            ASSIGN __main__for__11__block__12__indexdash1 __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // For-Loop
         // Init
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Variable Declaration
                     ASSIGN __main__for__11__block__12__for__13__i 0
               POP __rhs
               ASSIGN __main__for__11__block__12__for__13__i __rhs
               PUSH __rhs
         JUMP __forcond__13
         __for__13:
            // Update
               // Pre-Increment
                  // RHS
                     // Identifier - i
                        PUSH __main__for__11__block__12__for__13__i
                  POP __rhs
                  ADD __main__for__11__block__12__for__13__i __main__for__11__block__12__for__13__i 1
                  ASSIGN __res __main__for__11__block__12__for__13__i
                  PUSH __res
            __forcond__13:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - i
                        PUSH __main__for__11__block__12__for__13__i
                  // RHS
                     // Sizeof Operator
                        // RHS
                           // Identifier - line
                              PUSH __main__for__11__block__12__line
                        // Calculate array size
                        POP __array
                        SIZEOF __size __array
                        PUSH __size
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endfor__13
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // AND
                           // LHS
                              // Equal
                                 // LHS
                                    // Subscript
                                       // LHS
                                          // Identifier - line
                                             PUSH __main__for__11__block__12__line
                                       // OFFSET
                                          // Identifier - i
                                             PUSH __main__for__11__block__12__for__13__i
                                       POP __offset
                                       POP __pointer
                                       PUSH __pointer[__offset]
                                 // RHS
                                    // Char Literal
                                       PUSH '-'
                                 POP __rhs
                                 POP __lhs
                                 EQUAL __res __lhs __rhs
                                 PUSH __res
                           // RHS
                              // Equal
                                 // LHS
                                    // Identifier - indexcomma
                                       PUSH __main__for__11__block__12__indexcomma
                                 // RHS
                                    // Int Literal
                                       PUSH 0
                                 POP __rhs
                                 POP __lhs
                                 EQUAL __res __lhs __rhs
                                 PUSH __res
                           POP __rhs
                           POP __lhs
                           AND __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __elif__15x0
                     // Body
                        // Assignment - '='
                           // RHS
                              // Identifier - i
                                 PUSH __main__for__11__block__12__for__13__i
                           POP __rhs
                           ASSIGN __main__for__11__block__12__indexdash0 __rhs
                           PUSH __rhs
                        // Statement results can be ignored
                        POP __void
                     JUMP __endif__15
                     //---------------------------------------------------
                     // Elif-Statement
                     __elif__15x0:
                        // Condition
                        // Equal
                           // LHS
                              // Subscript
                                 // LHS
                                    // Identifier - line
                                       PUSH __main__for__11__block__12__line
                                 // OFFSET
                                    // Identifier - i
                                       PUSH __main__for__11__block__12__for__13__i
                                 POP __offset
                                 POP __pointer
                                 PUSH __pointer[__offset]
                           // RHS
                              // Char Literal
                                 PUSH '-'
                           POP __rhs
                           POP __lhs
                           EQUAL __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__15
                        // Body
                        // Assignment - '='
                           // RHS
                              // Identifier - i
                                 PUSH __main__for__11__block__12__for__13__i
                           POP __rhs
                           ASSIGN __main__for__11__block__12__indexdash1 __rhs
                           PUSH __rhs
                        // Statement results can be ignored
                        POP __void
                        JUMP __endif__15
                     //---------------------------------------------------
                     // End of if
                     __endif__15:
                  //------------------------------------------------------
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Equal
                           // LHS
                              // Subscript
                                 // LHS
                                    // Identifier - line
                                       PUSH __main__for__11__block__12__line
                                 // OFFSET
                                    // Identifier - i
                                       PUSH __main__for__11__block__12__for__13__i
                                 POP __offset
                                 POP __pointer
                                 PUSH __pointer[__offset]
                           // RHS
                              // Char Literal
                                 PUSH ','
                           POP __rhs
                           POP __lhs
                           EQUAL __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__16
                     // Body
                        // Assignment - '='
                           // RHS
                              // Identifier - i
                                 PUSH __main__for__11__block__12__for__13__i
                           POP __rhs
                           ASSIGN __main__for__11__block__12__indexcomma __rhs
                           PUSH __rhs
                        // Statement results can be ignored
                        POP __void
                     JUMP __endif__16
                     // End of if
                     __endif__16:
                  //------------------------------------------------------
               //---------------------------------------------------------
            // Repeat
            JUMP __for__13
            // End of For
            __endfor__13:
         //---------------------------------------------------------------
         // Assignment - '='
            // RHS
               // Int Literal
                  PUSH 0
            // LHS
               // Variable Declaration
                  ASSIGN __main__for__11__block__12__begin 0
            POP __rhs
            ASSIGN __main__for__11__block__12__begin __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Identifier - indexdash0
                  PUSH __main__for__11__block__12__indexdash0
            // LHS
               // Variable Declaration
                  ASSIGN __main__for__11__block__12__end 0
            POP __rhs
            ASSIGN __main__for__11__block__12__end __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Int Literal
                  PUSH 0
            // LHS
               // Variable Declaration
                  ASSIGN __main__for__11__block__12__iter 0
            POP __rhs
            ASSIGN __main__for__11__block__12__iter __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Array Allocator
                  // Subtraction
                     // LHS
                        // Identifier - end
                           PUSH __main__for__11__block__12__end
                     // RHS
                        // Identifier - begin
                           PUSH __main__for__11__block__12__begin
                     POP __rhs
                     POP __lhs
                     SUBTRACT __res __lhs __rhs
                     PUSH __res
                  POP __size
                  MALLOC __ptr __size
                  PUSH __ptr
            // LHS
               // Variable Declaration
                  ASSIGN __main__for__11__block__12__a_ 0
            POP __rhs
            ASSIGN __main__for__11__block__12__a_ __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // For-Loop
         // Init
            // Assignment - '='
               // RHS
                  // Identifier - begin
                     PUSH __main__for__11__block__12__begin
               // LHS
                  // Variable Declaration
                     ASSIGN __main__for__11__block__12__for__17__i 0
               POP __rhs
               ASSIGN __main__for__11__block__12__for__17__i __rhs
               PUSH __rhs
         JUMP __forcond__17
         __for__17:
            // Update
               // Pre-Increment
                  // RHS
                     // Identifier - i
                        PUSH __main__for__11__block__12__for__17__i
                  POP __rhs
                  ADD __main__for__11__block__12__for__17__i __main__for__11__block__12__for__17__i 1
                  ASSIGN __res __main__for__11__block__12__for__17__i
                  PUSH __res
            __forcond__17:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - i
                        PUSH __main__for__11__block__12__for__17__i
                  // RHS
                     // Identifier - end
                        PUSH __main__for__11__block__12__end
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endfor__17
            // Body
               // Assignment - '='
                  // RHS
                     // Subscript
                        // LHS
                           // Identifier - line
                              PUSH __main__for__11__block__12__line
                        // OFFSET
                           // Identifier - i
                              PUSH __main__for__11__block__12__for__17__i
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                  // LHS
                     // Subscript assignment
                        // LHS
                           // Identifier - a_
                              PUSH __main__for__11__block__12__a_
                        // OFFSET
                           // Post-Increment
                              ASSIGN __res __main__for__11__block__12__iter
                              ADD __main__for__11__block__12__iter __main__for__11__block__12__iter 1
                              PUSH __res
                        POP __offset
                        POP __pointer
                  POP __rhs
                  ASSIGN __pointer[__offset] __rhs
                  PUSH __rhs
               // Statement results can be ignored
               POP __void
            // Repeat
            JUMP __for__17
            // End of For
            __endfor__17:
         //---------------------------------------------------------------
         // Assignment - '='
            // RHS
               // Addition
                  // LHS
                     // Identifier - indexdash0
                        PUSH __main__for__11__block__12__indexdash0
                  // RHS
                     // Int Literal
                        PUSH 1
                  POP __rhs
                  POP __lhs
                  ADD __res __lhs __rhs
                  PUSH __res
            POP __rhs
            ASSIGN __main__for__11__block__12__begin __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Identifier - indexcomma
                  PUSH __main__for__11__block__12__indexcomma
            POP __rhs
            ASSIGN __main__for__11__block__12__end __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Int Literal
                  PUSH 0
            POP __rhs
            ASSIGN __main__for__11__block__12__iter __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Array Allocator
                  // Subtraction
                     // LHS
                        // Identifier - end
                           PUSH __main__for__11__block__12__end
                     // RHS
                        // Identifier - begin
                           PUSH __main__for__11__block__12__begin
                     POP __rhs
                     POP __lhs
                     SUBTRACT __res __lhs __rhs
                     PUSH __res
                  POP __size
                  MALLOC __ptr __size
                  PUSH __ptr
            // LHS
               // Variable Declaration
                  ASSIGN __main__for__11__block__12__b_ 0
            POP __rhs
            ASSIGN __main__for__11__block__12__b_ __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // For-Loop
         // Init
            // Assignment - '='
               // RHS
                  // Identifier - begin
                     PUSH __main__for__11__block__12__begin
               // LHS
                  // Variable Declaration
                     ASSIGN __main__for__11__block__12__for__18__i 0
               POP __rhs
               ASSIGN __main__for__11__block__12__for__18__i __rhs
               PUSH __rhs
         JUMP __forcond__18
         __for__18:
            // Update
               // Pre-Increment
                  // RHS
                     // Identifier - i
                        PUSH __main__for__11__block__12__for__18__i
                  POP __rhs
                  ADD __main__for__11__block__12__for__18__i __main__for__11__block__12__for__18__i 1
                  ASSIGN __res __main__for__11__block__12__for__18__i
                  PUSH __res
            __forcond__18:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - i
                        PUSH __main__for__11__block__12__for__18__i
                  // RHS
                     // Identifier - end
                        PUSH __main__for__11__block__12__end
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endfor__18
            // Body
               // Assignment - '='
                  // RHS
                     // Subscript
                        // LHS
                           // Identifier - line
                              PUSH __main__for__11__block__12__line
                        // OFFSET
                           // Identifier - i
                              PUSH __main__for__11__block__12__for__18__i
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                  // LHS
                     // Subscript assignment
                        // LHS
                           // Identifier - b_
                              PUSH __main__for__11__block__12__b_
                        // OFFSET
                           // Post-Increment
                              ASSIGN __res __main__for__11__block__12__iter
                              ADD __main__for__11__block__12__iter __main__for__11__block__12__iter 1
                              PUSH __res
                        POP __offset
                        POP __pointer
                  POP __rhs
                  ASSIGN __pointer[__offset] __rhs
                  PUSH __rhs
               // Statement results can be ignored
               POP __void
            // Repeat
            JUMP __for__18
            // End of For
            __endfor__18:
         //---------------------------------------------------------------
         // Assignment - '='
            // RHS
               // Addition
                  // LHS
                     // Identifier - indexcomma
                        PUSH __main__for__11__block__12__indexcomma
                  // RHS
                     // Int Literal
                        PUSH 1
                  POP __rhs
                  POP __lhs
                  ADD __res __lhs __rhs
                  PUSH __res
            POP __rhs
            ASSIGN __main__for__11__block__12__begin __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Identifier - indexdash1
                  PUSH __main__for__11__block__12__indexdash1
            POP __rhs
            ASSIGN __main__for__11__block__12__end __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Int Literal
                  PUSH 0
            POP __rhs
            ASSIGN __main__for__11__block__12__iter __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Array Allocator
                  // Subtraction
                     // LHS
                        // Identifier - end
                           PUSH __main__for__11__block__12__end
                     // RHS
                        // Identifier - begin
                           PUSH __main__for__11__block__12__begin
                     POP __rhs
                     POP __lhs
                     SUBTRACT __res __lhs __rhs
                     PUSH __res
                  POP __size
                  MALLOC __ptr __size
                  PUSH __ptr
            // LHS
               // Variable Declaration
                  ASSIGN __main__for__11__block__12__c_ 0
            POP __rhs
            ASSIGN __main__for__11__block__12__c_ __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // For-Loop
         // Init
            // Assignment - '='
               // RHS
                  // Identifier - begin
                     PUSH __main__for__11__block__12__begin
               // LHS
                  // Variable Declaration
                     ASSIGN __main__for__11__block__12__for__19__i 0
               POP __rhs
               ASSIGN __main__for__11__block__12__for__19__i __rhs
               PUSH __rhs
         JUMP __forcond__19
         __for__19:
            // Update
               // Pre-Increment
                  // RHS
                     // Identifier - i
                        PUSH __main__for__11__block__12__for__19__i
                  POP __rhs
                  ADD __main__for__11__block__12__for__19__i __main__for__11__block__12__for__19__i 1
                  ASSIGN __res __main__for__11__block__12__for__19__i
                  PUSH __res
            __forcond__19:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - i
                        PUSH __main__for__11__block__12__for__19__i
                  // RHS
                     // Identifier - end
                        PUSH __main__for__11__block__12__end
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endfor__19
            // Body
               // Assignment - '='
                  // RHS
                     // Subscript
                        // LHS
                           // Identifier - line
                              PUSH __main__for__11__block__12__line
                        // OFFSET
                           // Identifier - i
                              PUSH __main__for__11__block__12__for__19__i
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                  // LHS
                     // Subscript assignment
                        // LHS
                           // Identifier - c_
                              PUSH __main__for__11__block__12__c_
                        // OFFSET
                           // Post-Increment
                              ASSIGN __res __main__for__11__block__12__iter
                              ADD __main__for__11__block__12__iter __main__for__11__block__12__iter 1
                              PUSH __res
                        POP __offset
                        POP __pointer
                  POP __rhs
                  ASSIGN __pointer[__offset] __rhs
                  PUSH __rhs
               // Statement results can be ignored
               POP __void
            // Repeat
            JUMP __for__19
            // End of For
            __endfor__19:
         //---------------------------------------------------------------
         // Assignment - '='
            // RHS
               // Addition
                  // LHS
                     // Identifier - indexdash1
                        PUSH __main__for__11__block__12__indexdash1
                  // RHS
                     // Int Literal
                        PUSH 1
                  POP __rhs
                  POP __lhs
                  ADD __res __lhs __rhs
                  PUSH __res
            POP __rhs
            ASSIGN __main__for__11__block__12__begin __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Subtraction
                  // LHS
                     // Sizeof Operator
                        // RHS
                           // Identifier - line
                              PUSH __main__for__11__block__12__line
                        // Calculate array size
                        POP __array
                        SIZEOF __size __array
                        PUSH __size
                  // RHS
                     // Int Literal
                        PUSH 1
                  POP __rhs
                  POP __lhs
                  SUBTRACT __res __lhs __rhs
                  PUSH __res
            POP __rhs
            ASSIGN __main__for__11__block__12__end __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Int Literal
                  PUSH 0
            POP __rhs
            ASSIGN __main__for__11__block__12__iter __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Array Allocator
                  // Subtraction
                     // LHS
                        // Identifier - end
                           PUSH __main__for__11__block__12__end
                     // RHS
                        // Identifier - begin
                           PUSH __main__for__11__block__12__begin
                     POP __rhs
                     POP __lhs
                     SUBTRACT __res __lhs __rhs
                     PUSH __res
                  POP __size
                  MALLOC __ptr __size
                  PUSH __ptr
            // LHS
               // Variable Declaration
                  ASSIGN __main__for__11__block__12__d_ 0
            POP __rhs
            ASSIGN __main__for__11__block__12__d_ __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // For-Loop
         // Init
            // Assignment - '='
               // RHS
                  // Identifier - begin
                     PUSH __main__for__11__block__12__begin
               // LHS
                  // Variable Declaration
                     ASSIGN __main__for__11__block__12__for__20__i 0
               POP __rhs
               ASSIGN __main__for__11__block__12__for__20__i __rhs
               PUSH __rhs
         JUMP __forcond__20
         __for__20:
            // Update
               // Pre-Increment
                  // RHS
                     // Identifier - i
                        PUSH __main__for__11__block__12__for__20__i
                  POP __rhs
                  ADD __main__for__11__block__12__for__20__i __main__for__11__block__12__for__20__i 1
                  ASSIGN __res __main__for__11__block__12__for__20__i
                  PUSH __res
            __forcond__20:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - i
                        PUSH __main__for__11__block__12__for__20__i
                  // RHS
                     // Identifier - end
                        PUSH __main__for__11__block__12__end
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endfor__20
            // Body
               // Assignment - '='
                  // RHS
                     // Subscript
                        // LHS
                           // Identifier - line
                              PUSH __main__for__11__block__12__line
                        // OFFSET
                           // Identifier - i
                              PUSH __main__for__11__block__12__for__20__i
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                  // LHS
                     // Subscript assignment
                        // LHS
                           // Identifier - d_
                              PUSH __main__for__11__block__12__d_
                        // OFFSET
                           // Post-Increment
                              ASSIGN __res __main__for__11__block__12__iter
                              ADD __main__for__11__block__12__iter __main__for__11__block__12__iter 1
                              PUSH __res
                        POP __offset
                        POP __pointer
                  POP __rhs
                  ASSIGN __pointer[__offset] __rhs
                  PUSH __rhs
               // Statement results can be ignored
               POP __void
            // Repeat
            JUMP __for__20
            // End of For
            __endfor__20:
         //---------------------------------------------------------------
         // Assignment - '='
            // RHS
               // Function Call - stringToInt(char[]) -> int
                  // Arguments
                     // Identifier - a_
                        PUSH __main__for__11__block__12__a_
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** stringToInt
                  CALL stringToInt__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__for__11__block__12__begin0 0
            POP __rhs
            ASSIGN __main__for__11__block__12__begin0 __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Function Call - stringToInt(char[]) -> int
                  // Arguments
                     // Identifier - b_
                        PUSH __main__for__11__block__12__b_
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** stringToInt
                  CALL stringToInt__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__for__11__block__12__end0 0
            POP __rhs
            ASSIGN __main__for__11__block__12__end0 __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Function Call - stringToInt(char[]) -> int
                  // Arguments
                     // Identifier - c_
                        PUSH __main__for__11__block__12__c_
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** stringToInt
                  CALL stringToInt__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__for__11__block__12__begin1 0
            POP __rhs
            ASSIGN __main__for__11__block__12__begin1 __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Function Call - stringToInt(char[]) -> int
                  // Arguments
                     // Identifier - d_
                        PUSH __main__for__11__block__12__d_
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** stringToInt
                  CALL stringToInt__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__for__11__block__12__end1 0
            POP __rhs
            ASSIGN __main__for__11__block__12__end1 __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Int Literal
                  PUSH 0
            // LHS
               // Variable Declaration
                  ASSIGN __main__for__11__block__12__overlaps 0
            POP __rhs
            ASSIGN __main__for__11__block__12__overlaps __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // AND
                  // LHS
                     // Greater Than or Equal to
                        // LHS
                           // Identifier - begin0
                              PUSH __main__for__11__block__12__begin0
                        // RHS
                           // Identifier - begin1
                              PUSH __main__for__11__block__12__begin1
                        POP __rhs
                        POP __lhs
                        GE __res __lhs __rhs
                        PUSH __res
                  // RHS
                     // Less Than or Equal to
                        // LHS
                           // Identifier - begin0
                              PUSH __main__for__11__block__12__begin0
                        // RHS
                           // Identifier - end1
                              PUSH __main__for__11__block__12__end1
                        POP __rhs
                        POP __lhs
                        LE __res __lhs __rhs
                        PUSH __res
                  POP __rhs
                  POP __lhs
                  AND __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__21
            // Body
               // Assignment - '='
                  // RHS
                     // Int Literal
                        PUSH 1
                  POP __rhs
                  ASSIGN __main__for__11__block__12__overlaps __rhs
                  PUSH __rhs
               // Statement results can be ignored
               POP __void
            JUMP __endif__21
            // End of if
            __endif__21:
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // AND
                  // LHS
                     // Greater Than or Equal to
                        // LHS
                           // Identifier - end0
                              PUSH __main__for__11__block__12__end0
                        // RHS
                           // Identifier - begin1
                              PUSH __main__for__11__block__12__begin1
                        POP __rhs
                        POP __lhs
                        GE __res __lhs __rhs
                        PUSH __res
                  // RHS
                     // Less Than or Equal to
                        // LHS
                           // Identifier - end0
                              PUSH __main__for__11__block__12__end0
                        // RHS
                           // Identifier - end1
                              PUSH __main__for__11__block__12__end1
                        POP __rhs
                        POP __lhs
                        LE __res __lhs __rhs
                        PUSH __res
                  POP __rhs
                  POP __lhs
                  AND __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__22
            // Body
               // Assignment - '='
                  // RHS
                     // Int Literal
                        PUSH 1
                  POP __rhs
                  ASSIGN __main__for__11__block__12__overlaps __rhs
                  PUSH __rhs
               // Statement results can be ignored
               POP __void
            JUMP __endif__22
            // End of if
            __endif__22:
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // AND
                  // LHS
                     // Greater Than or Equal to
                        // LHS
                           // Identifier - begin1
                              PUSH __main__for__11__block__12__begin1
                        // RHS
                           // Identifier - begin0
                              PUSH __main__for__11__block__12__begin0
                        POP __rhs
                        POP __lhs
                        GE __res __lhs __rhs
                        PUSH __res
                  // RHS
                     // Less Than or Equal to
                        // LHS
                           // Identifier - begin1
                              PUSH __main__for__11__block__12__begin1
                        // RHS
                           // Identifier - end0
                              PUSH __main__for__11__block__12__end0
                        POP __rhs
                        POP __lhs
                        LE __res __lhs __rhs
                        PUSH __res
                  POP __rhs
                  POP __lhs
                  AND __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__23
            // Body
               // Assignment - '='
                  // RHS
                     // Int Literal
                        PUSH 1
                  POP __rhs
                  ASSIGN __main__for__11__block__12__overlaps __rhs
                  PUSH __rhs
               // Statement results can be ignored
               POP __void
            JUMP __endif__23
            // End of if
            __endif__23:
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // AND
                  // LHS
                     // Greater Than or Equal to
                        // LHS
                           // Identifier - end1
                              PUSH __main__for__11__block__12__end1
                        // RHS
                           // Identifier - begin0
                              PUSH __main__for__11__block__12__begin0
                        POP __rhs
                        POP __lhs
                        GE __res __lhs __rhs
                        PUSH __res
                  // RHS
                     // Less Than or Equal to
                        // LHS
                           // Identifier - end1
                              PUSH __main__for__11__block__12__end1
                        // RHS
                           // Identifier - end0
                              PUSH __main__for__11__block__12__end0
                        POP __rhs
                        POP __lhs
                        LE __res __lhs __rhs
                        PUSH __res
                  POP __rhs
                  POP __lhs
                  AND __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__24
            // Body
               // Assignment - '='
                  // RHS
                     // Int Literal
                        PUSH 1
                  POP __rhs
                  ASSIGN __main__for__11__block__12__overlaps __rhs
                  PUSH __rhs
               // Statement results can be ignored
               POP __void
            JUMP __endif__24
            // End of if
            __endif__24:
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Identifier - overlaps
                  PUSH __main__for__11__block__12__overlaps
               POP __cond
               CMP __cond 0
               JEQ __endif__25
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Post-Increment
                     ASSIGN __res __main__total
                     ADD __main__total __main__total 1
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            JUMP __endif__25
            // End of if
            __endif__25:
         //---------------------------------------------------------------
      //------------------------------------------------------------------
   // Repeat
   JUMP __for__11
   // End of For
   __endfor__11:
//------------------------------------------------------------------------
// Function Call - println(int) -> void
   // Arguments
      // Identifier - total
         PUSH __main__total
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__int
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
//========================================================================
//### END OF CODE ########################################################
//========================================================================

