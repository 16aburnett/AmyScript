// AmyAssembly compiled from AmyScript
//========================================================================

//========================================================================
//### LIBRARY CODE #######################################################
//========================================================================

// AmyScript Built-in library
// Author: Amy Burnett
//========================================================================
// Global Builtin Variables

    assign __null 0

//========================================================================
// dont execute library functions 

jump __endOfLibrary

//========================================================================
// Prints a given string to the screen
// void print (char[] stringToPrint);
__builtin__print__char__1:
    // grab string
    stackget __str 0
    // print each char
    // init
    assign __i 0
__print__char__1__loop:
    // cond
    cmp __str[__i] 0
    jeq __print__char__1__endloop
    // Body
    print __str[__i]
    // update
    add __i __i 1
    // repeat
    jump __print__char__1__loop
__print__char__1__endloop:
    return 0

//========================================================================
// Prints an int to the screen
// void print (int intToPrint);
__builtin__print__int:
    stackget __str 0
    print __str
    return 0

//========================================================================
// Prints a float to the screen
// void print (float floatToPrint);
__builtin__print__float:
    stackget __str 0
    print __str
    return 0

//========================================================================
// Prints a char to the screen
// void print (char charToPrint);
__builtin__print__char:
    // grab string
    stackget __char 0
    print __char
    return 0

//========================================================================
// Prints an enum's integer value 
// void print (Enum e);
__builtin__print__Enum:
    stackget __e 0
    print __e
    return 0

//========================================================================
// Prints a given string to the screen with a newline at the end
// void println (char[] stringToPrint);
__builtin__println__char__1:
    // grab string
    stackget __str 0
    // print each char
    // init
    assign __i 0
__println__char__1__loop:
    // cond
    cmp __str[__i] 0
    jeq __println__char__1__endloop
    // Body
    print __str[__i]
    // update
    add __i __i 1
    // repeat
    jump __println__char__1__loop
__println__char__1__endloop:
    println
    return 0

//========================================================================
// Prints an int to the screen with a newline
// void print (int intToPrint);
__builtin__println__int:
    stackget __str 0
    println __str
    return 0

//========================================================================
// Prints a float to the screen with a newline
// void println (float floatToPrint);
__builtin__println__float:
    stackget __str 0
    println __str
    return 0

//========================================================================
// Prints a char to the screen with a newline
// void println (char charToPrint);
__builtin__println__char:
    // grab string
    stackget __char 0
    println __char
    return 0

//========================================================================
// Prints an enum's integer value with a newline
// void println (Enum e);
__builtin__println__Enum:
    stackget __e 0
    println __e
    return 0

//========================================================================
// Prints a newline to the console
// void println ();
__builtin__println:
    println 
    return 0

//========================================================================
// grabs input from the console 
// char[] input ();
__builtin__input:
    input __line
    return __line

//========================================================================
// exits/stops the program 
__builtin__exit:
    halt

//========================================================================

// Exits the program with the given exit code 
// void exit(int exit_code)
// - exit_code : 
__builtin__exit__int:
    // ** not implemented for amyasm
    halt 

//========================================================================
// returns default float value
// float float ();
__builtin__float:
    return 0.0

//========================================================================
// converts int to float
// float intToFloat (int);
__builtin__intToFloat__int:
    stackget val 0
    itof res val
    return res

//========================================================================
// parses a float from a given char[]
// float stringToFloat (char[]);
__builtin__stringToFloat__char__1:
    stackget val 0
    stof res val
    return res

//========================================================================
// returns default int value
// int int ();
__builtin__int:
    return 0

//========================================================================
// returns default char value
// char char ();
__builtin__char:
    return '0'

//========================================================================
// converts float to int
// int floatToInt (float);
__builtin__floatToInt__float:
    stackget val 0
    ftoi res val
    return res

//========================================================================
// parses an int from a given char[]
// int stringToInt (char[]);
__builtin__stringToInt__char__1:
    stackget val 0
    stoi res val
    return res

//========================================================================
// parses an int from a given char
// int charToInt (char);
__builtin__charToInt__char:
    stackget val 0
    ctoi res val
    return res

//========================================================================
// converts int to string
// char[] string (int);
__builtin__string__int:
    stackget val 0
    string res val
    return res

//========================================================================
// converts float to string
// char[] string (float);
__builtin__string__float:
    stackget val 0
    string res val
    return res

//========================================================================

// returns default value for array and object (null)
// null null ();
__builtin__null:
    return __null

//========================================================================

__endOfLibrary:
    //push prompt
    //call print

    //call input
    //response name

    //push name
    //call println

//========================================================================
//### COMPILED CODE ######################################################
//========================================================================

//========================================================================
// Class Template - 
   // Instances:
      //==================================================================
      // Class Declaration - __main____Vector__char__1 inherits __builtin____main__Object
         // Creating Dispatch Table
            MALLOC __dtable____main____Vector__char__1 5
            // Populate Dispatch Table
            ASSIGN __dtable____main____Vector__char__1[0] __method____main____Vector__char__1____pushBack__char__1
            ASSIGN __dtable____main____Vector__char__1[1] __method____main____Vector__char__1____popBack
            ASSIGN __dtable____main____Vector__char__1[2] __method____main____Vector__char__1____clear
            ASSIGN __dtable____main____Vector__char__1[3] __method____main____Vector__char__1____get__int
            ASSIGN __dtable____main____Vector__char__1[4] __method____main____Vector__char__1____set__int__char__1
         //---------------------------------------------------------------
         // Field - char[][] Vector<:char[]:>::data
         ASSIGN __field____main____Vector__char__1____data 1
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - int Vector<:char[]:>::size
         ASSIGN __field____main____Vector__char__1____size 2
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - int Vector<:char[]:>::capacity
         ASSIGN __field____main____Vector__char__1____capacity 3
         //---------------------------------------------------------------
      // skip over class methods
      JUMP __endclass____main____Vector__char__1
         //---------------------------------------------------------------
         // Constructor Declaration - Vector<:char[]:>::Vector() -> Vector<:char[]:>
         JUMP __end__ctor____main____Vector__char__1____Vector
         __ctor____main____Vector__char__1____Vector:
            // Creating Class Instance
               MALLOC __this 4
               // Add Dispatch Table
               ASSIGN __this[0] __dtable____main____Vector__char__1
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Int Literal
                           PUSH 10
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char__1____capacity
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Int Literal
                           PUSH 0
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char__1____size
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Array Allocator
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__char__1____capacity
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                           POP __size
                           MALLOC __ptr __size
                           PUSH __ptr
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char__1____data
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN __this
         __end__ctor____main____Vector__char__1____Vector:
         // End Constructor Declaration - __ctor____main____Vector__char__1____Vector
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Constructor Declaration - Vector<:char[]:>::Vector(int) -> Vector<:char[]:>
         JUMP __end__ctor____main____Vector__char__1____Vector__int
         __ctor____main____Vector__char__1____Vector__int:
            // Creating Class Instance
               MALLOC __this 4
               // Add Dispatch Table
               ASSIGN __this[0] __dtable____main____Vector__char__1
            // Parameters
               // Param: size
               STACKGET __main____Vector__char__1__Vector__size 0
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Addition
                           // LHS
                              // Identifier - size
                                 PUSH __main____Vector__char__1__Vector__size
                           // RHS
                              // Int Literal
                                 PUSH 10
                           POP __rhs
                           POP __lhs
                           ADD __res __lhs __rhs
                           PUSH __res
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char__1____capacity
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Identifier - size
                           PUSH __main____Vector__char__1__Vector__size
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char__1____size
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Array Allocator
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__char__1____capacity
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                           POP __size
                           MALLOC __ptr __size
                           PUSH __ptr
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char__1____data
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN __this
         __end__ctor____main____Vector__char__1____Vector__int:
         // End Constructor Declaration - __ctor____main____Vector__char__1____Vector__int
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:char[]:>::pushBack(char[]) -> void
         JUMP __end__method____main____Vector__char__1____pushBack__char__1
         __method____main____Vector__char__1____pushBack__char__1:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: val
               STACKGET __main____Vector__char__1__pushBack__val 1
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Greater Than or Equal to
                           // LHS
                              // Addition
                                 // LHS
                                    // Member Accessor
                                       // LHS
                                          // This keyword
                                             PUSH __this
                                       // RHS
                                          PUSH __field____main____Vector__char__1____size
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                 // RHS
                                    // Int Literal
                                       PUSH 1
                                 POP __rhs
                                 POP __lhs
                                 ADD __res __lhs __rhs
                                 PUSH __res
                           // RHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__char__1____capacity
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           POP __rhs
                           POP __lhs
                           GE __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__3
                     // Body
                        //------------------------------------------------
                        // Code Block
                           // Assignment - '='
                              // RHS
                                 // Multiplication
                                    // LHS
                                       // Member Accessor
                                          // LHS
                                             // This keyword
                                                PUSH __this
                                          // RHS
                                             PUSH __field____main____Vector__char__1____capacity
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    // RHS
                                       // Int Literal
                                          PUSH 2
                                    POP __rhs
                                    POP __lhs
                                    MULTIPLY __res __lhs __rhs
                                    PUSH __res
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__char__1____capacity
                                    POP __child
                                    POP __parent
                                    POP __rhs
                              ASSIGN __parent[__child] __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           // Assignment - '='
                              // RHS
                                 // Array Allocator
                                    // Member Accessor
                                       // LHS
                                          // This keyword
                                             PUSH __this
                                       // RHS
                                          PUSH __field____main____Vector__char__1____capacity
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                    POP __size
                                    MALLOC __ptr __size
                                    PUSH __ptr
                              // LHS
                                 // Variable Declaration
                                    ASSIGN __main____Vector__char__1__pushBack__block__2__if__3__block__4__nData 0
                              POP __rhs
                              ASSIGN __main____Vector__char__1__pushBack__block__2__if__3__block__4__nData __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           //---------------------------------------------
                           // For-Loop
                           // Init
                              // Assignment - '='
                                 // RHS
                                    // Int Literal
                                       PUSH 0
                                 // LHS
                                    // Variable Declaration
                                       ASSIGN __main____Vector__char__1__pushBack__block__2__if__3__block__4__for__5__i 0
                                 POP __rhs
                                 ASSIGN __main____Vector__char__1__pushBack__block__2__if__3__block__4__for__5__i __rhs
                                 PUSH __rhs
                           JUMP __forcond__5
                           __for__5:
                              // Update
                                 // Pre-Increment
                                    // RHS
                                       // Identifier - i
                                          PUSH __main____Vector__char__1__pushBack__block__2__if__3__block__4__for__5__i
                                    POP __rhs
                                    ADD __main____Vector__char__1__pushBack__block__2__if__3__block__4__for__5__i __main____Vector__char__1__pushBack__block__2__if__3__block__4__for__5__i 1
                                    ASSIGN __res __main____Vector__char__1__pushBack__block__2__if__3__block__4__for__5__i
                                    PUSH __res
                              __forcond__5:
                              // Condition
                                 // Less Than
                                    // LHS
                                       // Identifier - i
                                          PUSH __main____Vector__char__1__pushBack__block__2__if__3__block__4__for__5__i
                                    // RHS
                                       // Member Accessor
                                          // LHS
                                             // This keyword
                                                PUSH __this
                                          // RHS
                                             PUSH __field____main____Vector__char__1____size
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    POP __rhs
                                    POP __lhs
                                    LT __res __lhs __rhs
                                    PUSH __res
                                 POP __cond
                                 CMP __cond 0
                                 JEQ __endfor__5
                              // Body
                                 //---------------------------------------
                                 // Code Block
                                    // Assignment - '='
                                       // RHS
                                          // Subscript
                                             // LHS
                                                // Member Accessor
                                                   // LHS
                                                      // This keyword
                                                         PUSH __this
                                                   // RHS
                                                      PUSH __field____main____Vector__char__1____data
                                                   POP __child
                                                   POP __parent
                                                   PUSH __parent[__child]
                                             // OFFSET
                                                // Identifier - i
                                                   PUSH __main____Vector__char__1__pushBack__block__2__if__3__block__4__for__5__i
                                             POP __offset
                                             POP __pointer
                                             PUSH __pointer[__offset]
                                       // LHS
                                          // Subscript assignment
                                             // LHS
                                                // Identifier - nData
                                                   PUSH __main____Vector__char__1__pushBack__block__2__if__3__block__4__nData
                                             // OFFSET
                                                // Identifier - i
                                                   PUSH __main____Vector__char__1__pushBack__block__2__if__3__block__4__for__5__i
                                             POP __offset
                                             POP __pointer
                                       POP __rhs
                                       ASSIGN __pointer[__offset] __rhs
                                       PUSH __rhs
                                    // Statement results can be ignored
                                    POP __void
                                 //---------------------------------------
                              // Repeat
                              JUMP __for__5
                              // End of For
                              __endfor__5:
                           //---------------------------------------------
                           // Free Operator
                              // RHS
                                 // Member Accessor
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__char__1____data
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              // Free array
                              POP __array
                              FREE __array
                              PUSH __array
                           // Statement results can be ignored
                           POP __void
                           // Assignment - '='
                              // RHS
                                 // Identifier - nData
                                    PUSH __main____Vector__char__1__pushBack__block__2__if__3__block__4__nData
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__char__1____data
                                    POP __child
                                    POP __parent
                                    POP __rhs
                              ASSIGN __parent[__child] __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                        //------------------------------------------------
                     JUMP __endif__3
                     // End of if
                     __endif__3:
                  //------------------------------------------------------
                  // Assignment - '='
                     // RHS
                        // Identifier - val
                           PUSH __main____Vector__char__1__pushBack__val
                     // LHS
                        // Subscript assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__char__1____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // OFFSET
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__char__1____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           POP __offset
                           POP __pointer
                     POP __rhs
                     ASSIGN __pointer[__offset] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Pre-Increment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char__1____size
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     POP __rhs
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char__1____size
                           POP __child
                           POP __parent
                           ADD __parent[__child] __parent[__child] 1
                           ASSIGN __res __parent[__child]
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__char__1____pushBack__char__1:
         // End Method Declaration - __method____main____Vector__char__1____pushBack__char__1
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:char[]:>::popBack() -> char[]
         JUMP __end__method____main____Vector__char__1____popBack
         __method____main____Vector__char__1____popBack:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__char__1____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Pre-Decrement
                              // RHS
                                 // Member Accessor
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__char__1____size
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              POP __rhs
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__char__1____size
                                    POP __child
                                    POP __parent
                                    SUBTRACT __parent[__child] __parent[__child] 1
                                    ASSIGN __res __parent[__child]
                              PUSH __res
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__char__1____popBack:
         // End Method Declaration - __method____main____Vector__char__1____popBack
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:char[]:>::clear() -> void
         JUMP __end__method____main____Vector__char__1____clear
         __method____main____Vector__char__1____clear:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // While-Loop
                  __while__9:
                     // Condition
                        // Greater Than
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__char__1____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              // Int Literal
                                 PUSH 0
                           POP __rhs
                           POP __lhs
                           GT __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endwhile__9
                     // Body
                        // Method Call - Vector<:char[]:>::popBack() -> char[]
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                           // Arguments
                           POP __obj
                           // Pushing args in reverse order
                           PUSH __obj
                           CALL __method____main____Vector__char__1____popBack
                           POP __void
                           // Remove args
                           RESPONSE __retval
                           PUSH __retval
                        // Statement results can be ignored
                        POP __void
                     JUMP __while__9
                     // End of While
                     __endwhile__9:
                  //------------------------------------------------------
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__char__1____clear:
         // End Method Declaration - __method____main____Vector__char__1____clear
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:char[]:>::get(int) -> char[]
         JUMP __end__method____main____Vector__char__1____get__int
         __method____main____Vector__char__1____get__int:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: index
               STACKGET __main____Vector__char__1__get__index 1
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__char__1____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Identifier - index
                              PUSH __main____Vector__char__1__get__index
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__char__1____get__int:
         // End Method Declaration - __method____main____Vector__char__1____get__int
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:char[]:>::set(int, char[]) -> void
         JUMP __end__method____main____Vector__char__1____set__int__char__1
         __method____main____Vector__char__1____set__int__char__1:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: index
               STACKGET __main____Vector__char__1__set__index 1
               // Param: value
               STACKGET __main____Vector__char__1__set__value 2
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Identifier - value
                           PUSH __main____Vector__char__1__set__value
                     // LHS
                        // Subscript assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__char__1____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // OFFSET
                              // Identifier - index
                                 PUSH __main____Vector__char__1__set__index
                           POP __offset
                           POP __pointer
                     POP __rhs
                     ASSIGN __pointer[__offset] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__char__1____set__int__char__1:
         // End Method Declaration - __method____main____Vector__char__1____set__int__char__1
         //---------------------------------------------------------------

      __endclass____main____Vector__char__1:
      // End Class Declaration - __main____Vector__char__1
      //==================================================================

      //==================================================================
      // Class Declaration - __main____Vector__File inherits __builtin____main__Object
         // Creating Dispatch Table
            MALLOC __dtable____main____Vector__File 5
            // Populate Dispatch Table
            ASSIGN __dtable____main____Vector__File[0] __method____main____Vector__File____pushBack__File
            ASSIGN __dtable____main____Vector__File[1] __method____main____Vector__File____popBack
            ASSIGN __dtable____main____Vector__File[2] __method____main____Vector__File____clear
            ASSIGN __dtable____main____Vector__File[3] __method____main____Vector__File____get__int
            ASSIGN __dtable____main____Vector__File[4] __method____main____Vector__File____set__int__File
         //---------------------------------------------------------------
         // Field - File[] Vector<:File:>::data
         ASSIGN __field____main____Vector__File____data 1
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - int Vector<:File:>::size
         ASSIGN __field____main____Vector__File____size 2
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - int Vector<:File:>::capacity
         ASSIGN __field____main____Vector__File____capacity 3
         //---------------------------------------------------------------
      // skip over class methods
      JUMP __endclass____main____Vector__File
         //---------------------------------------------------------------
         // Constructor Declaration - Vector<:File:>::Vector() -> Vector<:File:>
         JUMP __end__ctor____main____Vector__File____Vector
         __ctor____main____Vector__File____Vector:
            // Creating Class Instance
               MALLOC __this 4
               // Add Dispatch Table
               ASSIGN __this[0] __dtable____main____Vector__File
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Int Literal
                           PUSH 10
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__File____capacity
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Int Literal
                           PUSH 0
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__File____size
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Array Allocator
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__File____capacity
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                           POP __size
                           MALLOC __ptr __size
                           PUSH __ptr
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__File____data
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN __this
         __end__ctor____main____Vector__File____Vector:
         // End Constructor Declaration - __ctor____main____Vector__File____Vector
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Constructor Declaration - Vector<:File:>::Vector(int) -> Vector<:File:>
         JUMP __end__ctor____main____Vector__File____Vector__int
         __ctor____main____Vector__File____Vector__int:
            // Creating Class Instance
               MALLOC __this 4
               // Add Dispatch Table
               ASSIGN __this[0] __dtable____main____Vector__File
            // Parameters
               // Param: size
               STACKGET __main____Vector__File__Vector__size 0
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Addition
                           // LHS
                              // Identifier - size
                                 PUSH __main____Vector__File__Vector__size
                           // RHS
                              // Int Literal
                                 PUSH 10
                           POP __rhs
                           POP __lhs
                           ADD __res __lhs __rhs
                           PUSH __res
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__File____capacity
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Identifier - size
                           PUSH __main____Vector__File__Vector__size
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__File____size
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Array Allocator
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__File____capacity
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                           POP __size
                           MALLOC __ptr __size
                           PUSH __ptr
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__File____data
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN __this
         __end__ctor____main____Vector__File____Vector__int:
         // End Constructor Declaration - __ctor____main____Vector__File____Vector__int
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:File:>::pushBack(File) -> void
         JUMP __end__method____main____Vector__File____pushBack__File
         __method____main____Vector__File____pushBack__File:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: val
               STACKGET __main____Vector__File__pushBack__val 1
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Greater Than or Equal to
                           // LHS
                              // Addition
                                 // LHS
                                    // Member Accessor
                                       // LHS
                                          // This keyword
                                             PUSH __this
                                       // RHS
                                          PUSH __field____main____Vector__File____size
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                 // RHS
                                    // Int Literal
                                       PUSH 1
                                 POP __rhs
                                 POP __lhs
                                 ADD __res __lhs __rhs
                                 PUSH __res
                           // RHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__File____capacity
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           POP __rhs
                           POP __lhs
                           GE __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__15
                     // Body
                        //------------------------------------------------
                        // Code Block
                           // Assignment - '='
                              // RHS
                                 // Multiplication
                                    // LHS
                                       // Member Accessor
                                          // LHS
                                             // This keyword
                                                PUSH __this
                                          // RHS
                                             PUSH __field____main____Vector__File____capacity
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    // RHS
                                       // Int Literal
                                          PUSH 2
                                    POP __rhs
                                    POP __lhs
                                    MULTIPLY __res __lhs __rhs
                                    PUSH __res
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__File____capacity
                                    POP __child
                                    POP __parent
                                    POP __rhs
                              ASSIGN __parent[__child] __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           // Assignment - '='
                              // RHS
                                 // Array Allocator
                                    // Member Accessor
                                       // LHS
                                          // This keyword
                                             PUSH __this
                                       // RHS
                                          PUSH __field____main____Vector__File____capacity
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                    POP __size
                                    MALLOC __ptr __size
                                    PUSH __ptr
                              // LHS
                                 // Variable Declaration
                                    ASSIGN __main____Vector__File__pushBack__block__14__if__15__block__16__nData 0
                              POP __rhs
                              ASSIGN __main____Vector__File__pushBack__block__14__if__15__block__16__nData __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           //---------------------------------------------
                           // For-Loop
                           // Init
                              // Assignment - '='
                                 // RHS
                                    // Int Literal
                                       PUSH 0
                                 // LHS
                                    // Variable Declaration
                                       ASSIGN __main____Vector__File__pushBack__block__14__if__15__block__16__for__17__i 0
                                 POP __rhs
                                 ASSIGN __main____Vector__File__pushBack__block__14__if__15__block__16__for__17__i __rhs
                                 PUSH __rhs
                           JUMP __forcond__17
                           __for__17:
                              // Update
                                 // Pre-Increment
                                    // RHS
                                       // Identifier - i
                                          PUSH __main____Vector__File__pushBack__block__14__if__15__block__16__for__17__i
                                    POP __rhs
                                    ADD __main____Vector__File__pushBack__block__14__if__15__block__16__for__17__i __main____Vector__File__pushBack__block__14__if__15__block__16__for__17__i 1
                                    ASSIGN __res __main____Vector__File__pushBack__block__14__if__15__block__16__for__17__i
                                    PUSH __res
                              __forcond__17:
                              // Condition
                                 // Less Than
                                    // LHS
                                       // Identifier - i
                                          PUSH __main____Vector__File__pushBack__block__14__if__15__block__16__for__17__i
                                    // RHS
                                       // Member Accessor
                                          // LHS
                                             // This keyword
                                                PUSH __this
                                          // RHS
                                             PUSH __field____main____Vector__File____size
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    POP __rhs
                                    POP __lhs
                                    LT __res __lhs __rhs
                                    PUSH __res
                                 POP __cond
                                 CMP __cond 0
                                 JEQ __endfor__17
                              // Body
                                 //---------------------------------------
                                 // Code Block
                                    // Assignment - '='
                                       // RHS
                                          // Subscript
                                             // LHS
                                                // Member Accessor
                                                   // LHS
                                                      // This keyword
                                                         PUSH __this
                                                   // RHS
                                                      PUSH __field____main____Vector__File____data
                                                   POP __child
                                                   POP __parent
                                                   PUSH __parent[__child]
                                             // OFFSET
                                                // Identifier - i
                                                   PUSH __main____Vector__File__pushBack__block__14__if__15__block__16__for__17__i
                                             POP __offset
                                             POP __pointer
                                             PUSH __pointer[__offset]
                                       // LHS
                                          // Subscript assignment
                                             // LHS
                                                // Identifier - nData
                                                   PUSH __main____Vector__File__pushBack__block__14__if__15__block__16__nData
                                             // OFFSET
                                                // Identifier - i
                                                   PUSH __main____Vector__File__pushBack__block__14__if__15__block__16__for__17__i
                                             POP __offset
                                             POP __pointer
                                       POP __rhs
                                       ASSIGN __pointer[__offset] __rhs
                                       PUSH __rhs
                                    // Statement results can be ignored
                                    POP __void
                                 //---------------------------------------
                              // Repeat
                              JUMP __for__17
                              // End of For
                              __endfor__17:
                           //---------------------------------------------
                           // Free Operator
                              // RHS
                                 // Member Accessor
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__File____data
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              // Free array
                              POP __array
                              FREE __array
                              PUSH __array
                           // Statement results can be ignored
                           POP __void
                           // Assignment - '='
                              // RHS
                                 // Identifier - nData
                                    PUSH __main____Vector__File__pushBack__block__14__if__15__block__16__nData
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__File____data
                                    POP __child
                                    POP __parent
                                    POP __rhs
                              ASSIGN __parent[__child] __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                        //------------------------------------------------
                     JUMP __endif__15
                     // End of if
                     __endif__15:
                  //------------------------------------------------------
                  // Assignment - '='
                     // RHS
                        // Identifier - val
                           PUSH __main____Vector__File__pushBack__val
                     // LHS
                        // Subscript assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__File____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // OFFSET
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__File____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           POP __offset
                           POP __pointer
                     POP __rhs
                     ASSIGN __pointer[__offset] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Pre-Increment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__File____size
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     POP __rhs
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__File____size
                           POP __child
                           POP __parent
                           ADD __parent[__child] __parent[__child] 1
                           ASSIGN __res __parent[__child]
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__File____pushBack__File:
         // End Method Declaration - __method____main____Vector__File____pushBack__File
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:File:>::popBack() -> File
         JUMP __end__method____main____Vector__File____popBack
         __method____main____Vector__File____popBack:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__File____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Pre-Decrement
                              // RHS
                                 // Member Accessor
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__File____size
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              POP __rhs
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__File____size
                                    POP __child
                                    POP __parent
                                    SUBTRACT __parent[__child] __parent[__child] 1
                                    ASSIGN __res __parent[__child]
                              PUSH __res
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__File____popBack:
         // End Method Declaration - __method____main____Vector__File____popBack
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:File:>::clear() -> void
         JUMP __end__method____main____Vector__File____clear
         __method____main____Vector__File____clear:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // While-Loop
                  __while__21:
                     // Condition
                        // Greater Than
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__File____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              // Int Literal
                                 PUSH 0
                           POP __rhs
                           POP __lhs
                           GT __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endwhile__21
                     // Body
                        // Method Call - Vector<:File:>::popBack() -> File
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                           // Arguments
                           POP __obj
                           // Pushing args in reverse order
                           PUSH __obj
                           CALL __method____main____Vector__File____popBack
                           POP __void
                           // Remove args
                           RESPONSE __retval
                           PUSH __retval
                        // Statement results can be ignored
                        POP __void
                     JUMP __while__21
                     // End of While
                     __endwhile__21:
                  //------------------------------------------------------
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__File____clear:
         // End Method Declaration - __method____main____Vector__File____clear
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:File:>::get(int) -> File
         JUMP __end__method____main____Vector__File____get__int
         __method____main____Vector__File____get__int:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: index
               STACKGET __main____Vector__File__get__index 1
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__File____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Identifier - index
                              PUSH __main____Vector__File__get__index
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__File____get__int:
         // End Method Declaration - __method____main____Vector__File____get__int
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:File:>::set(int, File) -> void
         JUMP __end__method____main____Vector__File____set__int__File
         __method____main____Vector__File____set__int__File:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: index
               STACKGET __main____Vector__File__set__index 1
               // Param: value
               STACKGET __main____Vector__File__set__value 2
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Identifier - value
                           PUSH __main____Vector__File__set__value
                     // LHS
                        // Subscript assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__File____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // OFFSET
                              // Identifier - index
                                 PUSH __main____Vector__File__set__index
                           POP __offset
                           POP __pointer
                     POP __rhs
                     ASSIGN __pointer[__offset] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__File____set__int__File:
         // End Method Declaration - __method____main____Vector__File____set__int__File
         //---------------------------------------------------------------

      __endclass____main____Vector__File:
      // End Class Declaration - __main____Vector__File
      //==================================================================

// End Class Template - 
//========================================================================

//========================================================================
// Function Template - 
   // Instances:
// End Function Template - 
//========================================================================

//========================================================================
// Function Template - 
   // Instances:
// End Function Template - 
//========================================================================

//========================================================================
// Function Declaration - strlen(char[]) -> int
JUMP __end____main____strlen__char__1
__main____strlen__char__1:
   // Parameters
      // Param: str
      STACKGET __main__strlen__str 0
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Equal
                  // LHS
                     // Identifier - str
                        PUSH __main__strlen__str
                  // RHS
                     // Null Literal
                        ASSIGN __null 0
                        PUSH __null
                  POP __rhs
                  POP __lhs
                  EQUAL __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__25
            // Body
               // Return
                  // Negative
                     // RHS
                        // Int Literal
                           PUSH 1
                     POP __rhs
                     SUBTRACT __res 0 __rhs
                     PUSH __res
                  POP __rVal
                  RETURN __rVal
            JUMP __endif__25
            // End of if
            __endif__25:
         //---------------------------------------------------------------
         // Assignment - '='
            // RHS
               // Int Literal
                  PUSH 0
            // LHS
               // Variable Declaration
                  ASSIGN __main__strlen__block__24__size 0
            POP __rhs
            ASSIGN __main__strlen__block__24__size __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // While-Loop
         __while__26:
            // Condition
               // Not Equal
                  // LHS
                     // Subscript
                        // LHS
                           // Identifier - str
                              PUSH __main__strlen__str
                        // OFFSET
                           // Post-Increment
                              ASSIGN __res __main__strlen__block__24__size
                              ADD __main__strlen__block__24__size __main__strlen__block__24__size 1
                              PUSH __res
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                  // RHS
                     // Char Literal
                        PUSH '\0'
                  POP __rhs
                  POP __lhs
                  NEQUAL __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endwhile__26
            // Body
            JUMP __while__26
            // End of While
            __endwhile__26:
         //---------------------------------------------------------------
         // Return
            // Subtraction
               // LHS
                  // Identifier - size
                     PUSH __main__strlen__block__24__size
               // RHS
                  // Int Literal
                     PUSH 1
               POP __rhs
               POP __lhs
               SUBTRACT __res __lhs __rhs
               PUSH __res
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____strlen__char__1:
// End Function Declaration - __main____strlen__char__1
//========================================================================

//========================================================================
// Function Declaration - strcmp(char[], char[]) -> int
JUMP __end____main____strcmp__char__1__char__1
__main____strcmp__char__1__char__1:
   // Parameters
      // Param: a
      STACKGET __main__strcmp__a 0
      // Param: b
      STACKGET __main__strcmp__b 1
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Assignment - '='
            // RHS
               // Function Call - strlen(char[]) -> int
                  // Arguments
                     // Identifier - a
                        PUSH __main__strcmp__a
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** strlen
                  CALL __main____strlen__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__strcmp__block__27__asize 0
            POP __rhs
            ASSIGN __main__strcmp__block__27__asize __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Function Call - strlen(char[]) -> int
                  // Arguments
                     // Identifier - b
                        PUSH __main__strcmp__b
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** strlen
                  CALL __main____strlen__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__strcmp__block__27__bsize 0
            POP __rhs
            ASSIGN __main__strcmp__block__27__bsize __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Not Equal
                  // LHS
                     // Identifier - asize
                        PUSH __main__strcmp__block__27__asize
                  // RHS
                     // Identifier - bsize
                        PUSH __main__strcmp__block__27__bsize
                  POP __rhs
                  POP __lhs
                  NEQUAL __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__28
            // Body
               // Return
                  // Int Literal
                     PUSH 0
                  POP __rVal
                  RETURN __rVal
            JUMP __endif__28
            // End of if
            __endif__28:
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // For-Loop
         // Init
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Variable Declaration
                     ASSIGN __main__strcmp__block__27__for__29__i 0
               POP __rhs
               ASSIGN __main__strcmp__block__27__for__29__i __rhs
               PUSH __rhs
         JUMP __forcond__29
         __for__29:
            // Update
               // Pre-Increment
                  // RHS
                     // Identifier - i
                        PUSH __main__strcmp__block__27__for__29__i
                  POP __rhs
                  ADD __main__strcmp__block__27__for__29__i __main__strcmp__block__27__for__29__i 1
                  ASSIGN __res __main__strcmp__block__27__for__29__i
                  PUSH __res
            __forcond__29:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - i
                        PUSH __main__strcmp__block__27__for__29__i
                  // RHS
                     // Identifier - asize
                        PUSH __main__strcmp__block__27__asize
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endfor__29
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Not Equal
                           // LHS
                              // Subscript
                                 // LHS
                                    // Identifier - a
                                       PUSH __main__strcmp__a
                                 // OFFSET
                                    // Identifier - i
                                       PUSH __main__strcmp__block__27__for__29__i
                                 POP __offset
                                 POP __pointer
                                 PUSH __pointer[__offset]
                           // RHS
                              // Subscript
                                 // LHS
                                    // Identifier - b
                                       PUSH __main__strcmp__b
                                 // OFFSET
                                    // Identifier - i
                                       PUSH __main__strcmp__block__27__for__29__i
                                 POP __offset
                                 POP __pointer
                                 PUSH __pointer[__offset]
                           POP __rhs
                           POP __lhs
                           NEQUAL __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__31
                     // Body
                        //------------------------------------------------
                        // Code Block
                           // Return
                              // Int Literal
                                 PUSH 0
                              POP __rVal
                              RETURN __rVal
                        //------------------------------------------------
                     JUMP __endif__31
                     // End of if
                     __endif__31:
                  //------------------------------------------------------
               //---------------------------------------------------------
            // Repeat
            JUMP __for__29
            // End of For
            __endfor__29:
         //---------------------------------------------------------------
         // Return
            // Int Literal
               PUSH 1
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____strcmp__char__1__char__1:
// End Function Declaration - __main____strcmp__char__1__char__1
//========================================================================

//========================================================================
// Function Declaration - substr(char[], int, int) -> char[]
JUMP __end____main____substr__char__1__int__int
__main____substr__char__1__int__int:
   // Parameters
      // Param: a
      STACKGET __main__substr__a 0
      // Param: start
      STACKGET __main__substr__start 1
      // Param: end
      STACKGET __main__substr__end 2
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Assignment - '='
            // RHS
               // Array Allocator
                  // Addition
                     // LHS
                        // Subtraction
                           // LHS
                              // Identifier - end
                                 PUSH __main__substr__end
                           // RHS
                              // Identifier - start
                                 PUSH __main__substr__start
                           POP __rhs
                           POP __lhs
                           SUBTRACT __res __lhs __rhs
                           PUSH __res
                     // RHS
                        // Int Literal
                           PUSH 1
                     POP __rhs
                     POP __lhs
                     ADD __res __lhs __rhs
                     PUSH __res
                  POP __size
                  MALLOC __ptr __size
                  PUSH __ptr
            // LHS
               // Variable Declaration
                  ASSIGN __main__substr__block__33__res 0
            POP __rhs
            ASSIGN __main__substr__block__33__res __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // For-Loop
         // Init
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Variable Declaration
                     ASSIGN __main__substr__block__33__for__34__i 0
               POP __rhs
               ASSIGN __main__substr__block__33__for__34__i __rhs
               PUSH __rhs
         JUMP __forcond__34
         __for__34:
            // Update
               // Pre-Increment
                  // RHS
                     // Identifier - i
                        PUSH __main__substr__block__33__for__34__i
                  POP __rhs
                  ADD __main__substr__block__33__for__34__i __main__substr__block__33__for__34__i 1
                  ASSIGN __res __main__substr__block__33__for__34__i
                  PUSH __res
            __forcond__34:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - i
                        PUSH __main__substr__block__33__for__34__i
                  // RHS
                     // Subtraction
                        // LHS
                           // Identifier - end
                              PUSH __main__substr__end
                        // RHS
                           // Identifier - start
                              PUSH __main__substr__start
                        POP __rhs
                        POP __lhs
                        SUBTRACT __res __lhs __rhs
                        PUSH __res
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endfor__34
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Subscript
                           // LHS
                              // Identifier - a
                                 PUSH __main__substr__a
                           // OFFSET
                              // Addition
                                 // LHS
                                    // Identifier - i
                                       PUSH __main__substr__block__33__for__34__i
                                 // RHS
                                    // Identifier - start
                                       PUSH __main__substr__start
                                 POP __rhs
                                 POP __lhs
                                 ADD __res __lhs __rhs
                                 PUSH __res
                           POP __offset
                           POP __pointer
                           PUSH __pointer[__offset]
                     // LHS
                        // Subscript assignment
                           // LHS
                              // Identifier - res
                                 PUSH __main__substr__block__33__res
                           // OFFSET
                              // Identifier - i
                                 PUSH __main__substr__block__33__for__34__i
                           POP __offset
                           POP __pointer
                     POP __rhs
                     ASSIGN __pointer[__offset] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            // Repeat
            JUMP __for__34
            // End of For
            __endfor__34:
         //---------------------------------------------------------------
         // Assignment - '='
            // RHS
               // Char Literal
                  PUSH '\0'
            // LHS
               // Subscript assignment
                  // LHS
                     // Identifier - res
                        PUSH __main__substr__block__33__res
                  // OFFSET
                     // Subtraction
                        // LHS
                           // Identifier - end
                              PUSH __main__substr__end
                        // RHS
                           // Identifier - start
                              PUSH __main__substr__start
                        POP __rhs
                        POP __lhs
                        SUBTRACT __res __lhs __rhs
                        PUSH __res
                  POP __offset
                  POP __pointer
            POP __rhs
            ASSIGN __pointer[__offset] __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Return
            // Identifier - res
               PUSH __main__substr__block__33__res
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____substr__char__1__int__int:
// End Function Declaration - __main____substr__char__1__int__int
//========================================================================

//========================================================================
// Function Declaration - first_index_of(char[], char) -> int
JUMP __end____main____first_index_of__char__1__char
__main____first_index_of__char__1__char:
   // Parameters
      // Param: arr
      STACKGET __main__first_index_of__arr 0
      // Param: c
      STACKGET __main__first_index_of__c 1
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Assignment - '='
            // RHS
               // Function Call - strlen(char[]) -> int
                  // Arguments
                     // Identifier - arr
                        PUSH __main__first_index_of__arr
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** strlen
                  CALL __main____strlen__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__first_index_of__block__36__size 0
            POP __rhs
            ASSIGN __main__first_index_of__block__36__size __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // For-Loop
         // Init
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Variable Declaration
                     ASSIGN __main__first_index_of__block__36__for__37__i 0
               POP __rhs
               ASSIGN __main__first_index_of__block__36__for__37__i __rhs
               PUSH __rhs
         JUMP __forcond__37
         __for__37:
            // Update
               // Pre-Increment
                  // RHS
                     // Identifier - i
                        PUSH __main__first_index_of__block__36__for__37__i
                  POP __rhs
                  ADD __main__first_index_of__block__36__for__37__i __main__first_index_of__block__36__for__37__i 1
                  ASSIGN __res __main__first_index_of__block__36__for__37__i
                  PUSH __res
            __forcond__37:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - i
                        PUSH __main__first_index_of__block__36__for__37__i
                  // RHS
                     // Identifier - size
                        PUSH __main__first_index_of__block__36__size
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endfor__37
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Equal
                           // LHS
                              // Subscript
                                 // LHS
                                    // Identifier - arr
                                       PUSH __main__first_index_of__arr
                                 // OFFSET
                                    // Identifier - i
                                       PUSH __main__first_index_of__block__36__for__37__i
                                 POP __offset
                                 POP __pointer
                                 PUSH __pointer[__offset]
                           // RHS
                              // Identifier - c
                                 PUSH __main__first_index_of__c
                           POP __rhs
                           POP __lhs
                           EQUAL __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__39
                     // Body
                        // Return
                           // Identifier - i
                              PUSH __main__first_index_of__block__36__for__37__i
                           POP __rVal
                           RETURN __rVal
                     JUMP __endif__39
                     // End of if
                     __endif__39:
                  //------------------------------------------------------
               //---------------------------------------------------------
            // Repeat
            JUMP __for__37
            // End of For
            __endfor__37:
         //---------------------------------------------------------------
         // Return
            // Negative
               // RHS
                  // Int Literal
                     PUSH 1
               POP __rhs
               SUBTRACT __res 0 __rhs
               PUSH __res
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____first_index_of__char__1__char:
// End Function Declaration - __main____first_index_of__char__1__char
//========================================================================

//========================================================================
// Function Declaration - split(char[], char) -> Vector<:char[]:>
JUMP __end____main____split__char__1__char
__main____split__char__1__char:
   // Parameters
      // Param: str
      STACKGET __main__split__str 0
      // Param: delim
      STACKGET __main__split__delim 1
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Assignment - '='
            // RHS
               // Constructor Call - Vector<:char[]:>::Vector() -> Vector<:char[]:>
                  // Arguments
                  // Pushing args in reverse order
                  CALL __ctor____main____Vector__char__1____Vector
                  // Remove args
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__split__block__40__tokens 0
            POP __rhs
            ASSIGN __main__split__block__40__tokens __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Function Call - strlen(char[]) -> int
                  // Arguments
                     // Identifier - str
                        PUSH __main__split__str
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** strlen
                  CALL __main____strlen__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__split__block__40__size 0
            POP __rhs
            ASSIGN __main__split__block__40__size __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Int Literal
                  PUSH 0
            // LHS
               // Variable Declaration
                  ASSIGN __main__split__block__40__i 0
            POP __rhs
            ASSIGN __main__split__block__40__i __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Int Literal
                  PUSH 0
            // LHS
               // Variable Declaration
                  ASSIGN __main__split__block__40__j 0
            POP __rhs
            ASSIGN __main__split__block__40__j __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // While-Loop
         __while__41:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - i
                        PUSH __main__split__block__40__i
                  // RHS
                     // Identifier - size
                        PUSH __main__split__block__40__size
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endwhile__41
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Not Equal
                           // LHS
                              // Subscript
                                 // LHS
                                    // Identifier - str
                                       PUSH __main__split__str
                                 // OFFSET
                                    // Identifier - i
                                       PUSH __main__split__block__40__i
                                 POP __offset
                                 POP __pointer
                                 PUSH __pointer[__offset]
                           // RHS
                              // Identifier - delim
                                 PUSH __main__split__delim
                           POP __rhs
                           POP __lhs
                           NEQUAL __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__43
                     // Body
                        //------------------------------------------------
                        // Code Block
                           // Assignment - '='
                              // RHS
                                 // Int Literal
                                    PUSH 0
                              // LHS
                                 // Variable Declaration
                                    ASSIGN __main__split__block__40__while__41__block__42__if__43__block__44__count 0
                              POP __rhs
                              ASSIGN __main__split__block__40__while__41__block__42__if__43__block__44__count __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           // Assignment - '='
                              // RHS
                                 // Identifier - i
                                    PUSH __main__split__block__40__i
                              // LHS
                                 // Variable Declaration
                                    ASSIGN __main__split__block__40__while__41__block__42__if__43__block__44__k 0
                              POP __rhs
                              ASSIGN __main__split__block__40__while__41__block__42__if__43__block__44__k __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           //---------------------------------------------
                           // While-Loop
                           __while__45:
                              // Condition
                                 // Less Than
                                    // LHS
                                       // Identifier - k
                                          PUSH __main__split__block__40__while__41__block__42__if__43__block__44__k
                                    // RHS
                                       // Identifier - size
                                          PUSH __main__split__block__40__size
                                    POP __rhs
                                    POP __lhs
                                    LT __res __lhs __rhs
                                    PUSH __res
                                 POP __cond
                                 CMP __cond 0
                                 JEQ __endwhile__45
                              // Body
                                 //---------------------------------------
                                 // If-Statement
                                    // Condition
                                       // Not Equal
                                          // LHS
                                             // Subscript
                                                // LHS
                                                   // Identifier - str
                                                      PUSH __main__split__str
                                                // OFFSET
                                                   // Post-Increment
                                                      ASSIGN __res __main__split__block__40__while__41__block__42__if__43__block__44__k
                                                      ADD __main__split__block__40__while__41__block__42__if__43__block__44__k __main__split__block__40__while__41__block__42__if__43__block__44__k 1
                                                      PUSH __res
                                                POP __offset
                                                POP __pointer
                                                PUSH __pointer[__offset]
                                          // RHS
                                             // Identifier - delim
                                                PUSH __main__split__delim
                                          POP __rhs
                                          POP __lhs
                                          NEQUAL __res __lhs __rhs
                                          PUSH __res
                                       POP __cond
                                       CMP __cond 0
                                       JEQ __else__46
                                    // Body
                                       // Pre-Increment
                                          // RHS
                                             // Identifier - count
                                                PUSH __main__split__block__40__while__41__block__42__if__43__block__44__count
                                          POP __rhs
                                          ADD __main__split__block__40__while__41__block__42__if__43__block__44__count __main__split__block__40__while__41__block__42__if__43__block__44__count 1
                                          ASSIGN __res __main__split__block__40__while__41__block__42__if__43__block__44__count
                                          PUSH __res
                                       // Statement results can be ignored
                                       POP __void
                                    JUMP __endif__46
                                    //------------------------------------
                                    // Else-Statement
                                    __else__46:
                                    // Break out of __while__45
                                    JUMP __endwhile__45
                                    //------------------------------------
                                    // End of if
                                    __endif__46:
                                 //---------------------------------------
                              JUMP __while__45
                              // End of While
                              __endwhile__45:
                           //---------------------------------------------
                           // Method Call - Vector<:char[]:>::pushBack(char[]) -> void
                              // LHS
                                 // Identifier - tokens
                                    PUSH __main__split__block__40__tokens
                              // RHS
                              // Arguments
                                 // Array Allocator
                                    // Addition
                                       // LHS
                                          // Identifier - count
                                             PUSH __main__split__block__40__while__41__block__42__if__43__block__44__count
                                       // RHS
                                          // Int Literal
                                             PUSH 1
                                       POP __rhs
                                       POP __lhs
                                       ADD __res __lhs __rhs
                                       PUSH __res
                                    POP __size
                                    MALLOC __ptr __size
                                    PUSH __ptr
                                 POP __arg0
                              POP __obj
                              // Pushing args in reverse order
                              PUSH __arg0
                              PUSH __obj
                              CALL __method____main____Vector__char__1____pushBack__char__1
                              POP __void
                              // Remove args
                              POP __void
                              RESPONSE __retval
                              PUSH __retval
                           // Statement results can be ignored
                           POP __void
                           //---------------------------------------------
                           // For-Loop
                           // Init
                              // Assignment - '='
                                 // RHS
                                    // Int Literal
                                       PUSH 0
                                 // LHS
                                    // Variable Declaration
                                       ASSIGN __main__split__block__40__while__41__block__42__if__43__block__44__for__47__k 0
                                 POP __rhs
                                 ASSIGN __main__split__block__40__while__41__block__42__if__43__block__44__for__47__k __rhs
                                 PUSH __rhs
                           JUMP __forcond__47
                           __for__47:
                              // Update
                                 // Pre-Increment
                                    // RHS
                                       // Identifier - k
                                          PUSH __main__split__block__40__while__41__block__42__if__43__block__44__for__47__k
                                    POP __rhs
                                    ADD __main__split__block__40__while__41__block__42__if__43__block__44__for__47__k __main__split__block__40__while__41__block__42__if__43__block__44__for__47__k 1
                                    ASSIGN __res __main__split__block__40__while__41__block__42__if__43__block__44__for__47__k
                                    PUSH __res
                              __forcond__47:
                              // Condition
                                 // Less Than
                                    // LHS
                                       // Identifier - k
                                          PUSH __main__split__block__40__while__41__block__42__if__43__block__44__for__47__k
                                    // RHS
                                       // Identifier - count
                                          PUSH __main__split__block__40__while__41__block__42__if__43__block__44__count
                                    POP __rhs
                                    POP __lhs
                                    LT __res __lhs __rhs
                                    PUSH __res
                                 POP __cond
                                 CMP __cond 0
                                 JEQ __endfor__47
                              // Body
                                 //---------------------------------------
                                 // Code Block
                                    // Assignment - '='
                                       // RHS
                                          // Subscript
                                             // LHS
                                                // Identifier - str
                                                   PUSH __main__split__str
                                             // OFFSET
                                                // Post-Increment
                                                   ASSIGN __res __main__split__block__40__i
                                                   ADD __main__split__block__40__i __main__split__block__40__i 1
                                                   PUSH __res
                                             POP __offset
                                             POP __pointer
                                             PUSH __pointer[__offset]
                                       // LHS
                                          // Subscript assignment
                                             // LHS
                                                // Subscript
                                                   // LHS
                                                      // Member Accessor
                                                         // LHS
                                                            // Identifier - tokens
                                                               PUSH __main__split__block__40__tokens
                                                         // RHS
                                                            PUSH __field____main____Vector__char__1____data
                                                         POP __child
                                                         POP __parent
                                                         PUSH __parent[__child]
                                                   // OFFSET
                                                      // Identifier - j
                                                         PUSH __main__split__block__40__j
                                                   POP __offset
                                                   POP __pointer
                                                   PUSH __pointer[__offset]
                                             // OFFSET
                                                // Identifier - k
                                                   PUSH __main__split__block__40__while__41__block__42__if__43__block__44__for__47__k
                                             POP __offset
                                             POP __pointer
                                       POP __rhs
                                       ASSIGN __pointer[__offset] __rhs
                                       PUSH __rhs
                                    // Statement results can be ignored
                                    POP __void
                                 //---------------------------------------
                              // Repeat
                              JUMP __for__47
                              // End of For
                              __endfor__47:
                           //---------------------------------------------
                           // Assignment - '='
                              // RHS
                                 // Char Literal
                                    PUSH '\0'
                              // LHS
                                 // Subscript assignment
                                    // LHS
                                       // Subscript
                                          // LHS
                                             // Member Accessor
                                                // LHS
                                                   // Identifier - tokens
                                                      PUSH __main__split__block__40__tokens
                                                // RHS
                                                   PUSH __field____main____Vector__char__1____data
                                                POP __child
                                                POP __parent
                                                PUSH __parent[__child]
                                          // OFFSET
                                             // Identifier - j
                                                PUSH __main__split__block__40__j
                                          POP __offset
                                          POP __pointer
                                          PUSH __pointer[__offset]
                                    // OFFSET
                                       // Identifier - count
                                          PUSH __main__split__block__40__while__41__block__42__if__43__block__44__count
                                    POP __offset
                                    POP __pointer
                              POP __rhs
                              ASSIGN __pointer[__offset] __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           // Pre-Increment
                              // RHS
                                 // Identifier - j
                                    PUSH __main__split__block__40__j
                              POP __rhs
                              ADD __main__split__block__40__j __main__split__block__40__j 1
                              ASSIGN __res __main__split__block__40__j
                              PUSH __res
                           // Statement results can be ignored
                           POP __void
                        //------------------------------------------------
                     JUMP __endif__43
                     // End of if
                     __endif__43:
                  //------------------------------------------------------
                  // Pre-Increment
                     // RHS
                        // Identifier - i
                           PUSH __main__split__block__40__i
                     POP __rhs
                     ADD __main__split__block__40__i __main__split__block__40__i 1
                     ASSIGN __res __main__split__block__40__i
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            JUMP __while__41
            // End of While
            __endwhile__41:
         //---------------------------------------------------------------
         // Return
            // Identifier - tokens
               PUSH __main__split__block__40__tokens
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____split__char__1__char:
// End Function Declaration - __main____split__char__1__char
//========================================================================

//========================================================================
// Function Declaration - max(int, int) -> int
JUMP __end____main____max__int__int
__main____max__int__int:
   // Parameters
      // Param: a
      STACKGET __main__max__a 0
      // Param: b
      STACKGET __main__max__b 1
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Greater Than or Equal to
                  // LHS
                     // Identifier - a
                        PUSH __main__max__a
                  // RHS
                     // Identifier - b
                        PUSH __main__max__b
                  POP __rhs
                  POP __lhs
                  GE __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__50
            // Body
               // Return
                  // Identifier - a
                     PUSH __main__max__a
                  POP __rVal
                  RETURN __rVal
            JUMP __endif__50
            // End of if
            __endif__50:
         //---------------------------------------------------------------
         // Return
            // Identifier - b
               PUSH __main__max__b
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____max__int__int:
// End Function Declaration - __main____max__int__int
//========================================================================

//========================================================================
// Function Declaration - max(float, float) -> float
JUMP __end____main____max__float__float
__main____max__float__float:
   // Parameters
      // Param: a
      STACKGET __main__max__a 0
      // Param: b
      STACKGET __main__max__b 1
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Greater Than or Equal to
                  // LHS
                     // Identifier - a
                        PUSH __main__max__a
                  // RHS
                     // Identifier - b
                        PUSH __main__max__b
                  POP __rhs
                  POP __lhs
                  GE __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__52
            // Body
               // Return
                  // Identifier - a
                     PUSH __main__max__a
                  POP __rVal
                  RETURN __rVal
            JUMP __endif__52
            // End of if
            __endif__52:
         //---------------------------------------------------------------
         // Return
            // Identifier - b
               PUSH __main__max__b
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____max__float__float:
// End Function Declaration - __main____max__float__float
//========================================================================

//========================================================================
// Function Declaration - min(int, int) -> int
JUMP __end____main____min__int__int
__main____min__int__int:
   // Parameters
      // Param: a
      STACKGET __main__min__a 0
      // Param: b
      STACKGET __main__min__b 1
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Less Than or Equal to
                  // LHS
                     // Identifier - a
                        PUSH __main__min__a
                  // RHS
                     // Identifier - b
                        PUSH __main__min__b
                  POP __rhs
                  POP __lhs
                  LE __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__54
            // Body
               // Return
                  // Identifier - a
                     PUSH __main__min__a
                  POP __rVal
                  RETURN __rVal
            JUMP __endif__54
            // End of if
            __endif__54:
         //---------------------------------------------------------------
         // Return
            // Identifier - b
               PUSH __main__min__b
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____min__int__int:
// End Function Declaration - __main____min__int__int
//========================================================================

//========================================================================
// Function Declaration - min(float, float) -> float
JUMP __end____main____min__float__float
__main____min__float__float:
   // Parameters
      // Param: a
      STACKGET __main__min__a 0
      // Param: b
      STACKGET __main__min__b 1
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Less Than or Equal to
                  // LHS
                     // Identifier - a
                        PUSH __main__min__a
                  // RHS
                     // Identifier - b
                        PUSH __main__min__b
                  POP __rhs
                  POP __lhs
                  LE __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__56
            // Body
               // Return
                  // Identifier - a
                     PUSH __main__min__a
                  POP __rVal
                  RETURN __rVal
            JUMP __endif__56
            // End of if
            __endif__56:
         //---------------------------------------------------------------
         // Return
            // Identifier - b
               PUSH __main__min__b
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____min__float__float:
// End Function Declaration - __main____min__float__float
//========================================================================

//========================================================================
// Function Declaration - abs(int) -> int
JUMP __end____main____abs__int
__main____abs__int:
   // Parameters
      // Param: v
      STACKGET __main__abs__v 0
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Less Than
                  // LHS
                     // Identifier - v
                        PUSH __main__abs__v
                  // RHS
                     // Int Literal
                        PUSH 0
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__58
            // Body
               // Return
                  // Negative
                     // RHS
                        // Identifier - v
                           PUSH __main__abs__v
                     POP __rhs
                     SUBTRACT __res 0 __rhs
                     PUSH __res
                  POP __rVal
                  RETURN __rVal
            JUMP __endif__58
            // End of if
            __endif__58:
         //---------------------------------------------------------------
         // Return
            // Identifier - v
               PUSH __main__abs__v
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____abs__int:
// End Function Declaration - __main____abs__int
//========================================================================

//========================================================================
// Function Declaration - abs(float) -> float
JUMP __end____main____abs__float
__main____abs__float:
   // Parameters
      // Param: v
      STACKGET __main__abs__v 0
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Less Than
                  // LHS
                     // Identifier - v
                        PUSH __main__abs__v
                  // RHS
                     // Float Literal
                        PUSH 0.0
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__60
            // Body
               // Return
                  // Negative
                     // RHS
                        // Identifier - v
                           PUSH __main__abs__v
                     POP __rhs
                     SUBTRACT __res 0 __rhs
                     PUSH __res
                  POP __rVal
                  RETURN __rVal
            JUMP __endif__60
            // End of if
            __endif__60:
         //---------------------------------------------------------------
         // Return
            // Identifier - v
               PUSH __main__abs__v
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____abs__float:
// End Function Declaration - __main____abs__float
//========================================================================

// Assignment - '='
   // RHS
      // Function Call - input() -> char[]
         // Arguments
         // Pushing args in reverse order
         // *** input
         CALL __builtin__input
         // Remove args
         RESPONSE __retval
         PUSH __retval
   // LHS
      // Variable Declaration
         ASSIGN __main__line 0
   POP __rhs
   ASSIGN __main__line __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Assignment - '='
   // RHS
      // Constructor Call - Vector<:char[]:>::Vector() -> Vector<:char[]:>
         // Arguments
         // Pushing args in reverse order
         CALL __ctor____main____Vector__char__1____Vector
         // Remove args
         RESPONSE __retval
         PUSH __retval
   // LHS
      // Variable Declaration
         ASSIGN __main__lines 0
   POP __rhs
   ASSIGN __main__lines __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
//------------------------------------------------------------------------
// While-Loop
__while__61:
   // Condition
      // Not Equal
         // LHS
            // Identifier - line
               PUSH __main__line
         // RHS
            // Null Literal
               ASSIGN __null 0
               PUSH __null
         POP __rhs
         POP __lhs
         NEQUAL __res __lhs __rhs
         PUSH __res
      POP __cond
      CMP __cond 0
      JEQ __endwhile__61
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Method Call - Vector<:char[]:>::pushBack(char[]) -> void
            // LHS
               // Identifier - lines
                  PUSH __main__lines
            // RHS
            // Arguments
               // Identifier - line
                  PUSH __main__line
               POP __arg0
            POP __obj
            // Pushing args in reverse order
            PUSH __arg0
            PUSH __obj
            CALL __method____main____Vector__char__1____pushBack__char__1
            POP __void
            // Remove args
            POP __void
            RESPONSE __retval
            PUSH __retval
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Function Call - input() -> char[]
                  // Arguments
                  // Pushing args in reverse order
                  // *** input
                  CALL __builtin__input
                  // Remove args
                  RESPONSE __retval
                  PUSH __retval
            POP __rhs
            ASSIGN __main__line __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
      //------------------------------------------------------------------
   JUMP __while__61
   // End of While
   __endwhile__61:
//------------------------------------------------------------------------
//========================================================================
// Class Declaration - __main____File inherits __builtin____main__Object
   // Creating Dispatch Table
      MALLOC __dtable____main____File 0
      // Populate Dispatch Table
   //---------------------------------------------------------------------
   // Field - char[] File::name
   ASSIGN __field____main____File____name 1
   //---------------------------------------------------------------------
   //---------------------------------------------------------------------
   // Field - File File::parent
   ASSIGN __field____main____File____parent 2
   //---------------------------------------------------------------------
   //---------------------------------------------------------------------
   // Field - Vector<:File:> File::children
   ASSIGN __field____main____File____children 3
   //---------------------------------------------------------------------
   //---------------------------------------------------------------------
   // Field - int File::size
   ASSIGN __field____main____File____size 4
   //---------------------------------------------------------------------
   //---------------------------------------------------------------------
   // Field - int File::is_dir
   ASSIGN __field____main____File____is_dir 5
   //---------------------------------------------------------------------
// skip over class methods
JUMP __endclass____main____File
   //---------------------------------------------------------------------
   // Constructor Declaration - File::File(char[]) -> File
   JUMP __end__ctor____main____File____File__char__1
   __ctor____main____File____File__char__1:
      // Creating Class Instance
         MALLOC __this 6
         // Add Dispatch Table
         ASSIGN __this[0] __dtable____main____File
      // Parameters
         // Param: name
         STACKGET __main____File__File__name 0
      // Body
         //---------------------------------------------------------------
         // Code Block
            // Assignment - '='
               // RHS
                  // Identifier - name
                     PUSH __main____File__File__name
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____File____name
                     POP __child
                     POP __parent
                     POP __rhs
               ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
            // Assignment - '='
               // RHS
                  // Null Literal
                     ASSIGN __null 0
                     PUSH __null
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____File____parent
                     POP __child
                     POP __parent
                     POP __rhs
               ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
            // Assignment - '='
               // RHS
                  // Constructor Call - Vector<:File:>::Vector() -> Vector<:File:>
                     // Arguments
                     // Pushing args in reverse order
                     CALL __ctor____main____Vector__File____Vector
                     // Remove args
                     RESPONSE __retval
                     PUSH __retval
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____File____children
                     POP __child
                     POP __parent
                     POP __rhs
               ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____File____size
                     POP __child
                     POP __parent
                     POP __rhs
               ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____File____is_dir
                     POP __child
                     POP __parent
                     POP __rhs
               ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
         //---------------------------------------------------------------
      RETURN __this
   __end__ctor____main____File____File__char__1:
   // End Constructor Declaration - __ctor____main____File____File__char__1
   //---------------------------------------------------------------------

__endclass____main____File:
// End Class Declaration - __main____File
//========================================================================

// Assignment - '='
   // RHS
      // Constructor Call - File::File(char[]) -> File
         // Arguments
            // String Literal
               MALLOC __str 3
               ASSIGN __str[0] '/'
               ASSIGN __str[1] '\n'
               ASSIGN __str[2] '\0'
               PUSH __str
            POP __arg0
         // Pushing args in reverse order
         PUSH __arg0
         CALL __ctor____main____File____File__char__1
         // Remove args
         POP __void
         RESPONSE __retval
         PUSH __retval
   // LHS
      // Variable Declaration
         ASSIGN __main__root 0
   POP __rhs
   ASSIGN __main__root __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Assignment - '='
   // RHS
      // Int Literal
         PUSH 1
   // LHS
      // Member Accessor Assignment
         // LHS
            // Identifier - root
               PUSH __main__root
         // RHS
            PUSH __field____main____File____is_dir
         POP __child
         POP __parent
         POP __rhs
   ASSIGN __parent[__child] __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Assignment - '='
   // RHS
      // Identifier - root
         PUSH __main__root
   // LHS
      // Variable Declaration
         ASSIGN __main__workingdir 0
   POP __rhs
   ASSIGN __main__workingdir __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Assignment - '='
   // RHS
      // Constructor Call - Vector<:File:>::Vector() -> Vector<:File:>
         // Arguments
         // Pushing args in reverse order
         CALL __ctor____main____Vector__File____Vector
         // Remove args
         RESPONSE __retval
         PUSH __retval
   // LHS
      // Variable Declaration
         ASSIGN __main__all_files 0
   POP __rhs
   ASSIGN __main__all_files __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Method Call - Vector<:File:>::pushBack(File) -> void
   // LHS
      // Identifier - all_files
         PUSH __main__all_files
   // RHS
   // Arguments
      // Identifier - root
         PUSH __main__root
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____Vector__File____pushBack__File
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
//------------------------------------------------------------------------
// For-Loop
// Init
   // Assignment - '='
      // RHS
         // Int Literal
            PUSH 0
      // LHS
         // Variable Declaration
            ASSIGN __main__for__64__i 0
      POP __rhs
      ASSIGN __main__for__64__i __rhs
      PUSH __rhs
JUMP __forcond__64
__for__64:
   // Update
      // Pre-Increment
         // RHS
            // Identifier - i
               PUSH __main__for__64__i
         POP __rhs
         ADD __main__for__64__i __main__for__64__i 1
         ASSIGN __res __main__for__64__i
         PUSH __res
   __forcond__64:
   // Condition
      // Less Than
         // LHS
            // Identifier - i
               PUSH __main__for__64__i
         // RHS
            // Member Accessor
               // LHS
                  // Identifier - lines
                     PUSH __main__lines
               // RHS
                  PUSH __field____main____Vector__char__1____size
               POP __child
               POP __parent
               PUSH __parent[__child]
         POP __rhs
         POP __lhs
         LT __res __lhs __rhs
         PUSH __res
      POP __cond
      CMP __cond 0
      JEQ __endfor__64
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Assignment - '='
            // RHS
               // Function Call - split(char[], char) -> Vector<:char[]:>
                  // Arguments
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // Identifier - lines
                                    PUSH __main__lines
                              // RHS
                                 PUSH __field____main____Vector__char__1____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Identifier - i
                              PUSH __main__for__64__i
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                     // Char Literal
                        PUSH ' '
                     POP __arg1
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg1
                  PUSH __arg0
                  // *** split
                  CALL __main____split__char__1__char
                  // Remove args
                  POP __void
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__for__64__block__65__tokens 0
            POP __rhs
            ASSIGN __main__for__64__block__65__tokens __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Equal
                  // LHS
                     // Subscript
                        // LHS
                           // Subscript
                              // LHS
                                 // Member Accessor
                                    // LHS
                                       // Identifier - lines
                                          PUSH __main__lines
                                    // RHS
                                       PUSH __field____main____Vector__char__1____data
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              // OFFSET
                                 // Identifier - i
                                    PUSH __main__for__64__i
                              POP __offset
                              POP __pointer
                              PUSH __pointer[__offset]
                        // OFFSET
                           // Int Literal
                              PUSH 0
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                  // RHS
                     // Char Literal
                        PUSH '$'
                  POP __rhs
                  POP __lhs
                  EQUAL __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__66
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Equal
                           // LHS
                              // Subscript
                                 // LHS
                                    // Subscript
                                       // LHS
                                          // Member Accessor
                                             // LHS
                                                // Identifier - tokens
                                                   PUSH __main__for__64__block__65__tokens
                                             // RHS
                                                PUSH __field____main____Vector__char__1____data
                                             POP __child
                                             POP __parent
                                             PUSH __parent[__child]
                                       // OFFSET
                                          // Int Literal
                                             PUSH 1
                                       POP __offset
                                       POP __pointer
                                       PUSH __pointer[__offset]
                                 // OFFSET
                                    // Int Literal
                                       PUSH 0
                                 POP __offset
                                 POP __pointer
                                 PUSH __pointer[__offset]
                           // RHS
                              // Char Literal
                                 PUSH 'c'
                           POP __rhs
                           POP __lhs
                           EQUAL __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __elif__68x0
                     // Body
                        //------------------------------------------------
                        // Code Block
                           //---------------------------------------------
                           // If-Statement
                              // Condition
                                 // Equal
                                    // LHS
                                       // Subscript
                                          // LHS
                                             // Subscript
                                                // LHS
                                                   // Member Accessor
                                                      // LHS
                                                         // Identifier - tokens
                                                            PUSH __main__for__64__block__65__tokens
                                                      // RHS
                                                         PUSH __field____main____Vector__char__1____data
                                                      POP __child
                                                      POP __parent
                                                      PUSH __parent[__child]
                                                // OFFSET
                                                   // Int Literal
                                                      PUSH 2
                                                POP __offset
                                                POP __pointer
                                                PUSH __pointer[__offset]
                                          // OFFSET
                                             // Int Literal
                                                PUSH 0
                                          POP __offset
                                          POP __pointer
                                          PUSH __pointer[__offset]
                                    // RHS
                                       // Char Literal
                                          PUSH '/'
                                    POP __rhs
                                    POP __lhs
                                    EQUAL __res __lhs __rhs
                                    PUSH __res
                                 POP __cond
                                 CMP __cond 0
                                 JEQ __elif__70x0
                              // Body
                                 //---------------------------------------
                                 // Code Block
                                    // Assignment - '='
                                       // RHS
                                          // Identifier - root
                                             PUSH __main__root
                                       POP __rhs
                                       ASSIGN __main__workingdir __rhs
                                       PUSH __rhs
                                    // Statement results can be ignored
                                    POP __void
                                 //---------------------------------------
                              JUMP __endif__70
                              //------------------------------------------
                              // Elif-Statement
                              __elif__70x0:
                                 // Condition
                                 // Equal
                                    // LHS
                                       // Subscript
                                          // LHS
                                             // Subscript
                                                // LHS
                                                   // Member Accessor
                                                      // LHS
                                                         // Identifier - tokens
                                                            PUSH __main__for__64__block__65__tokens
                                                      // RHS
                                                         PUSH __field____main____Vector__char__1____data
                                                      POP __child
                                                      POP __parent
                                                      PUSH __parent[__child]
                                                // OFFSET
                                                   // Int Literal
                                                      PUSH 2
                                                POP __offset
                                                POP __pointer
                                                PUSH __pointer[__offset]
                                          // OFFSET
                                             // Int Literal
                                                PUSH 0
                                          POP __offset
                                          POP __pointer
                                          PUSH __pointer[__offset]
                                    // RHS
                                       // Char Literal
                                          PUSH '.'
                                    POP __rhs
                                    POP __lhs
                                    EQUAL __res __lhs __rhs
                                    PUSH __res
                                 POP __cond
                                 CMP __cond 0
                                 JEQ __else__70
                                 // Body
                                 //---------------------------------------
                                 // Code Block
                                    // Assignment - '='
                                       // RHS
                                          // Member Accessor
                                             // LHS
                                                // Identifier - workingdir
                                                   PUSH __main__workingdir
                                             // RHS
                                                PUSH __field____main____File____parent
                                             POP __child
                                             POP __parent
                                             PUSH __parent[__child]
                                       POP __rhs
                                       ASSIGN __main__workingdir __rhs
                                       PUSH __rhs
                                    // Statement results can be ignored
                                    POP __void
                                 //---------------------------------------
                                 JUMP __endif__70
                              //------------------------------------------
                              //------------------------------------------
                              // Else-Statement
                              __else__70:
                              //------------------------------------------
                              // Code Block
                                 //---------------------------------------
                                 // For-Loop
                                 // Init
                                    // Assignment - '='
                                       // RHS
                                          // Int Literal
                                             PUSH 0
                                       // LHS
                                          // Variable Declaration
                                             ASSIGN __main__for__64__block__65__if__66__block__67__if__68__block__69__else__70__block__73__for__74__j 0
                                       POP __rhs
                                       ASSIGN __main__for__64__block__65__if__66__block__67__if__68__block__69__else__70__block__73__for__74__j __rhs
                                       PUSH __rhs
                                 JUMP __forcond__74
                                 __for__74:
                                    // Update
                                       // Pre-Increment
                                          // RHS
                                             // Identifier - j
                                                PUSH __main__for__64__block__65__if__66__block__67__if__68__block__69__else__70__block__73__for__74__j
                                          POP __rhs
                                          ADD __main__for__64__block__65__if__66__block__67__if__68__block__69__else__70__block__73__for__74__j __main__for__64__block__65__if__66__block__67__if__68__block__69__else__70__block__73__for__74__j 1
                                          ASSIGN __res __main__for__64__block__65__if__66__block__67__if__68__block__69__else__70__block__73__for__74__j
                                          PUSH __res
                                    __forcond__74:
                                    // Condition
                                       // Less Than
                                          // LHS
                                             // Identifier - j
                                                PUSH __main__for__64__block__65__if__66__block__67__if__68__block__69__else__70__block__73__for__74__j
                                          // RHS
                                             // Member Accessor
                                                // LHS
                                                   // Member Accessor
                                                      // LHS
                                                         // Identifier - workingdir
                                                            PUSH __main__workingdir
                                                      // RHS
                                                         PUSH __field____main____File____children
                                                      POP __child
                                                      POP __parent
                                                      PUSH __parent[__child]
                                                // RHS
                                                   PUSH __field____main____Vector__File____size
                                                POP __child
                                                POP __parent
                                                PUSH __parent[__child]
                                          POP __rhs
                                          POP __lhs
                                          LT __res __lhs __rhs
                                          PUSH __res
                                       POP __cond
                                       CMP __cond 0
                                       JEQ __endfor__74
                                    // Body
                                       //---------------------------------
                                       // Code Block
                                          //------------------------------
                                          // If-Statement
                                             // Condition
                                                // Function Call - strcmp(char[], char[]) -> int
                                                   // Arguments
                                                      // Subscript
                                                         // LHS
                                                            // Member Accessor
                                                               // LHS
                                                                  // Identifier - tokens
                                                                     PUSH __main__for__64__block__65__tokens
                                                               // RHS
                                                                  PUSH __field____main____Vector__char__1____data
                                                               POP __child
                                                               POP __parent
                                                               PUSH __parent[__child]
                                                         // OFFSET
                                                            // Int Literal
                                                               PUSH 2
                                                         POP __offset
                                                         POP __pointer
                                                         PUSH __pointer[__offset]
                                                      // Member Accessor
                                                         // LHS
                                                            // Subscript
                                                               // LHS
                                                                  // Member Accessor
                                                                     // LHS
                                                                        // Member Accessor
                                                                           // LHS
                                                                              // Identifier - workingdir
                                                                                 PUSH __main__workingdir
                                                                           // RHS
                                                                              PUSH __field____main____File____children
                                                                           POP __child
                                                                           POP __parent
                                                                           PUSH __parent[__child]
                                                                     // RHS
                                                                        PUSH __field____main____Vector__File____data
                                                                     POP __child
                                                                     POP __parent
                                                                     PUSH __parent[__child]
                                                               // OFFSET
                                                                  // Identifier - j
                                                                     PUSH __main__for__64__block__65__if__66__block__67__if__68__block__69__else__70__block__73__for__74__j
                                                               POP __offset
                                                               POP __pointer
                                                               PUSH __pointer[__offset]
                                                         // RHS
                                                            PUSH __field____main____File____name
                                                         POP __child
                                                         POP __parent
                                                         PUSH __parent[__child]
                                                      POP __arg1
                                                      POP __arg0
                                                   // Pushing args in reverse order
                                                   PUSH __arg1
                                                   PUSH __arg0
                                                   // *** strcmp
                                                   CALL __main____strcmp__char__1__char__1
                                                   // Remove args
                                                   POP __void
                                                   POP __void
                                                   RESPONSE __retval
                                                   PUSH __retval
                                                POP __cond
                                                CMP __cond 0
                                                JEQ __endif__76
                                             // Body
                                                //------------------------
                                                // Code Block
                                                   // Assignment - '='
                                                      // RHS
                                                         // Subscript
                                                            // LHS
                                                               // Member Accessor
                                                                  // LHS
                                                                     // Member Accessor
                                                                        // LHS
                                                                           // Identifier - workingdir
                                                                              PUSH __main__workingdir
                                                                        // RHS
                                                                           PUSH __field____main____File____children
                                                                        POP __child
                                                                        POP __parent
                                                                        PUSH __parent[__child]
                                                                  // RHS
                                                                     PUSH __field____main____Vector__File____data
                                                                  POP __child
                                                                  POP __parent
                                                                  PUSH __parent[__child]
                                                            // OFFSET
                                                               // Identifier - j
                                                                  PUSH __main__for__64__block__65__if__66__block__67__if__68__block__69__else__70__block__73__for__74__j
                                                            POP __offset
                                                            POP __pointer
                                                            PUSH __pointer[__offset]
                                                      POP __rhs
                                                      ASSIGN __main__workingdir __rhs
                                                      PUSH __rhs
                                                   // Statement results can be ignored
                                                   POP __void
                                                   // Break out of __for__74
                                                   JUMP __endfor__74
                                                //------------------------
                                             JUMP __endif__76
                                             // End of if
                                             __endif__76:
                                          //------------------------------
                                       //---------------------------------
                                    // Repeat
                                    JUMP __for__74
                                    // End of For
                                    __endfor__74:
                                 //---------------------------------------
                              //------------------------------------------
                              //------------------------------------------
                              // End of if
                              __endif__70:
                           //---------------------------------------------
                        //------------------------------------------------
                     JUMP __endif__68
                     //---------------------------------------------------
                     // Elif-Statement
                     __elif__68x0:
                        // Condition
                        // Equal
                           // LHS
                              // Subscript
                                 // LHS
                                    // Subscript
                                       // LHS
                                          // Member Accessor
                                             // LHS
                                                // Identifier - tokens
                                                   PUSH __main__for__64__block__65__tokens
                                             // RHS
                                                PUSH __field____main____Vector__char__1____data
                                             POP __child
                                             POP __parent
                                             PUSH __parent[__child]
                                       // OFFSET
                                          // Int Literal
                                             PUSH 1
                                       POP __offset
                                       POP __pointer
                                       PUSH __pointer[__offset]
                                 // OFFSET
                                    // Int Literal
                                       PUSH 0
                                 POP __offset
                                 POP __pointer
                                 PUSH __pointer[__offset]
                           // RHS
                              // Char Literal
                                 PUSH 'l'
                           POP __rhs
                           POP __lhs
                           EQUAL __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__68
                        // Body
                        //------------------------------------------------
                        // Code Block
                           // Pre-Increment
                              // RHS
                                 // Identifier - i
                                    PUSH __main__for__64__i
                              POP __rhs
                              ADD __main__for__64__i __main__for__64__i 1
                              ASSIGN __res __main__for__64__i
                              PUSH __res
                           // Statement results can be ignored
                           POP __void
                           //---------------------------------------------
                           // While-Loop
                           __while__79:
                              // Condition
                                 // Less Than
                                    // LHS
                                       // Identifier - i
                                          PUSH __main__for__64__i
                                    // RHS
                                       // Member Accessor
                                          // LHS
                                             // Identifier - lines
                                                PUSH __main__lines
                                          // RHS
                                             PUSH __field____main____Vector__char__1____size
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    POP __rhs
                                    POP __lhs
                                    LT __res __lhs __rhs
                                    PUSH __res
                                 POP __cond
                                 CMP __cond 0
                                 JEQ __endwhile__79
                              // Body
                                 //---------------------------------------
                                 // Code Block
                                    //------------------------------------
                                    // If-Statement
                                       // Condition
                                          // Equal
                                             // LHS
                                                // Subscript
                                                   // LHS
                                                      // Subscript
                                                         // LHS
                                                            // Member Accessor
                                                               // LHS
                                                                  // Identifier - lines
                                                                     PUSH __main__lines
                                                               // RHS
                                                                  PUSH __field____main____Vector__char__1____data
                                                               POP __child
                                                               POP __parent
                                                               PUSH __parent[__child]
                                                         // OFFSET
                                                            // Identifier - i
                                                               PUSH __main__for__64__i
                                                         POP __offset
                                                         POP __pointer
                                                         PUSH __pointer[__offset]
                                                   // OFFSET
                                                      // Int Literal
                                                         PUSH 0
                                                   POP __offset
                                                   POP __pointer
                                                   PUSH __pointer[__offset]
                                             // RHS
                                                // Char Literal
                                                   PUSH '$'
                                             POP __rhs
                                             POP __lhs
                                             EQUAL __res __lhs __rhs
                                             PUSH __res
                                          POP __cond
                                          CMP __cond 0
                                          JEQ __endif__81
                                       // Body
                                          // Break out of __while__79
                                          JUMP __endwhile__79
                                       JUMP __endif__81
                                       // End of if
                                       __endif__81:
                                    //------------------------------------
                                    // Assignment - '='
                                       // RHS
                                          // Function Call - split(char[], char) -> Vector<:char[]:>
                                             // Arguments
                                                // Subscript
                                                   // LHS
                                                      // Member Accessor
                                                         // LHS
                                                            // Identifier - lines
                                                               PUSH __main__lines
                                                         // RHS
                                                            PUSH __field____main____Vector__char__1____data
                                                         POP __child
                                                         POP __parent
                                                         PUSH __parent[__child]
                                                   // OFFSET
                                                      // Identifier - i
                                                         PUSH __main__for__64__i
                                                   POP __offset
                                                   POP __pointer
                                                   PUSH __pointer[__offset]
                                                // Char Literal
                                                   PUSH ' '
                                                POP __arg1
                                                POP __arg0
                                             // Pushing args in reverse order
                                             PUSH __arg1
                                             PUSH __arg0
                                             // *** split
                                             CALL __main____split__char__1__char
                                             // Remove args
                                             POP __void
                                             POP __void
                                             RESPONSE __retval
                                             PUSH __retval
                                       // LHS
                                          // Variable Declaration
                                             ASSIGN __main__for__64__block__65__if__66__block__67__elif__68x1__block__78__while__79__block__80__tokens 0
                                       POP __rhs
                                       ASSIGN __main__for__64__block__65__if__66__block__67__elif__68x1__block__78__while__79__block__80__tokens __rhs
                                       PUSH __rhs
                                    // Statement results can be ignored
                                    POP __void
                                    //------------------------------------
                                    // If-Statement
                                       // Condition
                                          // Equal
                                             // LHS
                                                // Subscript
                                                   // LHS
                                                      // Subscript
                                                         // LHS
                                                            // Member Accessor
                                                               // LHS
                                                                  // Identifier - tokens
                                                                     PUSH __main__for__64__block__65__if__66__block__67__elif__68x1__block__78__while__79__block__80__tokens
                                                               // RHS
                                                                  PUSH __field____main____Vector__char__1____data
                                                               POP __child
                                                               POP __parent
                                                               PUSH __parent[__child]
                                                         // OFFSET
                                                            // Int Literal
                                                               PUSH 0
                                                         POP __offset
                                                         POP __pointer
                                                         PUSH __pointer[__offset]
                                                   // OFFSET
                                                      // Int Literal
                                                         PUSH 0
                                                   POP __offset
                                                   POP __pointer
                                                   PUSH __pointer[__offset]
                                             // RHS
                                                // Char Literal
                                                   PUSH 'd'
                                             POP __rhs
                                             POP __lhs
                                             EQUAL __res __lhs __rhs
                                             PUSH __res
                                          POP __cond
                                          CMP __cond 0
                                          JEQ __else__82
                                       // Body
                                          //------------------------------
                                          // Code Block
                                             // Assignment - '='
                                                // RHS
                                                   // Constructor Call - File::File(char[]) -> File
                                                      // Arguments
                                                         // Subscript
                                                            // LHS
                                                               // Member Accessor
                                                                  // LHS
                                                                     // Identifier - tokens
                                                                        PUSH __main__for__64__block__65__if__66__block__67__elif__68x1__block__78__while__79__block__80__tokens
                                                                  // RHS
                                                                     PUSH __field____main____Vector__char__1____data
                                                                  POP __child
                                                                  POP __parent
                                                                  PUSH __parent[__child]
                                                            // OFFSET
                                                               // Int Literal
                                                                  PUSH 1
                                                            POP __offset
                                                            POP __pointer
                                                            PUSH __pointer[__offset]
                                                         POP __arg0
                                                      // Pushing args in reverse order
                                                      PUSH __arg0
                                                      CALL __ctor____main____File____File__char__1
                                                      // Remove args
                                                      POP __void
                                                      RESPONSE __retval
                                                      PUSH __retval
                                                // LHS
                                                   // Variable Declaration
                                                      ASSIGN __main__for__64__block__65__if__66__block__67__elif__68x1__block__78__while__79__block__80__if__82__block__83__dir 0
                                                POP __rhs
                                                ASSIGN __main__for__64__block__65__if__66__block__67__elif__68x1__block__78__while__79__block__80__if__82__block__83__dir __rhs
                                                PUSH __rhs
                                             // Statement results can be ignored
                                             POP __void
                                             // Assignment - '='
                                                // RHS
                                                   // Identifier - workingdir
                                                      PUSH __main__workingdir
                                                // LHS
                                                   // Member Accessor Assignment
                                                      // LHS
                                                         // Identifier - dir
                                                            PUSH __main__for__64__block__65__if__66__block__67__elif__68x1__block__78__while__79__block__80__if__82__block__83__dir
                                                      // RHS
                                                         PUSH __field____main____File____parent
                                                      POP __child
                                                      POP __parent
                                                      POP __rhs
                                                ASSIGN __parent[__child] __rhs
                                                PUSH __rhs
                                             // Statement results can be ignored
                                             POP __void
                                             // Assignment - '='
                                                // RHS
                                                   // Int Literal
                                                      PUSH 1
                                                // LHS
                                                   // Member Accessor Assignment
                                                      // LHS
                                                         // Identifier - dir
                                                            PUSH __main__for__64__block__65__if__66__block__67__elif__68x1__block__78__while__79__block__80__if__82__block__83__dir
                                                      // RHS
                                                         PUSH __field____main____File____is_dir
                                                      POP __child
                                                      POP __parent
                                                      POP __rhs
                                                ASSIGN __parent[__child] __rhs
                                                PUSH __rhs
                                             // Statement results can be ignored
                                             POP __void
                                             // Method Call - Vector<:File:>::pushBack(File) -> void
                                                // LHS
                                                   // Member Accessor
                                                      // LHS
                                                         // Identifier - workingdir
                                                            PUSH __main__workingdir
                                                      // RHS
                                                         PUSH __field____main____File____children
                                                      POP __child
                                                      POP __parent
                                                      PUSH __parent[__child]
                                                // RHS
                                                // Arguments
                                                   // Identifier - dir
                                                      PUSH __main__for__64__block__65__if__66__block__67__elif__68x1__block__78__while__79__block__80__if__82__block__83__dir
                                                   POP __arg0
                                                POP __obj
                                                // Pushing args in reverse order
                                                PUSH __arg0
                                                PUSH __obj
                                                CALL __method____main____Vector__File____pushBack__File
                                                POP __void
                                                // Remove args
                                                POP __void
                                                RESPONSE __retval
                                                PUSH __retval
                                             // Statement results can be ignored
                                             POP __void
                                             // Method Call - Vector<:File:>::pushBack(File) -> void
                                                // LHS
                                                   // Identifier - all_files
                                                      PUSH __main__all_files
                                                // RHS
                                                // Arguments
                                                   // Identifier - dir
                                                      PUSH __main__for__64__block__65__if__66__block__67__elif__68x1__block__78__while__79__block__80__if__82__block__83__dir
                                                   POP __arg0
                                                POP __obj
                                                // Pushing args in reverse order
                                                PUSH __arg0
                                                PUSH __obj
                                                CALL __method____main____Vector__File____pushBack__File
                                                POP __void
                                                // Remove args
                                                POP __void
                                                RESPONSE __retval
                                                PUSH __retval
                                             // Statement results can be ignored
                                             POP __void
                                          //------------------------------
                                       JUMP __endif__82
                                       //---------------------------------
                                       // Else-Statement
                                       __else__82:
                                       //---------------------------------
                                       // Code Block
                                          // Assignment - '='
                                             // RHS
                                                // Function Call - stringToInt(char[]) -> int
                                                   // Arguments
                                                      // Subscript
                                                         // LHS
                                                            // Member Accessor
                                                               // LHS
                                                                  // Identifier - tokens
                                                                     PUSH __main__for__64__block__65__if__66__block__67__elif__68x1__block__78__while__79__block__80__tokens
                                                               // RHS
                                                                  PUSH __field____main____Vector__char__1____data
                                                               POP __child
                                                               POP __parent
                                                               PUSH __parent[__child]
                                                         // OFFSET
                                                            // Int Literal
                                                               PUSH 0
                                                         POP __offset
                                                         POP __pointer
                                                         PUSH __pointer[__offset]
                                                      POP __arg0
                                                   // Pushing args in reverse order
                                                   PUSH __arg0
                                                   // *** stringToInt
                                                   CALL __builtin__stringToInt__char__1
                                                   // Remove args
                                                   POP __void
                                                   RESPONSE __retval
                                                   PUSH __retval
                                             // LHS
                                                // Variable Declaration
                                                   ASSIGN __main__for__64__block__65__if__66__block__67__elif__68x1__block__78__while__79__block__80__else__82__block__84__size 0
                                             POP __rhs
                                             ASSIGN __main__for__64__block__65__if__66__block__67__elif__68x1__block__78__while__79__block__80__else__82__block__84__size __rhs
                                             PUSH __rhs
                                          // Statement results can be ignored
                                          POP __void
                                          // Assignment - '='
                                             // RHS
                                                // Constructor Call - File::File(char[]) -> File
                                                   // Arguments
                                                      // Subscript
                                                         // LHS
                                                            // Member Accessor
                                                               // LHS
                                                                  // Identifier - tokens
                                                                     PUSH __main__for__64__block__65__if__66__block__67__elif__68x1__block__78__while__79__block__80__tokens
                                                               // RHS
                                                                  PUSH __field____main____Vector__char__1____data
                                                               POP __child
                                                               POP __parent
                                                               PUSH __parent[__child]
                                                         // OFFSET
                                                            // Int Literal
                                                               PUSH 1
                                                         POP __offset
                                                         POP __pointer
                                                         PUSH __pointer[__offset]
                                                      POP __arg0
                                                   // Pushing args in reverse order
                                                   PUSH __arg0
                                                   CALL __ctor____main____File____File__char__1
                                                   // Remove args
                                                   POP __void
                                                   RESPONSE __retval
                                                   PUSH __retval
                                             // LHS
                                                // Variable Declaration
                                                   ASSIGN __main__for__64__block__65__if__66__block__67__elif__68x1__block__78__while__79__block__80__else__82__block__84__f 0
                                             POP __rhs
                                             ASSIGN __main__for__64__block__65__if__66__block__67__elif__68x1__block__78__while__79__block__80__else__82__block__84__f __rhs
                                             PUSH __rhs
                                          // Statement results can be ignored
                                          POP __void
                                          // Assignment - '='
                                             // RHS
                                                // Identifier - size
                                                   PUSH __main__for__64__block__65__if__66__block__67__elif__68x1__block__78__while__79__block__80__else__82__block__84__size
                                             // LHS
                                                // Member Accessor Assignment
                                                   // LHS
                                                      // Identifier - f
                                                         PUSH __main__for__64__block__65__if__66__block__67__elif__68x1__block__78__while__79__block__80__else__82__block__84__f
                                                   // RHS
                                                      PUSH __field____main____File____size
                                                   POP __child
                                                   POP __parent
                                                   POP __rhs
                                             ASSIGN __parent[__child] __rhs
                                             PUSH __rhs
                                          // Statement results can be ignored
                                          POP __void
                                          // Assignment - '='
                                             // RHS
                                                // Identifier - workingdir
                                                   PUSH __main__workingdir
                                             // LHS
                                                // Member Accessor Assignment
                                                   // LHS
                                                      // Identifier - f
                                                         PUSH __main__for__64__block__65__if__66__block__67__elif__68x1__block__78__while__79__block__80__else__82__block__84__f
                                                   // RHS
                                                      PUSH __field____main____File____parent
                                                   POP __child
                                                   POP __parent
                                                   POP __rhs
                                             ASSIGN __parent[__child] __rhs
                                             PUSH __rhs
                                          // Statement results can be ignored
                                          POP __void
                                          // Assignment - '='
                                             // RHS
                                                // Int Literal
                                                   PUSH 0
                                             // LHS
                                                // Member Accessor Assignment
                                                   // LHS
                                                      // Identifier - f
                                                         PUSH __main__for__64__block__65__if__66__block__67__elif__68x1__block__78__while__79__block__80__else__82__block__84__f
                                                   // RHS
                                                      PUSH __field____main____File____is_dir
                                                   POP __child
                                                   POP __parent
                                                   POP __rhs
                                             ASSIGN __parent[__child] __rhs
                                             PUSH __rhs
                                          // Statement results can be ignored
                                          POP __void
                                          // Method Call - Vector<:File:>::pushBack(File) -> void
                                             // LHS
                                                // Member Accessor
                                                   // LHS
                                                      // Identifier - workingdir
                                                         PUSH __main__workingdir
                                                   // RHS
                                                      PUSH __field____main____File____children
                                                   POP __child
                                                   POP __parent
                                                   PUSH __parent[__child]
                                             // RHS
                                             // Arguments
                                                // Identifier - f
                                                   PUSH __main__for__64__block__65__if__66__block__67__elif__68x1__block__78__while__79__block__80__else__82__block__84__f
                                                POP __arg0
                                             POP __obj
                                             // Pushing args in reverse order
                                             PUSH __arg0
                                             PUSH __obj
                                             CALL __method____main____Vector__File____pushBack__File
                                             POP __void
                                             // Remove args
                                             POP __void
                                             RESPONSE __retval
                                             PUSH __retval
                                          // Statement results can be ignored
                                          POP __void
                                          // Method Call - Vector<:File:>::pushBack(File) -> void
                                             // LHS
                                                // Identifier - all_files
                                                   PUSH __main__all_files
                                             // RHS
                                             // Arguments
                                                // Identifier - f
                                                   PUSH __main__for__64__block__65__if__66__block__67__elif__68x1__block__78__while__79__block__80__else__82__block__84__f
                                                POP __arg0
                                             POP __obj
                                             // Pushing args in reverse order
                                             PUSH __arg0
                                             PUSH __obj
                                             CALL __method____main____Vector__File____pushBack__File
                                             POP __void
                                             // Remove args
                                             POP __void
                                             RESPONSE __retval
                                             PUSH __retval
                                          // Statement results can be ignored
                                          POP __void
                                       //---------------------------------
                                       //---------------------------------
                                       // End of if
                                       __endif__82:
                                    //------------------------------------
                                    // Pre-Increment
                                       // RHS
                                          // Identifier - i
                                             PUSH __main__for__64__i
                                       POP __rhs
                                       ADD __main__for__64__i __main__for__64__i 1
                                       ASSIGN __res __main__for__64__i
                                       PUSH __res
                                    // Statement results can be ignored
                                    POP __void
                                 //---------------------------------------
                              JUMP __while__79
                              // End of While
                              __endwhile__79:
                           //---------------------------------------------
                           // Pre-Decrement
                              // RHS
                                 // Identifier - i
                                    PUSH __main__for__64__i
                              POP __rhs
                              SUBTRACT __main__for__64__i __main__for__64__i 1
                              ASSIGN __res __main__for__64__i
                              PUSH __res
                           // Statement results can be ignored
                           POP __void
                        //------------------------------------------------
                        JUMP __endif__68
                     //---------------------------------------------------
                     // End of if
                     __endif__68:
                  //------------------------------------------------------
               //---------------------------------------------------------
            JUMP __endif__66
            // End of if
            __endif__66:
         //---------------------------------------------------------------
      //------------------------------------------------------------------
   // Repeat
   JUMP __for__64
   // End of For
   __endfor__64:
//------------------------------------------------------------------------
//========================================================================
// Function Declaration - printfs(File, int) -> void
JUMP __end____main____printfs__File__int
__main____printfs__File__int:
   // Parameters
      // Param: fs
      STACKGET __main__printfs__fs 0
      // Param: indent
      STACKGET __main__printfs__indent 1
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Equal
                  // LHS
                     // Identifier - fs
                        PUSH __main__printfs__fs
                  // RHS
                     // Null Literal
                        ASSIGN __null 0
                        PUSH __null
                  POP __rhs
                  POP __lhs
                  EQUAL __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__86
            // Body
               // Return
                  RETURN 0
            JUMP __endif__86
            // End of if
            __endif__86:
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // For-Loop
         // Init
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Variable Declaration
                     ASSIGN __main__printfs__block__85__for__87__i 0
               POP __rhs
               ASSIGN __main__printfs__block__85__for__87__i __rhs
               PUSH __rhs
         JUMP __forcond__87
         __for__87:
            // Update
               // Pre-Increment
                  // RHS
                     // Identifier - i
                        PUSH __main__printfs__block__85__for__87__i
                  POP __rhs
                  ADD __main__printfs__block__85__for__87__i __main__printfs__block__85__for__87__i 1
                  ASSIGN __res __main__printfs__block__85__for__87__i
                  PUSH __res
            __forcond__87:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - i
                        PUSH __main__printfs__block__85__for__87__i
                  // RHS
                     // Identifier - indent
                        PUSH __main__printfs__indent
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endfor__87
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Function Call - print(char) -> void
                     // Arguments
                        // Char Literal
                           PUSH ' '
                        POP __arg0
                     // Pushing args in reverse order
                     PUSH __arg0
                     // *** print
                     CALL __builtin__print__char
                     // Remove args
                     POP __void
                     RESPONSE __retval
                     PUSH __retval
                  // Statement results can be ignored
                  POP __void
                  // Function Call - print(char) -> void
                     // Arguments
                        // Char Literal
                           PUSH ' '
                        POP __arg0
                     // Pushing args in reverse order
                     PUSH __arg0
                     // *** print
                     CALL __builtin__print__char
                     // Remove args
                     POP __void
                     RESPONSE __retval
                     PUSH __retval
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            // Repeat
            JUMP __for__87
            // End of For
            __endfor__87:
         //---------------------------------------------------------------
         // Function Call - print(char[]) -> void
            // Arguments
               // Member Accessor
                  // LHS
                     // Identifier - fs
                        PUSH __main__printfs__fs
                  // RHS
                     PUSH __field____main____File____name
                  POP __child
                  POP __parent
                  PUSH __parent[__child]
               POP __arg0
            // Pushing args in reverse order
            PUSH __arg0
            // *** print
            CALL __builtin__print__char__1
            // Remove args
            POP __void
            RESPONSE __retval
            PUSH __retval
         // Statement results can be ignored
         POP __void
         // Function Call - print(char) -> void
            // Arguments
               // Char Literal
                  PUSH '('
               POP __arg0
            // Pushing args in reverse order
            PUSH __arg0
            // *** print
            CALL __builtin__print__char
            // Remove args
            POP __void
            RESPONSE __retval
            PUSH __retval
         // Statement results can be ignored
         POP __void
         // Function Call - print(int) -> void
            // Arguments
               // Member Accessor
                  // LHS
                     // Identifier - fs
                        PUSH __main__printfs__fs
                  // RHS
                     PUSH __field____main____File____size
                  POP __child
                  POP __parent
                  PUSH __parent[__child]
               POP __arg0
            // Pushing args in reverse order
            PUSH __arg0
            // *** print
            CALL __builtin__print__int
            // Remove args
            POP __void
            RESPONSE __retval
            PUSH __retval
         // Statement results can be ignored
         POP __void
         // Function Call - print(char) -> void
            // Arguments
               // Char Literal
                  PUSH ')'
               POP __arg0
            // Pushing args in reverse order
            PUSH __arg0
            // *** print
            CALL __builtin__print__char
            // Remove args
            POP __void
            RESPONSE __retval
            PUSH __retval
         // Statement results can be ignored
         POP __void
         // Function Call - print(char) -> void
            // Arguments
               // Char Literal
                  PUSH ' '
               POP __arg0
            // Pushing args in reverse order
            PUSH __arg0
            // *** print
            CALL __builtin__print__char
            // Remove args
            POP __void
            RESPONSE __retval
            PUSH __retval
         // Statement results can be ignored
         POP __void
         // Function Call - print(int) -> void
            // Arguments
               // Member Accessor
                  // LHS
                     // Identifier - fs
                        PUSH __main__printfs__fs
                  // RHS
                     PUSH __field____main____File____is_dir
                  POP __child
                  POP __parent
                  PUSH __parent[__child]
               POP __arg0
            // Pushing args in reverse order
            PUSH __arg0
            // *** print
            CALL __builtin__print__int
            // Remove args
            POP __void
            RESPONSE __retval
            PUSH __retval
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // For-Loop
         // Init
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Variable Declaration
                     ASSIGN __main__printfs__block__85__for__89__i 0
               POP __rhs
               ASSIGN __main__printfs__block__85__for__89__i __rhs
               PUSH __rhs
         JUMP __forcond__89
         __for__89:
            // Update
               // Pre-Increment
                  // RHS
                     // Identifier - i
                        PUSH __main__printfs__block__85__for__89__i
                  POP __rhs
                  ADD __main__printfs__block__85__for__89__i __main__printfs__block__85__for__89__i 1
                  ASSIGN __res __main__printfs__block__85__for__89__i
                  PUSH __res
            __forcond__89:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - i
                        PUSH __main__printfs__block__85__for__89__i
                  // RHS
                     // Member Accessor
                        // LHS
                           // Member Accessor
                              // LHS
                                 // Identifier - fs
                                    PUSH __main__printfs__fs
                              // RHS
                                 PUSH __field____main____File____children
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // RHS
                           PUSH __field____main____Vector__File____size
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endfor__89
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Function Call - printfs(File, int) -> void
                     // Arguments
                        // Subscript
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // Member Accessor
                                       // LHS
                                          // Identifier - fs
                                             PUSH __main__printfs__fs
                                       // RHS
                                          PUSH __field____main____File____children
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                 // RHS
                                    PUSH __field____main____Vector__File____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // OFFSET
                              // Identifier - i
                                 PUSH __main__printfs__block__85__for__89__i
                           POP __offset
                           POP __pointer
                           PUSH __pointer[__offset]
                        // Addition
                           // LHS
                              // Identifier - indent
                                 PUSH __main__printfs__indent
                           // RHS
                              // Int Literal
                                 PUSH 1
                           POP __rhs
                           POP __lhs
                           ADD __res __lhs __rhs
                           PUSH __res
                        POP __arg1
                        POP __arg0
                     // Pushing args in reverse order
                     PUSH __arg1
                     PUSH __arg0
                     // *** printfs
                     CALL __main____printfs__File__int
                     // Remove args
                     POP __void
                     POP __void
                     RESPONSE __retval
                     PUSH __retval
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            // Repeat
            JUMP __for__89
            // End of For
            __endfor__89:
         //---------------------------------------------------------------
      //------------------------------------------------------------------
   RETURN 0
__end____main____printfs__File__int:
// End Function Declaration - __main____printfs__File__int
//========================================================================

//========================================================================
// Function Declaration - sum_sizes(File) -> void
JUMP __end____main____sum_sizes__File
__main____sum_sizes__File:
   // Parameters
      // Param: fs
      STACKGET __main__sum_sizes__fs 0
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Equal
                  // LHS
                     // Identifier - fs
                        PUSH __main__sum_sizes__fs
                  // RHS
                     // Null Literal
                        ASSIGN __null 0
                        PUSH __null
                  POP __rhs
                  POP __lhs
                  EQUAL __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__92
            // Body
               // Return
                  RETURN 0
            JUMP __endif__92
            // End of if
            __endif__92:
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // For-Loop
         // Init
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Variable Declaration
                     ASSIGN __main__sum_sizes__block__91__for__93__i 0
               POP __rhs
               ASSIGN __main__sum_sizes__block__91__for__93__i __rhs
               PUSH __rhs
         JUMP __forcond__93
         __for__93:
            // Update
               // Pre-Increment
                  // RHS
                     // Identifier - i
                        PUSH __main__sum_sizes__block__91__for__93__i
                  POP __rhs
                  ADD __main__sum_sizes__block__91__for__93__i __main__sum_sizes__block__91__for__93__i 1
                  ASSIGN __res __main__sum_sizes__block__91__for__93__i
                  PUSH __res
            __forcond__93:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - i
                        PUSH __main__sum_sizes__block__91__for__93__i
                  // RHS
                     // Member Accessor
                        // LHS
                           // Member Accessor
                              // LHS
                                 // Identifier - fs
                                    PUSH __main__sum_sizes__fs
                              // RHS
                                 PUSH __field____main____File____children
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // RHS
                           PUSH __field____main____Vector__File____size
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endfor__93
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Function Call - sum_sizes(File) -> void
                     // Arguments
                        // Subscript
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // Member Accessor
                                       // LHS
                                          // Identifier - fs
                                             PUSH __main__sum_sizes__fs
                                       // RHS
                                          PUSH __field____main____File____children
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                 // RHS
                                    PUSH __field____main____Vector__File____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // OFFSET
                              // Identifier - i
                                 PUSH __main__sum_sizes__block__91__for__93__i
                           POP __offset
                           POP __pointer
                           PUSH __pointer[__offset]
                        POP __arg0
                     // Pushing args in reverse order
                     PUSH __arg0
                     // *** sum_sizes
                     CALL __main____sum_sizes__File
                     // Remove args
                     POP __void
                     RESPONSE __retval
                     PUSH __retval
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '+='
                     // RHS
                        // Member Accessor
                           // LHS
                              // Subscript
                                 // LHS
                                    // Member Accessor
                                       // LHS
                                          // Member Accessor
                                             // LHS
                                                // Identifier - fs
                                                   PUSH __main__sum_sizes__fs
                                             // RHS
                                                PUSH __field____main____File____children
                                             POP __child
                                             POP __parent
                                             PUSH __parent[__child]
                                       // RHS
                                          PUSH __field____main____Vector__File____data
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                 // OFFSET
                                    // Identifier - i
                                       PUSH __main__sum_sizes__block__91__for__93__i
                                 POP __offset
                                 POP __pointer
                                 PUSH __pointer[__offset]
                           // RHS
                              PUSH __field____main____File____size
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Identifier - fs
                                 PUSH __main__sum_sizes__fs
                           // RHS
                              PUSH __field____main____File____size
                           POP __child
                           POP __parent
                           POP __rhs
                     ADD __parent[__child] __parent[__child] __rhs
                     PUSH __parent[__child]
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            // Repeat
            JUMP __for__93
            // End of For
            __endfor__93:
         //---------------------------------------------------------------
      //------------------------------------------------------------------
   RETURN 0
__end____main____sum_sizes__File:
// End Function Declaration - __main____sum_sizes__File
//========================================================================

// Function Call - sum_sizes(File) -> void
   // Arguments
      // Identifier - root
         PUSH __main__root
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** sum_sizes
   CALL __main____sum_sizes__File
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
//========================================================================
// Function Declaration - sum_small_dirs(File) -> int
JUMP __end____main____sum_small_dirs__File
__main____sum_small_dirs__File:
   // Parameters
      // Param: fs
      STACKGET __main__sum_small_dirs__fs 0
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Equal
                  // LHS
                     // Identifier - fs
                        PUSH __main__sum_small_dirs__fs
                  // RHS
                     // Null Literal
                        ASSIGN __null 0
                        PUSH __null
                  POP __rhs
                  POP __lhs
                  EQUAL __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__96
            // Body
               // Return
                  // Int Literal
                     PUSH 0
                  POP __rVal
                  RETURN __rVal
            JUMP __endif__96
            // End of if
            __endif__96:
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Negate
                  // RHS
                     // Member Accessor
                        // LHS
                           // Identifier - fs
                              PUSH __main__sum_small_dirs__fs
                        // RHS
                           PUSH __field____main____File____is_dir
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                  POP __rhs
                  NOT __res __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__97
            // Body
               // Return
                  // Int Literal
                     PUSH 0
                  POP __rVal
                  RETURN __rVal
            JUMP __endif__97
            // End of if
            __endif__97:
         //---------------------------------------------------------------
         // Assignment - '='
            // RHS
               // Int Literal
                  PUSH 0
            // LHS
               // Variable Declaration
                  ASSIGN __main__sum_small_dirs__block__95__sum 0
            POP __rhs
            ASSIGN __main__sum_small_dirs__block__95__sum __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Less Than
                  // LHS
                     // Member Accessor
                        // LHS
                           // Identifier - fs
                              PUSH __main__sum_small_dirs__fs
                        // RHS
                           PUSH __field____main____File____size
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                  // RHS
                     // Int Literal
                        PUSH 100000
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__98
            // Body
               // Assignment - '+='
                  // RHS
                     // Member Accessor
                        // LHS
                           // Identifier - fs
                              PUSH __main__sum_small_dirs__fs
                        // RHS
                           PUSH __field____main____File____size
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                  POP __rhs
                  ADD __main__sum_small_dirs__block__95__sum __main__sum_small_dirs__block__95__sum __rhs
                  PUSH __main__sum_small_dirs__block__95__sum
               // Statement results can be ignored
               POP __void
            JUMP __endif__98
            // End of if
            __endif__98:
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // For-Loop
         // Init
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Variable Declaration
                     ASSIGN __main__sum_small_dirs__block__95__for__99__i 0
               POP __rhs
               ASSIGN __main__sum_small_dirs__block__95__for__99__i __rhs
               PUSH __rhs
         JUMP __forcond__99
         __for__99:
            // Update
               // Pre-Increment
                  // RHS
                     // Identifier - i
                        PUSH __main__sum_small_dirs__block__95__for__99__i
                  POP __rhs
                  ADD __main__sum_small_dirs__block__95__for__99__i __main__sum_small_dirs__block__95__for__99__i 1
                  ASSIGN __res __main__sum_small_dirs__block__95__for__99__i
                  PUSH __res
            __forcond__99:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - i
                        PUSH __main__sum_small_dirs__block__95__for__99__i
                  // RHS
                     // Member Accessor
                        // LHS
                           // Member Accessor
                              // LHS
                                 // Identifier - fs
                                    PUSH __main__sum_small_dirs__fs
                              // RHS
                                 PUSH __field____main____File____children
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // RHS
                           PUSH __field____main____Vector__File____size
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endfor__99
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '+='
                     // RHS
                        // Function Call - sum_small_dirs(File) -> int
                           // Arguments
                              // Subscript
                                 // LHS
                                    // Member Accessor
                                       // LHS
                                          // Member Accessor
                                             // LHS
                                                // Identifier - fs
                                                   PUSH __main__sum_small_dirs__fs
                                             // RHS
                                                PUSH __field____main____File____children
                                             POP __child
                                             POP __parent
                                             PUSH __parent[__child]
                                       // RHS
                                          PUSH __field____main____Vector__File____data
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                 // OFFSET
                                    // Identifier - i
                                       PUSH __main__sum_small_dirs__block__95__for__99__i
                                 POP __offset
                                 POP __pointer
                                 PUSH __pointer[__offset]
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg0
                           // *** sum_small_dirs
                           CALL __main____sum_small_dirs__File
                           // Remove args
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                     POP __rhs
                     ADD __main__sum_small_dirs__block__95__sum __main__sum_small_dirs__block__95__sum __rhs
                     PUSH __main__sum_small_dirs__block__95__sum
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            // Repeat
            JUMP __for__99
            // End of For
            __endfor__99:
         //---------------------------------------------------------------
         // Return
            // Identifier - sum
               PUSH __main__sum_small_dirs__block__95__sum
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____sum_small_dirs__File:
// End Function Declaration - __main____sum_small_dirs__File
//========================================================================

// Assignment - '='
   // RHS
      // Int Literal
         PUSH 70000000
   // LHS
      // Variable Declaration
         ASSIGN __main__total_space 0
   POP __rhs
   ASSIGN __main__total_space __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Assignment - '='
   // RHS
      // Int Literal
         PUSH 30000000
   // LHS
      // Variable Declaration
         ASSIGN __main__unused_space_needed 0
   POP __rhs
   ASSIGN __main__unused_space_needed __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Assignment - '='
   // RHS
      // Subtraction
         // LHS
            // Identifier - total_space
               PUSH __main__total_space
         // RHS
            // Identifier - unused_space_needed
               PUSH __main__unused_space_needed
         POP __rhs
         POP __lhs
         SUBTRACT __res __lhs __rhs
         PUSH __res
   // LHS
      // Variable Declaration
         ASSIGN __main__effective_space 0
   POP __rhs
   ASSIGN __main__effective_space __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Assignment - '='
   // RHS
      // Subtraction
         // LHS
            // Member Accessor
               // LHS
                  // Identifier - root
                     PUSH __main__root
               // RHS
                  PUSH __field____main____File____size
               POP __child
               POP __parent
               PUSH __parent[__child]
         // RHS
            // Identifier - effective_space
               PUSH __main__effective_space
         POP __rhs
         POP __lhs
         SUBTRACT __res __lhs __rhs
         PUSH __res
   // LHS
      // Variable Declaration
         ASSIGN __main__min_space_to_remove 0
   POP __rhs
   ASSIGN __main__min_space_to_remove __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Assignment - '='
   // RHS
      // Identifier - total_space
         PUSH __main__total_space
   // LHS
      // Variable Declaration
         ASSIGN __main__smallest 0
   POP __rhs
   ASSIGN __main__smallest __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
//------------------------------------------------------------------------
// For-Loop
// Init
   // Assignment - '='
      // RHS
         // Int Literal
            PUSH 0
      // LHS
         // Variable Declaration
            ASSIGN __main__for__101__i 0
      POP __rhs
      ASSIGN __main__for__101__i __rhs
      PUSH __rhs
JUMP __forcond__101
__for__101:
   // Update
      // Pre-Increment
         // RHS
            // Identifier - i
               PUSH __main__for__101__i
         POP __rhs
         ADD __main__for__101__i __main__for__101__i 1
         ASSIGN __res __main__for__101__i
         PUSH __res
   __forcond__101:
   // Condition
      // Less Than
         // LHS
            // Identifier - i
               PUSH __main__for__101__i
         // RHS
            // Member Accessor
               // LHS
                  // Identifier - all_files
                     PUSH __main__all_files
               // RHS
                  PUSH __field____main____Vector__File____size
               POP __child
               POP __parent
               PUSH __parent[__child]
         POP __rhs
         POP __lhs
         LT __res __lhs __rhs
         PUSH __res
      POP __cond
      CMP __cond 0
      JEQ __endfor__101
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Member Accessor
                  // LHS
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // Identifier - all_files
                                    PUSH __main__all_files
                              // RHS
                                 PUSH __field____main____Vector__File____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Identifier - i
                              PUSH __main__for__101__i
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                  // RHS
                     PUSH __field____main____File____is_dir
                  POP __child
                  POP __parent
                  PUSH __parent[__child]
               POP __cond
               CMP __cond 0
               JEQ __endif__103
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Greater Than or Equal to
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // Subscript
                                       // LHS
                                          // Member Accessor
                                             // LHS
                                                // Identifier - all_files
                                                   PUSH __main__all_files
                                             // RHS
                                                PUSH __field____main____Vector__File____data
                                             POP __child
                                             POP __parent
                                             PUSH __parent[__child]
                                       // OFFSET
                                          // Identifier - i
                                             PUSH __main__for__101__i
                                       POP __offset
                                       POP __pointer
                                       PUSH __pointer[__offset]
                                 // RHS
                                    PUSH __field____main____File____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              // Identifier - min_space_to_remove
                                 PUSH __main__min_space_to_remove
                           POP __rhs
                           POP __lhs
                           GE __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__105
                     // Body
                        //------------------------------------------------
                        // Code Block
                           //---------------------------------------------
                           // If-Statement
                              // Condition
                                 // Less Than
                                    // LHS
                                       // Member Accessor
                                          // LHS
                                             // Subscript
                                                // LHS
                                                   // Member Accessor
                                                      // LHS
                                                         // Identifier - all_files
                                                            PUSH __main__all_files
                                                      // RHS
                                                         PUSH __field____main____Vector__File____data
                                                      POP __child
                                                      POP __parent
                                                      PUSH __parent[__child]
                                                // OFFSET
                                                   // Identifier - i
                                                      PUSH __main__for__101__i
                                                POP __offset
                                                POP __pointer
                                                PUSH __pointer[__offset]
                                          // RHS
                                             PUSH __field____main____File____size
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    // RHS
                                       // Identifier - smallest
                                          PUSH __main__smallest
                                    POP __rhs
                                    POP __lhs
                                    LT __res __lhs __rhs
                                    PUSH __res
                                 POP __cond
                                 CMP __cond 0
                                 JEQ __endif__107
                              // Body
                                 //---------------------------------------
                                 // Code Block
                                    // Assignment - '='
                                       // RHS
                                          // Member Accessor
                                             // LHS
                                                // Subscript
                                                   // LHS
                                                      // Member Accessor
                                                         // LHS
                                                            // Identifier - all_files
                                                               PUSH __main__all_files
                                                         // RHS
                                                            PUSH __field____main____Vector__File____data
                                                         POP __child
                                                         POP __parent
                                                         PUSH __parent[__child]
                                                   // OFFSET
                                                      // Identifier - i
                                                         PUSH __main__for__101__i
                                                   POP __offset
                                                   POP __pointer
                                                   PUSH __pointer[__offset]
                                             // RHS
                                                PUSH __field____main____File____size
                                             POP __child
                                             POP __parent
                                             PUSH __parent[__child]
                                       POP __rhs
                                       ASSIGN __main__smallest __rhs
                                       PUSH __rhs
                                    // Statement results can be ignored
                                    POP __void
                                 //---------------------------------------
                              JUMP __endif__107
                              // End of if
                              __endif__107:
                           //---------------------------------------------
                        //------------------------------------------------
                     JUMP __endif__105
                     // End of if
                     __endif__105:
                  //------------------------------------------------------
               //---------------------------------------------------------
            JUMP __endif__103
            // End of if
            __endif__103:
         //---------------------------------------------------------------
      //------------------------------------------------------------------
   // Repeat
   JUMP __for__101
   // End of For
   __endfor__101:
//------------------------------------------------------------------------
// Function Call - println(int) -> void
   // Arguments
      // Identifier - smallest
         PUSH __main__smallest
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL __builtin__println__int
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
//========================================================================
//### END OF CODE ########################################################
//========================================================================

