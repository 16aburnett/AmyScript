// AmyAssembly compiled from AmyScript
//========================================================================

//========================================================================
//### LIBRARY CODE #######################################################
//========================================================================

// AmyScript Built-in library
// Author: Amy Burnett
//========================================================================
// Global Builtin Variables

    assign __null 0

//========================================================================
// dont execute library functions 

jump __endOfLibrary

//========================================================================
// Prints a given string to the screen
// void print (char[] stringToPrint);
__builtin__print__char__1:
    // grab string
    stackget __str 0
    // print each char
    // init
    assign __i 0
__print__char__1__loop:
    // cond
    cmp __str[__i] 0
    jeq __print__char__1__endloop
    // Body
    print __str[__i]
    // update
    add __i __i 1
    // repeat
    jump __print__char__1__loop
__print__char__1__endloop:
    return 0

//========================================================================
// Prints an int to the screen
// void print (int intToPrint);
__builtin__print__int:
    stackget __str 0
    print __str
    return 0

//========================================================================
// Prints a float to the screen
// void print (float floatToPrint);
__builtin__print__float:
    stackget __str 0
    print __str
    return 0

//========================================================================
// Prints a char to the screen
// void print (char charToPrint);
__builtin__print__char:
    // grab string
    stackget __char 0
    print __char
    return 0

//========================================================================
// Prints an enum's integer value 
// void print (Enum e);
__builtin__print__Enum:
    stackget __e 0
    print __e
    return 0

//========================================================================
// Prints a given string to the screen with a newline at the end
// void println (char[] stringToPrint);
__builtin__println__char__1:
    // grab string
    stackget __str 0
    // print each char
    // init
    assign __i 0
__println__char__1__loop:
    // cond
    cmp __str[__i] 0
    jeq __println__char__1__endloop
    // Body
    print __str[__i]
    // update
    add __i __i 1
    // repeat
    jump __println__char__1__loop
__println__char__1__endloop:
    println
    return 0

//========================================================================
// Prints an int to the screen with a newline
// void print (int intToPrint);
__builtin__println__int:
    stackget __str 0
    println __str
    return 0

//========================================================================
// Prints a float to the screen with a newline
// void println (float floatToPrint);
__builtin__println__float:
    stackget __str 0
    println __str
    return 0

//========================================================================
// Prints a char to the screen with a newline
// void println (char charToPrint);
__builtin__println__char:
    // grab string
    stackget __char 0
    println __char
    return 0

//========================================================================
// Prints an enum's integer value with a newline
// void println (Enum e);
__builtin__println__Enum:
    stackget __e 0
    println __e
    return 0

//========================================================================
// Prints a newline to the console
// void println ();
__builtin__println:
    println 
    return 0

//========================================================================
// grabs input from the console 
// char[] input ();
__builtin__input:
    input __line
    return __line

//========================================================================
// exits/stops the program 
__builtin__exit:
    halt

//========================================================================

// Exits the program with the given exit code 
// void exit(int exit_code)
// - exit_code : 
__builtin__exit__int:
    // ** not implemented for amyasm
    halt 

//========================================================================
// returns default float value
// float float ();
__builtin__float:
    return 0.0

//========================================================================
// converts int to float
// float intToFloat (int);
__builtin__intToFloat__int:
    stackget val 0
    itof res val
    return res

//========================================================================
// parses a float from a given char[]
// float stringToFloat (char[]);
__builtin__stringToFloat__char__1:
    stackget val 0
    stof res val
    return res

//========================================================================
// returns default int value
// int int ();
__builtin__int:
    return 0

//========================================================================
// returns default char value
// char char ();
__builtin__char:
    return '0'

//========================================================================
// converts float to int
// int floatToInt (float);
__builtin__floatToInt__float:
    stackget val 0
    ftoi res val
    return res

//========================================================================
// parses an int from a given char[]
// int stringToInt (char[]);
__builtin__stringToInt__char__1:
    stackget val 0
    stoi res val
    return res

//========================================================================
// parses an int from a given char
// int charToInt (char);
__builtin__charToInt__char:
    stackget val 0
    ctoi res val
    return res

//========================================================================
// converts int to string
// char[] string (int);
__builtin__string__int:
    stackget val 0
    string res val
    return res

//========================================================================
// converts float to string
// char[] string (float);
__builtin__string__float:
    stackget val 0
    string res val
    return res

//========================================================================

// returns default value for array and object (null)
// null null ();
__builtin__null:
    return __null

//========================================================================

__endOfLibrary:
    //push prompt
    //call print

    //call input
    //response name

    //push name
    //call println

//========================================================================
//### COMPILED CODE ######################################################
//========================================================================

//========================================================================
// Class Template - 
   // Instances:
      //==================================================================
      // Class Declaration - __main____Vector__char__1 inherits __builtin____main__Object
         // Creating Dispatch Table
            MALLOC __dtable____main____Vector__char__1 5
            // Populate Dispatch Table
            ASSIGN __dtable____main____Vector__char__1[0] __method____main____Vector__char__1____pushBack__char__1
            ASSIGN __dtable____main____Vector__char__1[1] __method____main____Vector__char__1____popBack
            ASSIGN __dtable____main____Vector__char__1[2] __method____main____Vector__char__1____clear
            ASSIGN __dtable____main____Vector__char__1[3] __method____main____Vector__char__1____get__int
            ASSIGN __dtable____main____Vector__char__1[4] __method____main____Vector__char__1____set__int__char__1
         //---------------------------------------------------------------
         // Field - char[][] Vector<:char[]:>::data
         ASSIGN __field____main____Vector__char__1____data 1
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - int Vector<:char[]:>::size
         ASSIGN __field____main____Vector__char__1____size 2
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - int Vector<:char[]:>::capacity
         ASSIGN __field____main____Vector__char__1____capacity 3
         //---------------------------------------------------------------
      // skip over class methods
      JUMP __endclass____main____Vector__char__1
         //---------------------------------------------------------------
         // Constructor Declaration - Vector<:char[]:>::Vector() -> Vector<:char[]:>
         JUMP __end__ctor____main____Vector__char__1____Vector
         __ctor____main____Vector__char__1____Vector:
            // Creating Class Instance
               MALLOC __this 4
               // Add Dispatch Table
               ASSIGN __this[0] __dtable____main____Vector__char__1
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Int Literal
                           PUSH 10
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char__1____capacity
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Int Literal
                           PUSH 0
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char__1____size
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Array Allocator
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__char__1____capacity
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                           POP __size
                           MALLOC __ptr __size
                           PUSH __ptr
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char__1____data
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN __this
         __end__ctor____main____Vector__char__1____Vector:
         // End Constructor Declaration - __ctor____main____Vector__char__1____Vector
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Constructor Declaration - Vector<:char[]:>::Vector(int) -> Vector<:char[]:>
         JUMP __end__ctor____main____Vector__char__1____Vector__int
         __ctor____main____Vector__char__1____Vector__int:
            // Creating Class Instance
               MALLOC __this 4
               // Add Dispatch Table
               ASSIGN __this[0] __dtable____main____Vector__char__1
            // Parameters
               // Param: size
               STACKGET __main____Vector__char__1__Vector__size 0
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Addition
                           // LHS
                              // Identifier - size
                                 PUSH __main____Vector__char__1__Vector__size
                           // RHS
                              // Int Literal
                                 PUSH 10
                           POP __rhs
                           POP __lhs
                           ADD __res __lhs __rhs
                           PUSH __res
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char__1____capacity
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Identifier - size
                           PUSH __main____Vector__char__1__Vector__size
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char__1____size
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Array Allocator
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__char__1____capacity
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                           POP __size
                           MALLOC __ptr __size
                           PUSH __ptr
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char__1____data
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN __this
         __end__ctor____main____Vector__char__1____Vector__int:
         // End Constructor Declaration - __ctor____main____Vector__char__1____Vector__int
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:char[]:>::pushBack(char[]) -> void
         JUMP __end__method____main____Vector__char__1____pushBack__char__1
         __method____main____Vector__char__1____pushBack__char__1:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: val
               STACKGET __main____Vector__char__1__pushBack__val 1
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Greater Than or Equal to
                           // LHS
                              // Addition
                                 // LHS
                                    // Member Accessor
                                       // LHS
                                          // This keyword
                                             PUSH __this
                                       // RHS
                                          PUSH __field____main____Vector__char__1____size
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                 // RHS
                                    // Int Literal
                                       PUSH 1
                                 POP __rhs
                                 POP __lhs
                                 ADD __res __lhs __rhs
                                 PUSH __res
                           // RHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__char__1____capacity
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           POP __rhs
                           POP __lhs
                           GE __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__3
                     // Body
                        //------------------------------------------------
                        // Code Block
                           // Assignment - '='
                              // RHS
                                 // Multiplication
                                    // LHS
                                       // Member Accessor
                                          // LHS
                                             // This keyword
                                                PUSH __this
                                          // RHS
                                             PUSH __field____main____Vector__char__1____capacity
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    // RHS
                                       // Int Literal
                                          PUSH 2
                                    POP __rhs
                                    POP __lhs
                                    MULTIPLY __res __lhs __rhs
                                    PUSH __res
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__char__1____capacity
                                    POP __child
                                    POP __parent
                                    POP __rhs
                              ASSIGN __parent[__child] __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           // Assignment - '='
                              // RHS
                                 // Array Allocator
                                    // Member Accessor
                                       // LHS
                                          // This keyword
                                             PUSH __this
                                       // RHS
                                          PUSH __field____main____Vector__char__1____capacity
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                    POP __size
                                    MALLOC __ptr __size
                                    PUSH __ptr
                              // LHS
                                 // Variable Declaration
                                    ASSIGN __main____Vector__char__1__pushBack__block__2__if__3__block__4__nData 0
                              POP __rhs
                              ASSIGN __main____Vector__char__1__pushBack__block__2__if__3__block__4__nData __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           //---------------------------------------------
                           // For-Loop
                           // Init
                              // Assignment - '='
                                 // RHS
                                    // Int Literal
                                       PUSH 0
                                 // LHS
                                    // Variable Declaration
                                       ASSIGN __main____Vector__char__1__pushBack__block__2__if__3__block__4__for__5__i 0
                                 POP __rhs
                                 ASSIGN __main____Vector__char__1__pushBack__block__2__if__3__block__4__for__5__i __rhs
                                 PUSH __rhs
                           JUMP __forcond__5
                           __for__5:
                              // Update
                                 // Pre-Increment
                                    // RHS
                                       // Identifier - i
                                          PUSH __main____Vector__char__1__pushBack__block__2__if__3__block__4__for__5__i
                                    POP __rhs
                                    ADD __main____Vector__char__1__pushBack__block__2__if__3__block__4__for__5__i __main____Vector__char__1__pushBack__block__2__if__3__block__4__for__5__i 1
                                    ASSIGN __res __main____Vector__char__1__pushBack__block__2__if__3__block__4__for__5__i
                                    PUSH __res
                              __forcond__5:
                              // Condition
                                 // Less Than
                                    // LHS
                                       // Identifier - i
                                          PUSH __main____Vector__char__1__pushBack__block__2__if__3__block__4__for__5__i
                                    // RHS
                                       // Member Accessor
                                          // LHS
                                             // This keyword
                                                PUSH __this
                                          // RHS
                                             PUSH __field____main____Vector__char__1____size
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    POP __rhs
                                    POP __lhs
                                    LT __res __lhs __rhs
                                    PUSH __res
                                 POP __cond
                                 CMP __cond 0
                                 JEQ __endfor__5
                              // Body
                                 //---------------------------------------
                                 // Code Block
                                    // Assignment - '='
                                       // RHS
                                          // Subscript
                                             // LHS
                                                // Member Accessor
                                                   // LHS
                                                      // This keyword
                                                         PUSH __this
                                                   // RHS
                                                      PUSH __field____main____Vector__char__1____data
                                                   POP __child
                                                   POP __parent
                                                   PUSH __parent[__child]
                                             // OFFSET
                                                // Identifier - i
                                                   PUSH __main____Vector__char__1__pushBack__block__2__if__3__block__4__for__5__i
                                             POP __offset
                                             POP __pointer
                                             PUSH __pointer[__offset]
                                       // LHS
                                          // Subscript assignment
                                             // LHS
                                                // Identifier - nData
                                                   PUSH __main____Vector__char__1__pushBack__block__2__if__3__block__4__nData
                                             // OFFSET
                                                // Identifier - i
                                                   PUSH __main____Vector__char__1__pushBack__block__2__if__3__block__4__for__5__i
                                             POP __offset
                                             POP __pointer
                                       POP __rhs
                                       ASSIGN __pointer[__offset] __rhs
                                       PUSH __rhs
                                    // Statement results can be ignored
                                    POP __void
                                 //---------------------------------------
                              // Repeat
                              JUMP __for__5
                              // End of For
                              __endfor__5:
                           //---------------------------------------------
                           // Free Operator
                              // RHS
                                 // Member Accessor
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__char__1____data
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              // Free array
                              POP __array
                              FREE __array
                              PUSH __array
                           // Statement results can be ignored
                           POP __void
                           // Assignment - '='
                              // RHS
                                 // Identifier - nData
                                    PUSH __main____Vector__char__1__pushBack__block__2__if__3__block__4__nData
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__char__1____data
                                    POP __child
                                    POP __parent
                                    POP __rhs
                              ASSIGN __parent[__child] __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                        //------------------------------------------------
                     JUMP __endif__3
                     // End of if
                     __endif__3:
                  //------------------------------------------------------
                  // Assignment - '='
                     // RHS
                        // Identifier - val
                           PUSH __main____Vector__char__1__pushBack__val
                     // LHS
                        // Subscript assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__char__1____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // OFFSET
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__char__1____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           POP __offset
                           POP __pointer
                     POP __rhs
                     ASSIGN __pointer[__offset] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Pre-Increment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char__1____size
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     POP __rhs
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char__1____size
                           POP __child
                           POP __parent
                           ADD __parent[__child] __parent[__child] 1
                           ASSIGN __res __parent[__child]
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__char__1____pushBack__char__1:
         // End Method Declaration - __method____main____Vector__char__1____pushBack__char__1
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:char[]:>::popBack() -> char[]
         JUMP __end__method____main____Vector__char__1____popBack
         __method____main____Vector__char__1____popBack:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__char__1____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Pre-Decrement
                              // RHS
                                 // Member Accessor
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__char__1____size
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              POP __rhs
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__char__1____size
                                    POP __child
                                    POP __parent
                                    SUBTRACT __parent[__child] __parent[__child] 1
                                    ASSIGN __res __parent[__child]
                              PUSH __res
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__char__1____popBack:
         // End Method Declaration - __method____main____Vector__char__1____popBack
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:char[]:>::clear() -> void
         JUMP __end__method____main____Vector__char__1____clear
         __method____main____Vector__char__1____clear:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // While-Loop
                  __while__9:
                     // Condition
                        // Greater Than
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__char__1____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              // Int Literal
                                 PUSH 0
                           POP __rhs
                           POP __lhs
                           GT __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endwhile__9
                     // Body
                        // Method Call - Vector<:char[]:>::popBack() -> char[]
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                           // Arguments
                           POP __obj
                           // Pushing args in reverse order
                           PUSH __obj
                           CALL __method____main____Vector__char__1____popBack
                           POP __void
                           // Remove args
                           RESPONSE __retval
                           PUSH __retval
                        // Statement results can be ignored
                        POP __void
                     JUMP __while__9
                     // End of While
                     __endwhile__9:
                  //------------------------------------------------------
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__char__1____clear:
         // End Method Declaration - __method____main____Vector__char__1____clear
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:char[]:>::get(int) -> char[]
         JUMP __end__method____main____Vector__char__1____get__int
         __method____main____Vector__char__1____get__int:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: index
               STACKGET __main____Vector__char__1__get__index 1
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__char__1____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Identifier - index
                              PUSH __main____Vector__char__1__get__index
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__char__1____get__int:
         // End Method Declaration - __method____main____Vector__char__1____get__int
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:char[]:>::set(int, char[]) -> void
         JUMP __end__method____main____Vector__char__1____set__int__char__1
         __method____main____Vector__char__1____set__int__char__1:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: index
               STACKGET __main____Vector__char__1__set__index 1
               // Param: value
               STACKGET __main____Vector__char__1__set__value 2
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Identifier - value
                           PUSH __main____Vector__char__1__set__value
                     // LHS
                        // Subscript assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__char__1____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // OFFSET
                              // Identifier - index
                                 PUSH __main____Vector__char__1__set__index
                           POP __offset
                           POP __pointer
                     POP __rhs
                     ASSIGN __pointer[__offset] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__char__1____set__int__char__1:
         // End Method Declaration - __method____main____Vector__char__1____set__int__char__1
         //---------------------------------------------------------------

      __endclass____main____Vector__char__1:
      // End Class Declaration - __main____Vector__char__1
      //==================================================================

      //==================================================================
      // Class Declaration - __main____Vector__int inherits __builtin____main__Object
         // Creating Dispatch Table
            MALLOC __dtable____main____Vector__int 5
            // Populate Dispatch Table
            ASSIGN __dtable____main____Vector__int[0] __method____main____Vector__int____pushBack__int
            ASSIGN __dtable____main____Vector__int[1] __method____main____Vector__int____popBack
            ASSIGN __dtable____main____Vector__int[2] __method____main____Vector__int____clear
            ASSIGN __dtable____main____Vector__int[3] __method____main____Vector__int____get__int
            ASSIGN __dtable____main____Vector__int[4] __method____main____Vector__int____set__int__int
         //---------------------------------------------------------------
         // Field - int[] Vector<:int:>::data
         ASSIGN __field____main____Vector__int____data 1
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - int Vector<:int:>::size
         ASSIGN __field____main____Vector__int____size 2
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - int Vector<:int:>::capacity
         ASSIGN __field____main____Vector__int____capacity 3
         //---------------------------------------------------------------
      // skip over class methods
      JUMP __endclass____main____Vector__int
         //---------------------------------------------------------------
         // Constructor Declaration - Vector<:int:>::Vector() -> Vector<:int:>
         JUMP __end__ctor____main____Vector__int____Vector
         __ctor____main____Vector__int____Vector:
            // Creating Class Instance
               MALLOC __this 4
               // Add Dispatch Table
               ASSIGN __this[0] __dtable____main____Vector__int
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Int Literal
                           PUSH 10
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__int____capacity
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Int Literal
                           PUSH 0
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__int____size
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Array Allocator
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__int____capacity
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                           POP __size
                           MALLOC __ptr __size
                           PUSH __ptr
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__int____data
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN __this
         __end__ctor____main____Vector__int____Vector:
         // End Constructor Declaration - __ctor____main____Vector__int____Vector
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Constructor Declaration - Vector<:int:>::Vector(int) -> Vector<:int:>
         JUMP __end__ctor____main____Vector__int____Vector__int
         __ctor____main____Vector__int____Vector__int:
            // Creating Class Instance
               MALLOC __this 4
               // Add Dispatch Table
               ASSIGN __this[0] __dtable____main____Vector__int
            // Parameters
               // Param: size
               STACKGET __main____Vector__int__Vector__size 0
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Addition
                           // LHS
                              // Identifier - size
                                 PUSH __main____Vector__int__Vector__size
                           // RHS
                              // Int Literal
                                 PUSH 10
                           POP __rhs
                           POP __lhs
                           ADD __res __lhs __rhs
                           PUSH __res
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__int____capacity
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Identifier - size
                           PUSH __main____Vector__int__Vector__size
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__int____size
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Array Allocator
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__int____capacity
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                           POP __size
                           MALLOC __ptr __size
                           PUSH __ptr
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__int____data
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN __this
         __end__ctor____main____Vector__int____Vector__int:
         // End Constructor Declaration - __ctor____main____Vector__int____Vector__int
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:int:>::pushBack(int) -> void
         JUMP __end__method____main____Vector__int____pushBack__int
         __method____main____Vector__int____pushBack__int:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: val
               STACKGET __main____Vector__int__pushBack__val 1
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Greater Than or Equal to
                           // LHS
                              // Addition
                                 // LHS
                                    // Member Accessor
                                       // LHS
                                          // This keyword
                                             PUSH __this
                                       // RHS
                                          PUSH __field____main____Vector__int____size
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                 // RHS
                                    // Int Literal
                                       PUSH 1
                                 POP __rhs
                                 POP __lhs
                                 ADD __res __lhs __rhs
                                 PUSH __res
                           // RHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__int____capacity
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           POP __rhs
                           POP __lhs
                           GE __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__15
                     // Body
                        //------------------------------------------------
                        // Code Block
                           // Assignment - '='
                              // RHS
                                 // Multiplication
                                    // LHS
                                       // Member Accessor
                                          // LHS
                                             // This keyword
                                                PUSH __this
                                          // RHS
                                             PUSH __field____main____Vector__int____capacity
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    // RHS
                                       // Int Literal
                                          PUSH 2
                                    POP __rhs
                                    POP __lhs
                                    MULTIPLY __res __lhs __rhs
                                    PUSH __res
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__int____capacity
                                    POP __child
                                    POP __parent
                                    POP __rhs
                              ASSIGN __parent[__child] __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           // Assignment - '='
                              // RHS
                                 // Array Allocator
                                    // Member Accessor
                                       // LHS
                                          // This keyword
                                             PUSH __this
                                       // RHS
                                          PUSH __field____main____Vector__int____capacity
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                    POP __size
                                    MALLOC __ptr __size
                                    PUSH __ptr
                              // LHS
                                 // Variable Declaration
                                    ASSIGN __main____Vector__int__pushBack__block__14__if__15__block__16__nData 0
                              POP __rhs
                              ASSIGN __main____Vector__int__pushBack__block__14__if__15__block__16__nData __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           //---------------------------------------------
                           // For-Loop
                           // Init
                              // Assignment - '='
                                 // RHS
                                    // Int Literal
                                       PUSH 0
                                 // LHS
                                    // Variable Declaration
                                       ASSIGN __main____Vector__int__pushBack__block__14__if__15__block__16__for__17__i 0
                                 POP __rhs
                                 ASSIGN __main____Vector__int__pushBack__block__14__if__15__block__16__for__17__i __rhs
                                 PUSH __rhs
                           JUMP __forcond__17
                           __for__17:
                              // Update
                                 // Pre-Increment
                                    // RHS
                                       // Identifier - i
                                          PUSH __main____Vector__int__pushBack__block__14__if__15__block__16__for__17__i
                                    POP __rhs
                                    ADD __main____Vector__int__pushBack__block__14__if__15__block__16__for__17__i __main____Vector__int__pushBack__block__14__if__15__block__16__for__17__i 1
                                    ASSIGN __res __main____Vector__int__pushBack__block__14__if__15__block__16__for__17__i
                                    PUSH __res
                              __forcond__17:
                              // Condition
                                 // Less Than
                                    // LHS
                                       // Identifier - i
                                          PUSH __main____Vector__int__pushBack__block__14__if__15__block__16__for__17__i
                                    // RHS
                                       // Member Accessor
                                          // LHS
                                             // This keyword
                                                PUSH __this
                                          // RHS
                                             PUSH __field____main____Vector__int____size
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    POP __rhs
                                    POP __lhs
                                    LT __res __lhs __rhs
                                    PUSH __res
                                 POP __cond
                                 CMP __cond 0
                                 JEQ __endfor__17
                              // Body
                                 //---------------------------------------
                                 // Code Block
                                    // Assignment - '='
                                       // RHS
                                          // Subscript
                                             // LHS
                                                // Member Accessor
                                                   // LHS
                                                      // This keyword
                                                         PUSH __this
                                                   // RHS
                                                      PUSH __field____main____Vector__int____data
                                                   POP __child
                                                   POP __parent
                                                   PUSH __parent[__child]
                                             // OFFSET
                                                // Identifier - i
                                                   PUSH __main____Vector__int__pushBack__block__14__if__15__block__16__for__17__i
                                             POP __offset
                                             POP __pointer
                                             PUSH __pointer[__offset]
                                       // LHS
                                          // Subscript assignment
                                             // LHS
                                                // Identifier - nData
                                                   PUSH __main____Vector__int__pushBack__block__14__if__15__block__16__nData
                                             // OFFSET
                                                // Identifier - i
                                                   PUSH __main____Vector__int__pushBack__block__14__if__15__block__16__for__17__i
                                             POP __offset
                                             POP __pointer
                                       POP __rhs
                                       ASSIGN __pointer[__offset] __rhs
                                       PUSH __rhs
                                    // Statement results can be ignored
                                    POP __void
                                 //---------------------------------------
                              // Repeat
                              JUMP __for__17
                              // End of For
                              __endfor__17:
                           //---------------------------------------------
                           // Free Operator
                              // RHS
                                 // Member Accessor
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__int____data
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              // Free array
                              POP __array
                              FREE __array
                              PUSH __array
                           // Statement results can be ignored
                           POP __void
                           // Assignment - '='
                              // RHS
                                 // Identifier - nData
                                    PUSH __main____Vector__int__pushBack__block__14__if__15__block__16__nData
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__int____data
                                    POP __child
                                    POP __parent
                                    POP __rhs
                              ASSIGN __parent[__child] __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                        //------------------------------------------------
                     JUMP __endif__15
                     // End of if
                     __endif__15:
                  //------------------------------------------------------
                  // Assignment - '='
                     // RHS
                        // Identifier - val
                           PUSH __main____Vector__int__pushBack__val
                     // LHS
                        // Subscript assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__int____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // OFFSET
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__int____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           POP __offset
                           POP __pointer
                     POP __rhs
                     ASSIGN __pointer[__offset] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Pre-Increment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__int____size
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     POP __rhs
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__int____size
                           POP __child
                           POP __parent
                           ADD __parent[__child] __parent[__child] 1
                           ASSIGN __res __parent[__child]
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__int____pushBack__int:
         // End Method Declaration - __method____main____Vector__int____pushBack__int
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:int:>::popBack() -> int
         JUMP __end__method____main____Vector__int____popBack
         __method____main____Vector__int____popBack:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__int____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Pre-Decrement
                              // RHS
                                 // Member Accessor
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__int____size
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              POP __rhs
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__int____size
                                    POP __child
                                    POP __parent
                                    SUBTRACT __parent[__child] __parent[__child] 1
                                    ASSIGN __res __parent[__child]
                              PUSH __res
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__int____popBack:
         // End Method Declaration - __method____main____Vector__int____popBack
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:int:>::clear() -> void
         JUMP __end__method____main____Vector__int____clear
         __method____main____Vector__int____clear:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // While-Loop
                  __while__21:
                     // Condition
                        // Greater Than
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__int____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              // Int Literal
                                 PUSH 0
                           POP __rhs
                           POP __lhs
                           GT __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endwhile__21
                     // Body
                        // Method Call - Vector<:int:>::popBack() -> int
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                           // Arguments
                           POP __obj
                           // Pushing args in reverse order
                           PUSH __obj
                           CALL __method____main____Vector__int____popBack
                           POP __void
                           // Remove args
                           RESPONSE __retval
                           PUSH __retval
                        // Statement results can be ignored
                        POP __void
                     JUMP __while__21
                     // End of While
                     __endwhile__21:
                  //------------------------------------------------------
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__int____clear:
         // End Method Declaration - __method____main____Vector__int____clear
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:int:>::get(int) -> int
         JUMP __end__method____main____Vector__int____get__int
         __method____main____Vector__int____get__int:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: index
               STACKGET __main____Vector__int__get__index 1
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__int____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Identifier - index
                              PUSH __main____Vector__int__get__index
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__int____get__int:
         // End Method Declaration - __method____main____Vector__int____get__int
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:int:>::set(int, int) -> void
         JUMP __end__method____main____Vector__int____set__int__int
         __method____main____Vector__int____set__int__int:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: index
               STACKGET __main____Vector__int__set__index 1
               // Param: value
               STACKGET __main____Vector__int__set__value 2
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Identifier - value
                           PUSH __main____Vector__int__set__value
                     // LHS
                        // Subscript assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__int____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // OFFSET
                              // Identifier - index
                                 PUSH __main____Vector__int__set__index
                           POP __offset
                           POP __pointer
                     POP __rhs
                     ASSIGN __pointer[__offset] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__int____set__int__int:
         // End Method Declaration - __method____main____Vector__int____set__int__int
         //---------------------------------------------------------------

      __endclass____main____Vector__int:
      // End Class Declaration - __main____Vector__int
      //==================================================================

      //==================================================================
      // Class Declaration - __main____Vector__Monkey inherits __builtin____main__Object
         // Creating Dispatch Table
            MALLOC __dtable____main____Vector__Monkey 5
            // Populate Dispatch Table
            ASSIGN __dtable____main____Vector__Monkey[0] __method____main____Vector__Monkey____pushBack__Monkey
            ASSIGN __dtable____main____Vector__Monkey[1] __method____main____Vector__Monkey____popBack
            ASSIGN __dtable____main____Vector__Monkey[2] __method____main____Vector__Monkey____clear
            ASSIGN __dtable____main____Vector__Monkey[3] __method____main____Vector__Monkey____get__int
            ASSIGN __dtable____main____Vector__Monkey[4] __method____main____Vector__Monkey____set__int__Monkey
         //---------------------------------------------------------------
         // Field - Monkey[] Vector<:Monkey:>::data
         ASSIGN __field____main____Vector__Monkey____data 1
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - int Vector<:Monkey:>::size
         ASSIGN __field____main____Vector__Monkey____size 2
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - int Vector<:Monkey:>::capacity
         ASSIGN __field____main____Vector__Monkey____capacity 3
         //---------------------------------------------------------------
      // skip over class methods
      JUMP __endclass____main____Vector__Monkey
         //---------------------------------------------------------------
         // Constructor Declaration - Vector<:Monkey:>::Vector() -> Vector<:Monkey:>
         JUMP __end__ctor____main____Vector__Monkey____Vector
         __ctor____main____Vector__Monkey____Vector:
            // Creating Class Instance
               MALLOC __this 4
               // Add Dispatch Table
               ASSIGN __this[0] __dtable____main____Vector__Monkey
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Int Literal
                           PUSH 10
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__Monkey____capacity
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Int Literal
                           PUSH 0
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__Monkey____size
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Array Allocator
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__Monkey____capacity
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                           POP __size
                           MALLOC __ptr __size
                           PUSH __ptr
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__Monkey____data
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN __this
         __end__ctor____main____Vector__Monkey____Vector:
         // End Constructor Declaration - __ctor____main____Vector__Monkey____Vector
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Constructor Declaration - Vector<:Monkey:>::Vector(int) -> Vector<:Monkey:>
         JUMP __end__ctor____main____Vector__Monkey____Vector__int
         __ctor____main____Vector__Monkey____Vector__int:
            // Creating Class Instance
               MALLOC __this 4
               // Add Dispatch Table
               ASSIGN __this[0] __dtable____main____Vector__Monkey
            // Parameters
               // Param: size
               STACKGET __main____Vector__Monkey__Vector__size 0
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Addition
                           // LHS
                              // Identifier - size
                                 PUSH __main____Vector__Monkey__Vector__size
                           // RHS
                              // Int Literal
                                 PUSH 10
                           POP __rhs
                           POP __lhs
                           ADD __res __lhs __rhs
                           PUSH __res
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__Monkey____capacity
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Identifier - size
                           PUSH __main____Vector__Monkey__Vector__size
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__Monkey____size
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Array Allocator
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__Monkey____capacity
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                           POP __size
                           MALLOC __ptr __size
                           PUSH __ptr
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__Monkey____data
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN __this
         __end__ctor____main____Vector__Monkey____Vector__int:
         // End Constructor Declaration - __ctor____main____Vector__Monkey____Vector__int
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:Monkey:>::pushBack(Monkey) -> void
         JUMP __end__method____main____Vector__Monkey____pushBack__Monkey
         __method____main____Vector__Monkey____pushBack__Monkey:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: val
               STACKGET __main____Vector__Monkey__pushBack__val 1
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Greater Than or Equal to
                           // LHS
                              // Addition
                                 // LHS
                                    // Member Accessor
                                       // LHS
                                          // This keyword
                                             PUSH __this
                                       // RHS
                                          PUSH __field____main____Vector__Monkey____size
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                 // RHS
                                    // Int Literal
                                       PUSH 1
                                 POP __rhs
                                 POP __lhs
                                 ADD __res __lhs __rhs
                                 PUSH __res
                           // RHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__Monkey____capacity
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           POP __rhs
                           POP __lhs
                           GE __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__27
                     // Body
                        //------------------------------------------------
                        // Code Block
                           // Assignment - '='
                              // RHS
                                 // Multiplication
                                    // LHS
                                       // Member Accessor
                                          // LHS
                                             // This keyword
                                                PUSH __this
                                          // RHS
                                             PUSH __field____main____Vector__Monkey____capacity
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    // RHS
                                       // Int Literal
                                          PUSH 2
                                    POP __rhs
                                    POP __lhs
                                    MULTIPLY __res __lhs __rhs
                                    PUSH __res
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__Monkey____capacity
                                    POP __child
                                    POP __parent
                                    POP __rhs
                              ASSIGN __parent[__child] __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           // Assignment - '='
                              // RHS
                                 // Array Allocator
                                    // Member Accessor
                                       // LHS
                                          // This keyword
                                             PUSH __this
                                       // RHS
                                          PUSH __field____main____Vector__Monkey____capacity
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                    POP __size
                                    MALLOC __ptr __size
                                    PUSH __ptr
                              // LHS
                                 // Variable Declaration
                                    ASSIGN __main____Vector__Monkey__pushBack__block__26__if__27__block__28__nData 0
                              POP __rhs
                              ASSIGN __main____Vector__Monkey__pushBack__block__26__if__27__block__28__nData __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           //---------------------------------------------
                           // For-Loop
                           // Init
                              // Assignment - '='
                                 // RHS
                                    // Int Literal
                                       PUSH 0
                                 // LHS
                                    // Variable Declaration
                                       ASSIGN __main____Vector__Monkey__pushBack__block__26__if__27__block__28__for__29__i 0
                                 POP __rhs
                                 ASSIGN __main____Vector__Monkey__pushBack__block__26__if__27__block__28__for__29__i __rhs
                                 PUSH __rhs
                           JUMP __forcond__29
                           __for__29:
                              // Update
                                 // Pre-Increment
                                    // RHS
                                       // Identifier - i
                                          PUSH __main____Vector__Monkey__pushBack__block__26__if__27__block__28__for__29__i
                                    POP __rhs
                                    ADD __main____Vector__Monkey__pushBack__block__26__if__27__block__28__for__29__i __main____Vector__Monkey__pushBack__block__26__if__27__block__28__for__29__i 1
                                    ASSIGN __res __main____Vector__Monkey__pushBack__block__26__if__27__block__28__for__29__i
                                    PUSH __res
                              __forcond__29:
                              // Condition
                                 // Less Than
                                    // LHS
                                       // Identifier - i
                                          PUSH __main____Vector__Monkey__pushBack__block__26__if__27__block__28__for__29__i
                                    // RHS
                                       // Member Accessor
                                          // LHS
                                             // This keyword
                                                PUSH __this
                                          // RHS
                                             PUSH __field____main____Vector__Monkey____size
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    POP __rhs
                                    POP __lhs
                                    LT __res __lhs __rhs
                                    PUSH __res
                                 POP __cond
                                 CMP __cond 0
                                 JEQ __endfor__29
                              // Body
                                 //---------------------------------------
                                 // Code Block
                                    // Assignment - '='
                                       // RHS
                                          // Subscript
                                             // LHS
                                                // Member Accessor
                                                   // LHS
                                                      // This keyword
                                                         PUSH __this
                                                   // RHS
                                                      PUSH __field____main____Vector__Monkey____data
                                                   POP __child
                                                   POP __parent
                                                   PUSH __parent[__child]
                                             // OFFSET
                                                // Identifier - i
                                                   PUSH __main____Vector__Monkey__pushBack__block__26__if__27__block__28__for__29__i
                                             POP __offset
                                             POP __pointer
                                             PUSH __pointer[__offset]
                                       // LHS
                                          // Subscript assignment
                                             // LHS
                                                // Identifier - nData
                                                   PUSH __main____Vector__Monkey__pushBack__block__26__if__27__block__28__nData
                                             // OFFSET
                                                // Identifier - i
                                                   PUSH __main____Vector__Monkey__pushBack__block__26__if__27__block__28__for__29__i
                                             POP __offset
                                             POP __pointer
                                       POP __rhs
                                       ASSIGN __pointer[__offset] __rhs
                                       PUSH __rhs
                                    // Statement results can be ignored
                                    POP __void
                                 //---------------------------------------
                              // Repeat
                              JUMP __for__29
                              // End of For
                              __endfor__29:
                           //---------------------------------------------
                           // Free Operator
                              // RHS
                                 // Member Accessor
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__Monkey____data
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              // Free array
                              POP __array
                              FREE __array
                              PUSH __array
                           // Statement results can be ignored
                           POP __void
                           // Assignment - '='
                              // RHS
                                 // Identifier - nData
                                    PUSH __main____Vector__Monkey__pushBack__block__26__if__27__block__28__nData
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__Monkey____data
                                    POP __child
                                    POP __parent
                                    POP __rhs
                              ASSIGN __parent[__child] __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                        //------------------------------------------------
                     JUMP __endif__27
                     // End of if
                     __endif__27:
                  //------------------------------------------------------
                  // Assignment - '='
                     // RHS
                        // Identifier - val
                           PUSH __main____Vector__Monkey__pushBack__val
                     // LHS
                        // Subscript assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__Monkey____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // OFFSET
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__Monkey____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           POP __offset
                           POP __pointer
                     POP __rhs
                     ASSIGN __pointer[__offset] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Pre-Increment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__Monkey____size
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     POP __rhs
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__Monkey____size
                           POP __child
                           POP __parent
                           ADD __parent[__child] __parent[__child] 1
                           ASSIGN __res __parent[__child]
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__Monkey____pushBack__Monkey:
         // End Method Declaration - __method____main____Vector__Monkey____pushBack__Monkey
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:Monkey:>::popBack() -> Monkey
         JUMP __end__method____main____Vector__Monkey____popBack
         __method____main____Vector__Monkey____popBack:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__Monkey____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Pre-Decrement
                              // RHS
                                 // Member Accessor
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__Monkey____size
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              POP __rhs
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__Monkey____size
                                    POP __child
                                    POP __parent
                                    SUBTRACT __parent[__child] __parent[__child] 1
                                    ASSIGN __res __parent[__child]
                              PUSH __res
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__Monkey____popBack:
         // End Method Declaration - __method____main____Vector__Monkey____popBack
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:Monkey:>::clear() -> void
         JUMP __end__method____main____Vector__Monkey____clear
         __method____main____Vector__Monkey____clear:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // While-Loop
                  __while__33:
                     // Condition
                        // Greater Than
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__Monkey____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              // Int Literal
                                 PUSH 0
                           POP __rhs
                           POP __lhs
                           GT __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endwhile__33
                     // Body
                        // Method Call - Vector<:Monkey:>::popBack() -> Monkey
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                           // Arguments
                           POP __obj
                           // Pushing args in reverse order
                           PUSH __obj
                           CALL __method____main____Vector__Monkey____popBack
                           POP __void
                           // Remove args
                           RESPONSE __retval
                           PUSH __retval
                        // Statement results can be ignored
                        POP __void
                     JUMP __while__33
                     // End of While
                     __endwhile__33:
                  //------------------------------------------------------
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__Monkey____clear:
         // End Method Declaration - __method____main____Vector__Monkey____clear
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:Monkey:>::get(int) -> Monkey
         JUMP __end__method____main____Vector__Monkey____get__int
         __method____main____Vector__Monkey____get__int:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: index
               STACKGET __main____Vector__Monkey__get__index 1
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__Monkey____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Identifier - index
                              PUSH __main____Vector__Monkey__get__index
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__Monkey____get__int:
         // End Method Declaration - __method____main____Vector__Monkey____get__int
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:Monkey:>::set(int, Monkey) -> void
         JUMP __end__method____main____Vector__Monkey____set__int__Monkey
         __method____main____Vector__Monkey____set__int__Monkey:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: index
               STACKGET __main____Vector__Monkey__set__index 1
               // Param: value
               STACKGET __main____Vector__Monkey__set__value 2
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Identifier - value
                           PUSH __main____Vector__Monkey__set__value
                     // LHS
                        // Subscript assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__Monkey____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // OFFSET
                              // Identifier - index
                                 PUSH __main____Vector__Monkey__set__index
                           POP __offset
                           POP __pointer
                     POP __rhs
                     ASSIGN __pointer[__offset] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__Monkey____set__int__Monkey:
         // End Method Declaration - __method____main____Vector__Monkey____set__int__Monkey
         //---------------------------------------------------------------

      __endclass____main____Vector__Monkey:
      // End Class Declaration - __main____Vector__Monkey
      //==================================================================

// End Class Template - 
//========================================================================

//========================================================================
// Function Template - 
   // Instances:
      //==================================================================
      // Function Declaration - print<:int:>(Vector<:int:>) -> void
      JUMP __end____main____print__int____Vector__tparam0__int
      __main____print__int____Vector__tparam0__int:
         // Parameters
            // Param: v
            STACKGET __main__print__v 0
         // Body
            //------------------------------------------------------------
            // Code Block
               // Function Call - print(char) -> void
                  // Arguments
                     // Char Literal
                        PUSH '['
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** print
                  CALL __builtin__print__char
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
               // Statement results can be ignored
               POP __void
               //---------------------------------------------------------
               // If-Statement
                  // Condition
                     // Not Equal
                        // LHS
                           // Member Accessor
                              // LHS
                                 // Identifier - v
                                    PUSH __main__print__v
                              // RHS
                                 PUSH __field____main____Vector__int____size
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // RHS
                           // Int Literal
                              PUSH 0
                        POP __rhs
                        POP __lhs
                        NEQUAL __res __lhs __rhs
                        PUSH __res
                     POP __cond
                     CMP __cond 0
                     JEQ __endif__37
                  // Body
                     // Function Call - print(int) -> void
                        // Arguments
                           // Subscript
                              // LHS
                                 // Member Accessor
                                    // LHS
                                       // Identifier - v
                                          PUSH __main__print__v
                                    // RHS
                                       PUSH __field____main____Vector__int____data
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              // OFFSET
                                 // Int Literal
                                    PUSH 0
                              POP __offset
                              POP __pointer
                              PUSH __pointer[__offset]
                           POP __arg0
                        // Pushing args in reverse order
                        PUSH __arg0
                        // *** print
                        CALL __builtin__print__int
                        // Remove args
                        POP __void
                        RESPONSE __retval
                        PUSH __retval
                     // Statement results can be ignored
                     POP __void
                  JUMP __endif__37
                  // End of if
                  __endif__37:
               //---------------------------------------------------------
               //---------------------------------------------------------
               // For-Loop
               // Init
                  // Assignment - '='
                     // RHS
                        // Int Literal
                           PUSH 1
                     // LHS
                        // Variable Declaration
                           ASSIGN __main__print__block__36__for__38__i 0
                     POP __rhs
                     ASSIGN __main__print__block__36__for__38__i __rhs
                     PUSH __rhs
               JUMP __forcond__38
               __for__38:
                  // Update
                     // Pre-Increment
                        // RHS
                           // Identifier - i
                              PUSH __main__print__block__36__for__38__i
                        POP __rhs
                        ADD __main__print__block__36__for__38__i __main__print__block__36__for__38__i 1
                        ASSIGN __res __main__print__block__36__for__38__i
                        PUSH __res
                  __forcond__38:
                  // Condition
                     // Less Than
                        // LHS
                           // Identifier - i
                              PUSH __main__print__block__36__for__38__i
                        // RHS
                           // Member Accessor
                              // LHS
                                 // Identifier - v
                                    PUSH __main__print__v
                              // RHS
                                 PUSH __field____main____Vector__int____size
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        POP __rhs
                        POP __lhs
                        LT __res __lhs __rhs
                        PUSH __res
                     POP __cond
                     CMP __cond 0
                     JEQ __endfor__38
                  // Body
                     //---------------------------------------------------
                     // Code Block
                        // Function Call - print(char) -> void
                           // Arguments
                              // Char Literal
                                 PUSH ','
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg0
                           // *** print
                           CALL __builtin__print__char
                           // Remove args
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                        // Statement results can be ignored
                        POP __void
                        // Function Call - print(char) -> void
                           // Arguments
                              // Char Literal
                                 PUSH ' '
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg0
                           // *** print
                           CALL __builtin__print__char
                           // Remove args
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                        // Statement results can be ignored
                        POP __void
                        // Function Call - print(int) -> void
                           // Arguments
                              // Subscript
                                 // LHS
                                    // Member Accessor
                                       // LHS
                                          // Identifier - v
                                             PUSH __main__print__v
                                       // RHS
                                          PUSH __field____main____Vector__int____data
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                 // OFFSET
                                    // Identifier - i
                                       PUSH __main__print__block__36__for__38__i
                                 POP __offset
                                 POP __pointer
                                 PUSH __pointer[__offset]
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg0
                           // *** print
                           CALL __builtin__print__int
                           // Remove args
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                        // Statement results can be ignored
                        POP __void
                     //---------------------------------------------------
                  // Repeat
                  JUMP __for__38
                  // End of For
                  __endfor__38:
               //---------------------------------------------------------
               // Function Call - print(char) -> void
                  // Arguments
                     // Char Literal
                        PUSH ']'
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** print
                  CALL __builtin__print__char
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
               // Statement results can be ignored
               POP __void
            //------------------------------------------------------------
         RETURN 0
      __end____main____print__int____Vector__tparam0__int:
      // End Function Declaration - __main____print__int____Vector__tparam0__int
      //==================================================================

// End Function Template - 
//========================================================================

//========================================================================
// Function Template - 
   // Instances:
      //==================================================================
      // Function Declaration - println<:int:>(Vector<:int:>) -> void
      JUMP __end____main____println__int____Vector__tparam0__int
      __main____println__int____Vector__tparam0__int:
         // Parameters
            // Param: v
            STACKGET __main__println__v 0
         // Body
            //------------------------------------------------------------
            // Code Block
               // Function Call - print<:int:>(Vector<:int:>) -> void
                  // Arguments
                     // Identifier - v
                        PUSH __main__println__v
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** print
                  CALL __main____print__int____Vector__tparam0__int
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
               // Statement results can be ignored
               POP __void
               // Function Call - println() -> void
                  // Arguments
                  // Pushing args in reverse order
                  // *** println
                  CALL __builtin__println
                  // Remove args
                  RESPONSE __retval
                  PUSH __retval
               // Statement results can be ignored
               POP __void
            //------------------------------------------------------------
         RETURN 0
      __end____main____println__int____Vector__tparam0__int:
      // End Function Declaration - __main____println__int____Vector__tparam0__int
      //==================================================================

// End Function Template - 
//========================================================================

//========================================================================
// Function Declaration - strlen(char[]) -> int
JUMP __end____main____strlen__char__1
__main____strlen__char__1:
   // Parameters
      // Param: str
      STACKGET __main__strlen__str 0
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Equal
                  // LHS
                     // Identifier - str
                        PUSH __main__strlen__str
                  // RHS
                     // Null Literal
                        ASSIGN __null 0
                        PUSH __null
                  POP __rhs
                  POP __lhs
                  EQUAL __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__42
            // Body
               // Return
                  // Negative
                     // RHS
                        // Int Literal
                           PUSH 1
                     POP __rhs
                     SUBTRACT __res 0 __rhs
                     PUSH __res
                  POP __rVal
                  RETURN __rVal
            JUMP __endif__42
            // End of if
            __endif__42:
         //---------------------------------------------------------------
         // Assignment - '='
            // RHS
               // Int Literal
                  PUSH 0
            // LHS
               // Variable Declaration
                  ASSIGN __main__strlen__block__41__size 0
            POP __rhs
            ASSIGN __main__strlen__block__41__size __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // While-Loop
         __while__43:
            // Condition
               // Not Equal
                  // LHS
                     // Subscript
                        // LHS
                           // Identifier - str
                              PUSH __main__strlen__str
                        // OFFSET
                           // Post-Increment
                              ASSIGN __res __main__strlen__block__41__size
                              ADD __main__strlen__block__41__size __main__strlen__block__41__size 1
                              PUSH __res
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                  // RHS
                     // Char Literal
                        PUSH '\0'
                  POP __rhs
                  POP __lhs
                  NEQUAL __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endwhile__43
            // Body
            JUMP __while__43
            // End of While
            __endwhile__43:
         //---------------------------------------------------------------
         // Return
            // Subtraction
               // LHS
                  // Identifier - size
                     PUSH __main__strlen__block__41__size
               // RHS
                  // Int Literal
                     PUSH 1
               POP __rhs
               POP __lhs
               SUBTRACT __res __lhs __rhs
               PUSH __res
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____strlen__char__1:
// End Function Declaration - __main____strlen__char__1
//========================================================================

//========================================================================
// Function Declaration - strcmp(char[], char[]) -> int
JUMP __end____main____strcmp__char__1__char__1
__main____strcmp__char__1__char__1:
   // Parameters
      // Param: a
      STACKGET __main__strcmp__a 0
      // Param: b
      STACKGET __main__strcmp__b 1
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Assignment - '='
            // RHS
               // Function Call - strlen(char[]) -> int
                  // Arguments
                     // Identifier - a
                        PUSH __main__strcmp__a
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** strlen
                  CALL __main____strlen__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__strcmp__block__44__asize 0
            POP __rhs
            ASSIGN __main__strcmp__block__44__asize __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Function Call - strlen(char[]) -> int
                  // Arguments
                     // Identifier - b
                        PUSH __main__strcmp__b
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** strlen
                  CALL __main____strlen__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__strcmp__block__44__bsize 0
            POP __rhs
            ASSIGN __main__strcmp__block__44__bsize __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Not Equal
                  // LHS
                     // Identifier - asize
                        PUSH __main__strcmp__block__44__asize
                  // RHS
                     // Identifier - bsize
                        PUSH __main__strcmp__block__44__bsize
                  POP __rhs
                  POP __lhs
                  NEQUAL __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__45
            // Body
               // Return
                  // Int Literal
                     PUSH 0
                  POP __rVal
                  RETURN __rVal
            JUMP __endif__45
            // End of if
            __endif__45:
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // For-Loop
         // Init
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Variable Declaration
                     ASSIGN __main__strcmp__block__44__for__46__i 0
               POP __rhs
               ASSIGN __main__strcmp__block__44__for__46__i __rhs
               PUSH __rhs
         JUMP __forcond__46
         __for__46:
            // Update
               // Pre-Increment
                  // RHS
                     // Identifier - i
                        PUSH __main__strcmp__block__44__for__46__i
                  POP __rhs
                  ADD __main__strcmp__block__44__for__46__i __main__strcmp__block__44__for__46__i 1
                  ASSIGN __res __main__strcmp__block__44__for__46__i
                  PUSH __res
            __forcond__46:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - i
                        PUSH __main__strcmp__block__44__for__46__i
                  // RHS
                     // Identifier - asize
                        PUSH __main__strcmp__block__44__asize
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endfor__46
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Not Equal
                           // LHS
                              // Subscript
                                 // LHS
                                    // Identifier - a
                                       PUSH __main__strcmp__a
                                 // OFFSET
                                    // Identifier - i
                                       PUSH __main__strcmp__block__44__for__46__i
                                 POP __offset
                                 POP __pointer
                                 PUSH __pointer[__offset]
                           // RHS
                              // Subscript
                                 // LHS
                                    // Identifier - b
                                       PUSH __main__strcmp__b
                                 // OFFSET
                                    // Identifier - i
                                       PUSH __main__strcmp__block__44__for__46__i
                                 POP __offset
                                 POP __pointer
                                 PUSH __pointer[__offset]
                           POP __rhs
                           POP __lhs
                           NEQUAL __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__48
                     // Body
                        //------------------------------------------------
                        // Code Block
                           // Return
                              // Int Literal
                                 PUSH 0
                              POP __rVal
                              RETURN __rVal
                        //------------------------------------------------
                     JUMP __endif__48
                     // End of if
                     __endif__48:
                  //------------------------------------------------------
               //---------------------------------------------------------
            // Repeat
            JUMP __for__46
            // End of For
            __endfor__46:
         //---------------------------------------------------------------
         // Return
            // Int Literal
               PUSH 1
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____strcmp__char__1__char__1:
// End Function Declaration - __main____strcmp__char__1__char__1
//========================================================================

//========================================================================
// Function Declaration - substr(char[], int, int) -> char[]
JUMP __end____main____substr__char__1__int__int
__main____substr__char__1__int__int:
   // Parameters
      // Param: a
      STACKGET __main__substr__a 0
      // Param: start
      STACKGET __main__substr__start 1
      // Param: end
      STACKGET __main__substr__end 2
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Assignment - '='
            // RHS
               // Array Allocator
                  // Addition
                     // LHS
                        // Subtraction
                           // LHS
                              // Identifier - end
                                 PUSH __main__substr__end
                           // RHS
                              // Identifier - start
                                 PUSH __main__substr__start
                           POP __rhs
                           POP __lhs
                           SUBTRACT __res __lhs __rhs
                           PUSH __res
                     // RHS
                        // Int Literal
                           PUSH 1
                     POP __rhs
                     POP __lhs
                     ADD __res __lhs __rhs
                     PUSH __res
                  POP __size
                  MALLOC __ptr __size
                  PUSH __ptr
            // LHS
               // Variable Declaration
                  ASSIGN __main__substr__block__50__res 0
            POP __rhs
            ASSIGN __main__substr__block__50__res __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // For-Loop
         // Init
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Variable Declaration
                     ASSIGN __main__substr__block__50__for__51__i 0
               POP __rhs
               ASSIGN __main__substr__block__50__for__51__i __rhs
               PUSH __rhs
         JUMP __forcond__51
         __for__51:
            // Update
               // Pre-Increment
                  // RHS
                     // Identifier - i
                        PUSH __main__substr__block__50__for__51__i
                  POP __rhs
                  ADD __main__substr__block__50__for__51__i __main__substr__block__50__for__51__i 1
                  ASSIGN __res __main__substr__block__50__for__51__i
                  PUSH __res
            __forcond__51:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - i
                        PUSH __main__substr__block__50__for__51__i
                  // RHS
                     // Subtraction
                        // LHS
                           // Identifier - end
                              PUSH __main__substr__end
                        // RHS
                           // Identifier - start
                              PUSH __main__substr__start
                        POP __rhs
                        POP __lhs
                        SUBTRACT __res __lhs __rhs
                        PUSH __res
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endfor__51
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Subscript
                           // LHS
                              // Identifier - a
                                 PUSH __main__substr__a
                           // OFFSET
                              // Addition
                                 // LHS
                                    // Identifier - i
                                       PUSH __main__substr__block__50__for__51__i
                                 // RHS
                                    // Identifier - start
                                       PUSH __main__substr__start
                                 POP __rhs
                                 POP __lhs
                                 ADD __res __lhs __rhs
                                 PUSH __res
                           POP __offset
                           POP __pointer
                           PUSH __pointer[__offset]
                     // LHS
                        // Subscript assignment
                           // LHS
                              // Identifier - res
                                 PUSH __main__substr__block__50__res
                           // OFFSET
                              // Identifier - i
                                 PUSH __main__substr__block__50__for__51__i
                           POP __offset
                           POP __pointer
                     POP __rhs
                     ASSIGN __pointer[__offset] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            // Repeat
            JUMP __for__51
            // End of For
            __endfor__51:
         //---------------------------------------------------------------
         // Assignment - '='
            // RHS
               // Char Literal
                  PUSH '\0'
            // LHS
               // Subscript assignment
                  // LHS
                     // Identifier - res
                        PUSH __main__substr__block__50__res
                  // OFFSET
                     // Subtraction
                        // LHS
                           // Identifier - end
                              PUSH __main__substr__end
                        // RHS
                           // Identifier - start
                              PUSH __main__substr__start
                        POP __rhs
                        POP __lhs
                        SUBTRACT __res __lhs __rhs
                        PUSH __res
                  POP __offset
                  POP __pointer
            POP __rhs
            ASSIGN __pointer[__offset] __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Return
            // Identifier - res
               PUSH __main__substr__block__50__res
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____substr__char__1__int__int:
// End Function Declaration - __main____substr__char__1__int__int
//========================================================================

//========================================================================
// Function Declaration - first_index_of(char[], char) -> int
JUMP __end____main____first_index_of__char__1__char
__main____first_index_of__char__1__char:
   // Parameters
      // Param: arr
      STACKGET __main__first_index_of__arr 0
      // Param: c
      STACKGET __main__first_index_of__c 1
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Assignment - '='
            // RHS
               // Function Call - strlen(char[]) -> int
                  // Arguments
                     // Identifier - arr
                        PUSH __main__first_index_of__arr
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** strlen
                  CALL __main____strlen__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__first_index_of__block__53__size 0
            POP __rhs
            ASSIGN __main__first_index_of__block__53__size __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // For-Loop
         // Init
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Variable Declaration
                     ASSIGN __main__first_index_of__block__53__for__54__i 0
               POP __rhs
               ASSIGN __main__first_index_of__block__53__for__54__i __rhs
               PUSH __rhs
         JUMP __forcond__54
         __for__54:
            // Update
               // Pre-Increment
                  // RHS
                     // Identifier - i
                        PUSH __main__first_index_of__block__53__for__54__i
                  POP __rhs
                  ADD __main__first_index_of__block__53__for__54__i __main__first_index_of__block__53__for__54__i 1
                  ASSIGN __res __main__first_index_of__block__53__for__54__i
                  PUSH __res
            __forcond__54:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - i
                        PUSH __main__first_index_of__block__53__for__54__i
                  // RHS
                     // Identifier - size
                        PUSH __main__first_index_of__block__53__size
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endfor__54
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Equal
                           // LHS
                              // Subscript
                                 // LHS
                                    // Identifier - arr
                                       PUSH __main__first_index_of__arr
                                 // OFFSET
                                    // Identifier - i
                                       PUSH __main__first_index_of__block__53__for__54__i
                                 POP __offset
                                 POP __pointer
                                 PUSH __pointer[__offset]
                           // RHS
                              // Identifier - c
                                 PUSH __main__first_index_of__c
                           POP __rhs
                           POP __lhs
                           EQUAL __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__56
                     // Body
                        // Return
                           // Identifier - i
                              PUSH __main__first_index_of__block__53__for__54__i
                           POP __rVal
                           RETURN __rVal
                     JUMP __endif__56
                     // End of if
                     __endif__56:
                  //------------------------------------------------------
               //---------------------------------------------------------
            // Repeat
            JUMP __for__54
            // End of For
            __endfor__54:
         //---------------------------------------------------------------
         // Return
            // Negative
               // RHS
                  // Int Literal
                     PUSH 1
               POP __rhs
               SUBTRACT __res 0 __rhs
               PUSH __res
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____first_index_of__char__1__char:
// End Function Declaration - __main____first_index_of__char__1__char
//========================================================================

//========================================================================
// Function Declaration - split(char[], char) -> Vector<:char[]:>
JUMP __end____main____split__char__1__char
__main____split__char__1__char:
   // Parameters
      // Param: str
      STACKGET __main__split__str 0
      // Param: delim
      STACKGET __main__split__delim 1
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Assignment - '='
            // RHS
               // Constructor Call - Vector<:char[]:>::Vector() -> Vector<:char[]:>
                  // Arguments
                  // Pushing args in reverse order
                  CALL __ctor____main____Vector__char__1____Vector
                  // Remove args
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__split__block__57__tokens 0
            POP __rhs
            ASSIGN __main__split__block__57__tokens __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Function Call - strlen(char[]) -> int
                  // Arguments
                     // Identifier - str
                        PUSH __main__split__str
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** strlen
                  CALL __main____strlen__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__split__block__57__size 0
            POP __rhs
            ASSIGN __main__split__block__57__size __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Int Literal
                  PUSH 0
            // LHS
               // Variable Declaration
                  ASSIGN __main__split__block__57__i 0
            POP __rhs
            ASSIGN __main__split__block__57__i __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Int Literal
                  PUSH 0
            // LHS
               // Variable Declaration
                  ASSIGN __main__split__block__57__j 0
            POP __rhs
            ASSIGN __main__split__block__57__j __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // While-Loop
         __while__58:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - i
                        PUSH __main__split__block__57__i
                  // RHS
                     // Identifier - size
                        PUSH __main__split__block__57__size
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endwhile__58
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Not Equal
                           // LHS
                              // Subscript
                                 // LHS
                                    // Identifier - str
                                       PUSH __main__split__str
                                 // OFFSET
                                    // Identifier - i
                                       PUSH __main__split__block__57__i
                                 POP __offset
                                 POP __pointer
                                 PUSH __pointer[__offset]
                           // RHS
                              // Identifier - delim
                                 PUSH __main__split__delim
                           POP __rhs
                           POP __lhs
                           NEQUAL __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__60
                     // Body
                        //------------------------------------------------
                        // Code Block
                           // Assignment - '='
                              // RHS
                                 // Int Literal
                                    PUSH 0
                              // LHS
                                 // Variable Declaration
                                    ASSIGN __main__split__block__57__while__58__block__59__if__60__block__61__count 0
                              POP __rhs
                              ASSIGN __main__split__block__57__while__58__block__59__if__60__block__61__count __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           // Assignment - '='
                              // RHS
                                 // Identifier - i
                                    PUSH __main__split__block__57__i
                              // LHS
                                 // Variable Declaration
                                    ASSIGN __main__split__block__57__while__58__block__59__if__60__block__61__k 0
                              POP __rhs
                              ASSIGN __main__split__block__57__while__58__block__59__if__60__block__61__k __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           //---------------------------------------------
                           // While-Loop
                           __while__62:
                              // Condition
                                 // Less Than
                                    // LHS
                                       // Identifier - k
                                          PUSH __main__split__block__57__while__58__block__59__if__60__block__61__k
                                    // RHS
                                       // Identifier - size
                                          PUSH __main__split__block__57__size
                                    POP __rhs
                                    POP __lhs
                                    LT __res __lhs __rhs
                                    PUSH __res
                                 POP __cond
                                 CMP __cond 0
                                 JEQ __endwhile__62
                              // Body
                                 //---------------------------------------
                                 // If-Statement
                                    // Condition
                                       // Not Equal
                                          // LHS
                                             // Subscript
                                                // LHS
                                                   // Identifier - str
                                                      PUSH __main__split__str
                                                // OFFSET
                                                   // Post-Increment
                                                      ASSIGN __res __main__split__block__57__while__58__block__59__if__60__block__61__k
                                                      ADD __main__split__block__57__while__58__block__59__if__60__block__61__k __main__split__block__57__while__58__block__59__if__60__block__61__k 1
                                                      PUSH __res
                                                POP __offset
                                                POP __pointer
                                                PUSH __pointer[__offset]
                                          // RHS
                                             // Identifier - delim
                                                PUSH __main__split__delim
                                          POP __rhs
                                          POP __lhs
                                          NEQUAL __res __lhs __rhs
                                          PUSH __res
                                       POP __cond
                                       CMP __cond 0
                                       JEQ __else__63
                                    // Body
                                       // Pre-Increment
                                          // RHS
                                             // Identifier - count
                                                PUSH __main__split__block__57__while__58__block__59__if__60__block__61__count
                                          POP __rhs
                                          ADD __main__split__block__57__while__58__block__59__if__60__block__61__count __main__split__block__57__while__58__block__59__if__60__block__61__count 1
                                          ASSIGN __res __main__split__block__57__while__58__block__59__if__60__block__61__count
                                          PUSH __res
                                       // Statement results can be ignored
                                       POP __void
                                    JUMP __endif__63
                                    //------------------------------------
                                    // Else-Statement
                                    __else__63:
                                    // Break out of __while__62
                                    JUMP __endwhile__62
                                    //------------------------------------
                                    // End of if
                                    __endif__63:
                                 //---------------------------------------
                              JUMP __while__62
                              // End of While
                              __endwhile__62:
                           //---------------------------------------------
                           // Method Call - Vector<:char[]:>::pushBack(char[]) -> void
                              // LHS
                                 // Identifier - tokens
                                    PUSH __main__split__block__57__tokens
                              // RHS
                              // Arguments
                                 // Array Allocator
                                    // Addition
                                       // LHS
                                          // Identifier - count
                                             PUSH __main__split__block__57__while__58__block__59__if__60__block__61__count
                                       // RHS
                                          // Int Literal
                                             PUSH 1
                                       POP __rhs
                                       POP __lhs
                                       ADD __res __lhs __rhs
                                       PUSH __res
                                    POP __size
                                    MALLOC __ptr __size
                                    PUSH __ptr
                                 POP __arg0
                              POP __obj
                              // Pushing args in reverse order
                              PUSH __arg0
                              PUSH __obj
                              CALL __method____main____Vector__char__1____pushBack__char__1
                              POP __void
                              // Remove args
                              POP __void
                              RESPONSE __retval
                              PUSH __retval
                           // Statement results can be ignored
                           POP __void
                           //---------------------------------------------
                           // For-Loop
                           // Init
                              // Assignment - '='
                                 // RHS
                                    // Int Literal
                                       PUSH 0
                                 // LHS
                                    // Variable Declaration
                                       ASSIGN __main__split__block__57__while__58__block__59__if__60__block__61__for__64__k 0
                                 POP __rhs
                                 ASSIGN __main__split__block__57__while__58__block__59__if__60__block__61__for__64__k __rhs
                                 PUSH __rhs
                           JUMP __forcond__64
                           __for__64:
                              // Update
                                 // Pre-Increment
                                    // RHS
                                       // Identifier - k
                                          PUSH __main__split__block__57__while__58__block__59__if__60__block__61__for__64__k
                                    POP __rhs
                                    ADD __main__split__block__57__while__58__block__59__if__60__block__61__for__64__k __main__split__block__57__while__58__block__59__if__60__block__61__for__64__k 1
                                    ASSIGN __res __main__split__block__57__while__58__block__59__if__60__block__61__for__64__k
                                    PUSH __res
                              __forcond__64:
                              // Condition
                                 // Less Than
                                    // LHS
                                       // Identifier - k
                                          PUSH __main__split__block__57__while__58__block__59__if__60__block__61__for__64__k
                                    // RHS
                                       // Identifier - count
                                          PUSH __main__split__block__57__while__58__block__59__if__60__block__61__count
                                    POP __rhs
                                    POP __lhs
                                    LT __res __lhs __rhs
                                    PUSH __res
                                 POP __cond
                                 CMP __cond 0
                                 JEQ __endfor__64
                              // Body
                                 //---------------------------------------
                                 // Code Block
                                    // Assignment - '='
                                       // RHS
                                          // Subscript
                                             // LHS
                                                // Identifier - str
                                                   PUSH __main__split__str
                                             // OFFSET
                                                // Post-Increment
                                                   ASSIGN __res __main__split__block__57__i
                                                   ADD __main__split__block__57__i __main__split__block__57__i 1
                                                   PUSH __res
                                             POP __offset
                                             POP __pointer
                                             PUSH __pointer[__offset]
                                       // LHS
                                          // Subscript assignment
                                             // LHS
                                                // Subscript
                                                   // LHS
                                                      // Member Accessor
                                                         // LHS
                                                            // Identifier - tokens
                                                               PUSH __main__split__block__57__tokens
                                                         // RHS
                                                            PUSH __field____main____Vector__char__1____data
                                                         POP __child
                                                         POP __parent
                                                         PUSH __parent[__child]
                                                   // OFFSET
                                                      // Identifier - j
                                                         PUSH __main__split__block__57__j
                                                   POP __offset
                                                   POP __pointer
                                                   PUSH __pointer[__offset]
                                             // OFFSET
                                                // Identifier - k
                                                   PUSH __main__split__block__57__while__58__block__59__if__60__block__61__for__64__k
                                             POP __offset
                                             POP __pointer
                                       POP __rhs
                                       ASSIGN __pointer[__offset] __rhs
                                       PUSH __rhs
                                    // Statement results can be ignored
                                    POP __void
                                 //---------------------------------------
                              // Repeat
                              JUMP __for__64
                              // End of For
                              __endfor__64:
                           //---------------------------------------------
                           // Assignment - '='
                              // RHS
                                 // Char Literal
                                    PUSH '\0'
                              // LHS
                                 // Subscript assignment
                                    // LHS
                                       // Subscript
                                          // LHS
                                             // Member Accessor
                                                // LHS
                                                   // Identifier - tokens
                                                      PUSH __main__split__block__57__tokens
                                                // RHS
                                                   PUSH __field____main____Vector__char__1____data
                                                POP __child
                                                POP __parent
                                                PUSH __parent[__child]
                                          // OFFSET
                                             // Identifier - j
                                                PUSH __main__split__block__57__j
                                          POP __offset
                                          POP __pointer
                                          PUSH __pointer[__offset]
                                    // OFFSET
                                       // Identifier - count
                                          PUSH __main__split__block__57__while__58__block__59__if__60__block__61__count
                                    POP __offset
                                    POP __pointer
                              POP __rhs
                              ASSIGN __pointer[__offset] __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           // Pre-Increment
                              // RHS
                                 // Identifier - j
                                    PUSH __main__split__block__57__j
                              POP __rhs
                              ADD __main__split__block__57__j __main__split__block__57__j 1
                              ASSIGN __res __main__split__block__57__j
                              PUSH __res
                           // Statement results can be ignored
                           POP __void
                        //------------------------------------------------
                     JUMP __endif__60
                     // End of if
                     __endif__60:
                  //------------------------------------------------------
                  // Pre-Increment
                     // RHS
                        // Identifier - i
                           PUSH __main__split__block__57__i
                     POP __rhs
                     ADD __main__split__block__57__i __main__split__block__57__i 1
                     ASSIGN __res __main__split__block__57__i
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            JUMP __while__58
            // End of While
            __endwhile__58:
         //---------------------------------------------------------------
         // Return
            // Identifier - tokens
               PUSH __main__split__block__57__tokens
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____split__char__1__char:
// End Function Declaration - __main____split__char__1__char
//========================================================================

//========================================================================
// Function Declaration - max(int, int) -> int
JUMP __end____main____max__int__int
__main____max__int__int:
   // Parameters
      // Param: a
      STACKGET __main__max__a 0
      // Param: b
      STACKGET __main__max__b 1
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Greater Than or Equal to
                  // LHS
                     // Identifier - a
                        PUSH __main__max__a
                  // RHS
                     // Identifier - b
                        PUSH __main__max__b
                  POP __rhs
                  POP __lhs
                  GE __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__67
            // Body
               // Return
                  // Identifier - a
                     PUSH __main__max__a
                  POP __rVal
                  RETURN __rVal
            JUMP __endif__67
            // End of if
            __endif__67:
         //---------------------------------------------------------------
         // Return
            // Identifier - b
               PUSH __main__max__b
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____max__int__int:
// End Function Declaration - __main____max__int__int
//========================================================================

//========================================================================
// Function Declaration - max(float, float) -> float
JUMP __end____main____max__float__float
__main____max__float__float:
   // Parameters
      // Param: a
      STACKGET __main__max__a 0
      // Param: b
      STACKGET __main__max__b 1
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Greater Than or Equal to
                  // LHS
                     // Identifier - a
                        PUSH __main__max__a
                  // RHS
                     // Identifier - b
                        PUSH __main__max__b
                  POP __rhs
                  POP __lhs
                  GE __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__69
            // Body
               // Return
                  // Identifier - a
                     PUSH __main__max__a
                  POP __rVal
                  RETURN __rVal
            JUMP __endif__69
            // End of if
            __endif__69:
         //---------------------------------------------------------------
         // Return
            // Identifier - b
               PUSH __main__max__b
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____max__float__float:
// End Function Declaration - __main____max__float__float
//========================================================================

//========================================================================
// Function Declaration - min(int, int) -> int
JUMP __end____main____min__int__int
__main____min__int__int:
   // Parameters
      // Param: a
      STACKGET __main__min__a 0
      // Param: b
      STACKGET __main__min__b 1
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Less Than or Equal to
                  // LHS
                     // Identifier - a
                        PUSH __main__min__a
                  // RHS
                     // Identifier - b
                        PUSH __main__min__b
                  POP __rhs
                  POP __lhs
                  LE __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__71
            // Body
               // Return
                  // Identifier - a
                     PUSH __main__min__a
                  POP __rVal
                  RETURN __rVal
            JUMP __endif__71
            // End of if
            __endif__71:
         //---------------------------------------------------------------
         // Return
            // Identifier - b
               PUSH __main__min__b
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____min__int__int:
// End Function Declaration - __main____min__int__int
//========================================================================

//========================================================================
// Function Declaration - min(float, float) -> float
JUMP __end____main____min__float__float
__main____min__float__float:
   // Parameters
      // Param: a
      STACKGET __main__min__a 0
      // Param: b
      STACKGET __main__min__b 1
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Less Than or Equal to
                  // LHS
                     // Identifier - a
                        PUSH __main__min__a
                  // RHS
                     // Identifier - b
                        PUSH __main__min__b
                  POP __rhs
                  POP __lhs
                  LE __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__73
            // Body
               // Return
                  // Identifier - a
                     PUSH __main__min__a
                  POP __rVal
                  RETURN __rVal
            JUMP __endif__73
            // End of if
            __endif__73:
         //---------------------------------------------------------------
         // Return
            // Identifier - b
               PUSH __main__min__b
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____min__float__float:
// End Function Declaration - __main____min__float__float
//========================================================================

//========================================================================
// Function Declaration - abs(int) -> int
JUMP __end____main____abs__int
__main____abs__int:
   // Parameters
      // Param: v
      STACKGET __main__abs__v 0
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Less Than
                  // LHS
                     // Identifier - v
                        PUSH __main__abs__v
                  // RHS
                     // Int Literal
                        PUSH 0
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__75
            // Body
               // Return
                  // Negative
                     // RHS
                        // Identifier - v
                           PUSH __main__abs__v
                     POP __rhs
                     SUBTRACT __res 0 __rhs
                     PUSH __res
                  POP __rVal
                  RETURN __rVal
            JUMP __endif__75
            // End of if
            __endif__75:
         //---------------------------------------------------------------
         // Return
            // Identifier - v
               PUSH __main__abs__v
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____abs__int:
// End Function Declaration - __main____abs__int
//========================================================================

//========================================================================
// Function Declaration - abs(float) -> float
JUMP __end____main____abs__float
__main____abs__float:
   // Parameters
      // Param: v
      STACKGET __main__abs__v 0
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Less Than
                  // LHS
                     // Identifier - v
                        PUSH __main__abs__v
                  // RHS
                     // Float Literal
                        PUSH 0.0
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__77
            // Body
               // Return
                  // Negative
                     // RHS
                        // Identifier - v
                           PUSH __main__abs__v
                     POP __rhs
                     SUBTRACT __res 0 __rhs
                     PUSH __res
                  POP __rVal
                  RETURN __rVal
            JUMP __endif__77
            // End of if
            __endif__77:
         //---------------------------------------------------------------
         // Return
            // Identifier - v
               PUSH __main__abs__v
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____abs__float:
// End Function Declaration - __main____abs__float
//========================================================================

// Assignment - '='
   // RHS
      // Function Call - input() -> char[]
         // Arguments
         // Pushing args in reverse order
         // *** input
         CALL __builtin__input
         // Remove args
         RESPONSE __retval
         PUSH __retval
   // LHS
      // Variable Declaration
         ASSIGN __main__line 0
   POP __rhs
   ASSIGN __main__line __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Assignment - '='
   // RHS
      // Constructor Call - Vector<:char[]:>::Vector() -> Vector<:char[]:>
         // Arguments
         // Pushing args in reverse order
         CALL __ctor____main____Vector__char__1____Vector
         // Remove args
         RESPONSE __retval
         PUSH __retval
   // LHS
      // Variable Declaration
         ASSIGN __main__lines 0
   POP __rhs
   ASSIGN __main__lines __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
//------------------------------------------------------------------------
// While-Loop
__while__78:
   // Condition
      // Not Equal
         // LHS
            // Identifier - line
               PUSH __main__line
         // RHS
            // Null Literal
               ASSIGN __null 0
               PUSH __null
         POP __rhs
         POP __lhs
         NEQUAL __res __lhs __rhs
         PUSH __res
      POP __cond
      CMP __cond 0
      JEQ __endwhile__78
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Method Call - Vector<:char[]:>::pushBack(char[]) -> void
            // LHS
               // Identifier - lines
                  PUSH __main__lines
            // RHS
            // Arguments
               // Identifier - line
                  PUSH __main__line
               POP __arg0
            POP __obj
            // Pushing args in reverse order
            PUSH __arg0
            PUSH __obj
            CALL __method____main____Vector__char__1____pushBack__char__1
            POP __void
            // Remove args
            POP __void
            RESPONSE __retval
            PUSH __retval
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Function Call - input() -> char[]
                  // Arguments
                  // Pushing args in reverse order
                  // *** input
                  CALL __builtin__input
                  // Remove args
                  RESPONSE __retval
                  PUSH __retval
            POP __rhs
            ASSIGN __main__line __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
      //------------------------------------------------------------------
   JUMP __while__78
   // End of While
   __endwhile__78:
//------------------------------------------------------------------------
// Assignment - '='
   // RHS
      // Int Literal
         PUSH 0
   // LHS
      // Variable Declaration
         ASSIGN __main__OP_MUL 0
   POP __rhs
   ASSIGN __main__OP_MUL __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Assignment - '='
   // RHS
      // Int Literal
         PUSH 1
   // LHS
      // Variable Declaration
         ASSIGN __main__OP_ADD 0
   POP __rhs
   ASSIGN __main__OP_ADD __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Assignment - '='
   // RHS
      // Int Literal
         PUSH 2
   // LHS
      // Variable Declaration
         ASSIGN __main__OP_SQUARE 0
   POP __rhs
   ASSIGN __main__OP_SQUARE __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
//========================================================================
// Class Declaration - __main____Monkey inherits __builtin____main__Object
   // Creating Dispatch Table
      MALLOC __dtable____main____Monkey 0
      // Populate Dispatch Table
   //---------------------------------------------------------------------
   // Field - Vector<:int:> Monkey::items
   ASSIGN __field____main____Monkey____items 1
   //---------------------------------------------------------------------
   //---------------------------------------------------------------------
   // Field - int Monkey::op
   ASSIGN __field____main____Monkey____op 2
   //---------------------------------------------------------------------
   //---------------------------------------------------------------------
   // Field - int Monkey::operand
   ASSIGN __field____main____Monkey____operand 3
   //---------------------------------------------------------------------
   //---------------------------------------------------------------------
   // Field - int Monkey::divisible_by
   ASSIGN __field____main____Monkey____divisible_by 4
   //---------------------------------------------------------------------
   //---------------------------------------------------------------------
   // Field - int Monkey::true_monkey_id
   ASSIGN __field____main____Monkey____true_monkey_id 5
   //---------------------------------------------------------------------
   //---------------------------------------------------------------------
   // Field - int Monkey::false_monkey_id
   ASSIGN __field____main____Monkey____false_monkey_id 6
   //---------------------------------------------------------------------
   //---------------------------------------------------------------------
   // Field - int Monkey::inspected_items
   ASSIGN __field____main____Monkey____inspected_items 7
   //---------------------------------------------------------------------
// skip over class methods
JUMP __endclass____main____Monkey
   //---------------------------------------------------------------------
   // Constructor Declaration - Monkey::Monkey() -> Monkey
   JUMP __end__ctor____main____Monkey____Monkey
   __ctor____main____Monkey____Monkey:
      // Creating Class Instance
         MALLOC __this 8
         // Add Dispatch Table
         ASSIGN __this[0] __dtable____main____Monkey
      // Parameters
      // Body
         //---------------------------------------------------------------
         // Code Block
            // Assignment - '='
               // RHS
                  // Constructor Call - Vector<:int:>::Vector() -> Vector<:int:>
                     // Arguments
                     // Pushing args in reverse order
                     CALL __ctor____main____Vector__int____Vector
                     // Remove args
                     RESPONSE __retval
                     PUSH __retval
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____Monkey____items
                     POP __child
                     POP __parent
                     POP __rhs
               ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____Monkey____op
                     POP __child
                     POP __parent
                     POP __rhs
               ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____Monkey____operand
                     POP __child
                     POP __parent
                     POP __rhs
               ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____Monkey____divisible_by
                     POP __child
                     POP __parent
                     POP __rhs
               ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____Monkey____true_monkey_id
                     POP __child
                     POP __parent
                     POP __rhs
               ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____Monkey____false_monkey_id
                     POP __child
                     POP __parent
                     POP __rhs
               ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____Monkey____inspected_items
                     POP __child
                     POP __parent
                     POP __rhs
               ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
         //---------------------------------------------------------------
      RETURN __this
   __end__ctor____main____Monkey____Monkey:
   // End Constructor Declaration - __ctor____main____Monkey____Monkey
   //---------------------------------------------------------------------

__endclass____main____Monkey:
// End Class Declaration - __main____Monkey
//========================================================================

// Assignment - '='
   // RHS
      // Constructor Call - Vector<:Monkey:>::Vector() -> Vector<:Monkey:>
         // Arguments
         // Pushing args in reverse order
         CALL __ctor____main____Vector__Monkey____Vector
         // Remove args
         RESPONSE __retval
         PUSH __retval
   // LHS
      // Variable Declaration
         ASSIGN __main__monkeys 0
   POP __rhs
   ASSIGN __main__monkeys __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
//------------------------------------------------------------------------
// For-Loop
// Init
   // Assignment - '='
      // RHS
         // Int Literal
            PUSH 0
      // LHS
         // Variable Declaration
            ASSIGN __main__for__81__l 0
      POP __rhs
      ASSIGN __main__for__81__l __rhs
      PUSH __rhs
JUMP __forcond__81
__for__81:
   // Update
      // Assignment - '+='
         // RHS
            // Int Literal
               PUSH 7
         POP __rhs
         ADD __main__for__81__l __main__for__81__l __rhs
         PUSH __main__for__81__l
   __forcond__81:
   // Condition
      // Less Than
         // LHS
            // Identifier - l
               PUSH __main__for__81__l
         // RHS
            // Member Accessor
               // LHS
                  // Identifier - lines
                     PUSH __main__lines
               // RHS
                  PUSH __field____main____Vector__char__1____size
               POP __child
               POP __parent
               PUSH __parent[__child]
         POP __rhs
         POP __lhs
         LT __res __lhs __rhs
         PUSH __res
      POP __cond
      CMP __cond 0
      JEQ __endfor__81
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Assignment - '='
            // RHS
               // Constructor Call - Monkey::Monkey() -> Monkey
                  // Arguments
                  // Pushing args in reverse order
                  CALL __ctor____main____Monkey____Monkey
                  // Remove args
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__for__81__block__82__monkey 0
            POP __rhs
            ASSIGN __main__for__81__block__82__monkey __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Function Call - substr(char[], int, int) -> char[]
                  // Arguments
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // Identifier - lines
                                    PUSH __main__lines
                              // RHS
                                 PUSH __field____main____Vector__char__1____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Addition
                              // LHS
                                 // Identifier - l
                                    PUSH __main__for__81__l
                              // RHS
                                 // Int Literal
                                    PUSH 1
                              POP __rhs
                              POP __lhs
                              ADD __res __lhs __rhs
                              PUSH __res
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                     // Int Literal
                        PUSH 17
                     // Function Call - strlen(char[]) -> int
                        // Arguments
                           // Subscript
                              // LHS
                                 // Member Accessor
                                    // LHS
                                       // Identifier - lines
                                          PUSH __main__lines
                                    // RHS
                                       PUSH __field____main____Vector__char__1____data
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              // OFFSET
                                 // Addition
                                    // LHS
                                       // Identifier - l
                                          PUSH __main__for__81__l
                                    // RHS
                                       // Int Literal
                                          PUSH 1
                                    POP __rhs
                                    POP __lhs
                                    ADD __res __lhs __rhs
                                    PUSH __res
                              POP __offset
                              POP __pointer
                              PUSH __pointer[__offset]
                           POP __arg0
                        // Pushing args in reverse order
                        PUSH __arg0
                        // *** strlen
                        CALL __main____strlen__char__1
                        // Remove args
                        POP __void
                        RESPONSE __retval
                        PUSH __retval
                     POP __arg2
                     POP __arg1
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg2
                  PUSH __arg1
                  PUSH __arg0
                  // *** substr
                  CALL __main____substr__char__1__int__int
                  // Remove args
                  POP __void
                  POP __void
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__for__81__block__82__items_str 0
            POP __rhs
            ASSIGN __main__for__81__block__82__items_str __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Function Call - split(char[], char) -> Vector<:char[]:>
                  // Arguments
                     // Identifier - items_str
                        PUSH __main__for__81__block__82__items_str
                     // Char Literal
                        PUSH ' '
                     POP __arg1
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg1
                  PUSH __arg0
                  // *** split
                  CALL __main____split__char__1__char
                  // Remove args
                  POP __void
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__for__81__block__82__tokens0 0
            POP __rhs
            ASSIGN __main__for__81__block__82__tokens0 __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // For-Loop
         // Init
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Variable Declaration
                     ASSIGN __main__for__81__block__82__for__83__i 0
               POP __rhs
               ASSIGN __main__for__81__block__82__for__83__i __rhs
               PUSH __rhs
         JUMP __forcond__83
         __for__83:
            // Update
               // Pre-Increment
                  // RHS
                     // Identifier - i
                        PUSH __main__for__81__block__82__for__83__i
                  POP __rhs
                  ADD __main__for__81__block__82__for__83__i __main__for__81__block__82__for__83__i 1
                  ASSIGN __res __main__for__81__block__82__for__83__i
                  PUSH __res
            __forcond__83:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - i
                        PUSH __main__for__81__block__82__for__83__i
                  // RHS
                     // Member Accessor
                        // LHS
                           // Identifier - tokens0
                              PUSH __main__for__81__block__82__tokens0
                        // RHS
                           PUSH __field____main____Vector__char__1____size
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endfor__83
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Function Call - substr(char[], int, int) -> char[]
                           // Arguments
                              // Subscript
                                 // LHS
                                    // Member Accessor
                                       // LHS
                                          // Identifier - tokens0
                                             PUSH __main__for__81__block__82__tokens0
                                       // RHS
                                          PUSH __field____main____Vector__char__1____data
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                 // OFFSET
                                    // Identifier - i
                                       PUSH __main__for__81__block__82__for__83__i
                                 POP __offset
                                 POP __pointer
                                 PUSH __pointer[__offset]
                              // Int Literal
                                 PUSH 0
                              // Subtraction
                                 // LHS
                                    // Function Call - strlen(char[]) -> int
                                       // Arguments
                                          // Subscript
                                             // LHS
                                                // Member Accessor
                                                   // LHS
                                                      // Identifier - tokens0
                                                         PUSH __main__for__81__block__82__tokens0
                                                   // RHS
                                                      PUSH __field____main____Vector__char__1____data
                                                   POP __child
                                                   POP __parent
                                                   PUSH __parent[__child]
                                             // OFFSET
                                                // Identifier - i
                                                   PUSH __main__for__81__block__82__for__83__i
                                             POP __offset
                                             POP __pointer
                                             PUSH __pointer[__offset]
                                          POP __arg0
                                       // Pushing args in reverse order
                                       PUSH __arg0
                                       // *** strlen
                                       CALL __main____strlen__char__1
                                       // Remove args
                                       POP __void
                                       RESPONSE __retval
                                       PUSH __retval
                                 // RHS
                                    // Int Literal
                                       PUSH 1
                                 POP __rhs
                                 POP __lhs
                                 SUBTRACT __res __lhs __rhs
                                 PUSH __res
                              POP __arg2
                              POP __arg1
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg2
                           PUSH __arg1
                           PUSH __arg0
                           // *** substr
                           CALL __main____substr__char__1__int__int
                           // Remove args
                           POP __void
                           POP __void
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                     // LHS
                        // Variable Declaration
                           ASSIGN __main__for__81__block__82__for__83__block__84__item_str 0
                     POP __rhs
                     ASSIGN __main__for__81__block__82__for__83__block__84__item_str __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Function Call - stringToInt(char[]) -> int
                           // Arguments
                              // Identifier - item_str
                                 PUSH __main__for__81__block__82__for__83__block__84__item_str
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg0
                           // *** stringToInt
                           CALL __builtin__stringToInt__char__1
                           // Remove args
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                     // LHS
                        // Variable Declaration
                           ASSIGN __main__for__81__block__82__for__83__block__84__item 0
                     POP __rhs
                     ASSIGN __main__for__81__block__82__for__83__block__84__item __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Method Call - Vector<:int:>::pushBack(int) -> void
                     // LHS
                        // Member Accessor
                           // LHS
                              // Identifier - monkey
                                 PUSH __main__for__81__block__82__monkey
                           // RHS
                              PUSH __field____main____Monkey____items
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // RHS
                     // Arguments
                        // Identifier - item
                           PUSH __main__for__81__block__82__for__83__block__84__item
                        POP __arg0
                     POP __obj
                     // Pushing args in reverse order
                     PUSH __arg0
                     PUSH __obj
                     CALL __method____main____Vector__int____pushBack__int
                     POP __void
                     // Remove args
                     POP __void
                     RESPONSE __retval
                     PUSH __retval
                  // Statement results can be ignored
                  POP __void
                  // Free Operator
                     // RHS
                        // Identifier - item_str
                           PUSH __main__for__81__block__82__for__83__block__84__item_str
                     // Free array
                     POP __array
                     FREE __array
                     PUSH __array
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            // Repeat
            JUMP __for__83
            // End of For
            __endfor__83:
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // For-Loop
         // Init
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Variable Declaration
                     ASSIGN __main__for__81__block__82__for__85__i 0
               POP __rhs
               ASSIGN __main__for__81__block__82__for__85__i __rhs
               PUSH __rhs
         JUMP __forcond__85
         __for__85:
            // Update
               // Pre-Increment
                  // RHS
                     // Identifier - i
                        PUSH __main__for__81__block__82__for__85__i
                  POP __rhs
                  ADD __main__for__81__block__82__for__85__i __main__for__81__block__82__for__85__i 1
                  ASSIGN __res __main__for__81__block__82__for__85__i
                  PUSH __res
            __forcond__85:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - i
                        PUSH __main__for__81__block__82__for__85__i
                  // RHS
                     // Member Accessor
                        // LHS
                           // Identifier - tokens0
                              PUSH __main__for__81__block__82__tokens0
                        // RHS
                           PUSH __field____main____Vector__char__1____size
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endfor__85
            // Body
               // Free Operator
                  // RHS
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // Identifier - tokens0
                                    PUSH __main__for__81__block__82__tokens0
                              // RHS
                                 PUSH __field____main____Vector__char__1____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Identifier - i
                              PUSH __main__for__81__block__82__for__85__i
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                  // Free array
                  POP __array
                  FREE __array
                  PUSH __array
               // Statement results can be ignored
               POP __void
            // Repeat
            JUMP __for__85
            // End of For
            __endfor__85:
         //---------------------------------------------------------------
         // Free Operator
            // RHS
               // Identifier - tokens0
                  PUSH __main__for__81__block__82__tokens0
            // Free array
            POP __array
            FREE __array
            PUSH __array
         // Statement results can be ignored
         POP __void
         // Free Operator
            // RHS
               // Identifier - items_str
                  PUSH __main__for__81__block__82__items_str
            // Free array
            POP __array
            FREE __array
            PUSH __array
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Not Equal
                  // LHS
                     // Function Call - first_index_of(char[], char) -> int
                        // Arguments
                           // Subscript
                              // LHS
                                 // Member Accessor
                                    // LHS
                                       // Identifier - lines
                                          PUSH __main__lines
                                    // RHS
                                       PUSH __field____main____Vector__char__1____data
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              // OFFSET
                                 // Addition
                                    // LHS
                                       // Identifier - l
                                          PUSH __main__for__81__l
                                    // RHS
                                       // Int Literal
                                          PUSH 2
                                    POP __rhs
                                    POP __lhs
                                    ADD __res __lhs __rhs
                                    PUSH __res
                              POP __offset
                              POP __pointer
                              PUSH __pointer[__offset]
                           // Char Literal
                              PUSH '*'
                           POP __arg1
                           POP __arg0
                        // Pushing args in reverse order
                        PUSH __arg1
                        PUSH __arg0
                        // *** first_index_of
                        CALL __main____first_index_of__char__1__char
                        // Remove args
                        POP __void
                        POP __void
                        RESPONSE __retval
                        PUSH __retval
                  // RHS
                     // Negative
                        // RHS
                           // Int Literal
                              PUSH 1
                        POP __rhs
                        SUBTRACT __res 0 __rhs
                        PUSH __res
                  POP __rhs
                  POP __lhs
                  NEQUAL __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __else__86
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Function Call - split(char[], char) -> Vector<:char[]:>
                           // Arguments
                              // Subscript
                                 // LHS
                                    // Member Accessor
                                       // LHS
                                          // Identifier - lines
                                             PUSH __main__lines
                                       // RHS
                                          PUSH __field____main____Vector__char__1____data
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                 // OFFSET
                                    // Addition
                                       // LHS
                                          // Identifier - l
                                             PUSH __main__for__81__l
                                       // RHS
                                          // Int Literal
                                             PUSH 2
                                       POP __rhs
                                       POP __lhs
                                       ADD __res __lhs __rhs
                                       PUSH __res
                                 POP __offset
                                 POP __pointer
                                 PUSH __pointer[__offset]
                              // Char Literal
                                 PUSH ' '
                              POP __arg1
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg1
                           PUSH __arg0
                           // *** split
                           CALL __main____split__char__1__char
                           // Remove args
                           POP __void
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                     // LHS
                        // Variable Declaration
                           ASSIGN __main__for__81__block__82__if__86__block__87__tokens1 0
                     POP __rhs
                     ASSIGN __main__for__81__block__82__if__86__block__87__tokens1 __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Equal
                           // LHS
                              // Subscript
                                 // LHS
                                    // Subscript
                                       // LHS
                                          // Member Accessor
                                             // LHS
                                                // Identifier - tokens1
                                                   PUSH __main__for__81__block__82__if__86__block__87__tokens1
                                             // RHS
                                                PUSH __field____main____Vector__char__1____data
                                             POP __child
                                             POP __parent
                                             PUSH __parent[__child]
                                       // OFFSET
                                          // Subtraction
                                             // LHS
                                                // Member Accessor
                                                   // LHS
                                                      // Identifier - tokens1
                                                         PUSH __main__for__81__block__82__if__86__block__87__tokens1
                                                   // RHS
                                                      PUSH __field____main____Vector__char__1____size
                                                   POP __child
                                                   POP __parent
                                                   PUSH __parent[__child]
                                             // RHS
                                                // Int Literal
                                                   PUSH 1
                                             POP __rhs
                                             POP __lhs
                                             SUBTRACT __res __lhs __rhs
                                             PUSH __res
                                       POP __offset
                                       POP __pointer
                                       PUSH __pointer[__offset]
                                 // OFFSET
                                    // Int Literal
                                       PUSH 0
                                 POP __offset
                                 POP __pointer
                                 PUSH __pointer[__offset]
                           // RHS
                              // Char Literal
                                 PUSH 'o'
                           POP __rhs
                           POP __lhs
                           EQUAL __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __else__88
                     // Body
                        //------------------------------------------------
                        // Code Block
                           // Assignment - '='
                              // RHS
                                 // Identifier - OP_SQUARE
                                    PUSH __main__OP_SQUARE
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // Identifier - monkey
                                          PUSH __main__for__81__block__82__monkey
                                    // RHS
                                       PUSH __field____main____Monkey____op
                                    POP __child
                                    POP __parent
                                    POP __rhs
                              ASSIGN __parent[__child] __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                        //------------------------------------------------
                     JUMP __endif__88
                     //---------------------------------------------------
                     // Else-Statement
                     __else__88:
                     //---------------------------------------------------
                     // Code Block
                        // Assignment - '='
                           // RHS
                              // Identifier - OP_MUL
                                 PUSH __main__OP_MUL
                           // LHS
                              // Member Accessor Assignment
                                 // LHS
                                    // Identifier - monkey
                                       PUSH __main__for__81__block__82__monkey
                                 // RHS
                                    PUSH __field____main____Monkey____op
                                 POP __child
                                 POP __parent
                                 POP __rhs
                           ASSIGN __parent[__child] __rhs
                           PUSH __rhs
                        // Statement results can be ignored
                        POP __void
                        // Assignment - '='
                           // RHS
                              // Function Call - stringToInt(char[]) -> int
                                 // Arguments
                                    // Subscript
                                       // LHS
                                          // Member Accessor
                                             // LHS
                                                // Identifier - tokens1
                                                   PUSH __main__for__81__block__82__if__86__block__87__tokens1
                                             // RHS
                                                PUSH __field____main____Vector__char__1____data
                                             POP __child
                                             POP __parent
                                             PUSH __parent[__child]
                                       // OFFSET
                                          // Subtraction
                                             // LHS
                                                // Member Accessor
                                                   // LHS
                                                      // Identifier - tokens1
                                                         PUSH __main__for__81__block__82__if__86__block__87__tokens1
                                                   // RHS
                                                      PUSH __field____main____Vector__char__1____size
                                                   POP __child
                                                   POP __parent
                                                   PUSH __parent[__child]
                                             // RHS
                                                // Int Literal
                                                   PUSH 1
                                             POP __rhs
                                             POP __lhs
                                             SUBTRACT __res __lhs __rhs
                                             PUSH __res
                                       POP __offset
                                       POP __pointer
                                       PUSH __pointer[__offset]
                                    POP __arg0
                                 // Pushing args in reverse order
                                 PUSH __arg0
                                 // *** stringToInt
                                 CALL __builtin__stringToInt__char__1
                                 // Remove args
                                 POP __void
                                 RESPONSE __retval
                                 PUSH __retval
                           // LHS
                              // Member Accessor Assignment
                                 // LHS
                                    // Identifier - monkey
                                       PUSH __main__for__81__block__82__monkey
                                 // RHS
                                    PUSH __field____main____Monkey____operand
                                 POP __child
                                 POP __parent
                                 POP __rhs
                           ASSIGN __parent[__child] __rhs
                           PUSH __rhs
                        // Statement results can be ignored
                        POP __void
                     //---------------------------------------------------
                     //---------------------------------------------------
                     // End of if
                     __endif__88:
                  //------------------------------------------------------
                  //------------------------------------------------------
                  // For-Loop
                  // Init
                     // Assignment - '='
                        // RHS
                           // Int Literal
                              PUSH 0
                        // LHS
                           // Variable Declaration
                              ASSIGN __main__for__81__block__82__if__86__block__87__for__91__j 0
                        POP __rhs
                        ASSIGN __main__for__81__block__82__if__86__block__87__for__91__j __rhs
                        PUSH __rhs
                  JUMP __forcond__91
                  __for__91:
                     // Update
                        // Pre-Increment
                           // RHS
                              // Identifier - j
                                 PUSH __main__for__81__block__82__if__86__block__87__for__91__j
                           POP __rhs
                           ADD __main__for__81__block__82__if__86__block__87__for__91__j __main__for__81__block__82__if__86__block__87__for__91__j 1
                           ASSIGN __res __main__for__81__block__82__if__86__block__87__for__91__j
                           PUSH __res
                     __forcond__91:
                     // Condition
                        // Less Than
                           // LHS
                              // Identifier - j
                                 PUSH __main__for__81__block__82__if__86__block__87__for__91__j
                           // RHS
                              // Member Accessor
                                 // LHS
                                    // Identifier - tokens1
                                       PUSH __main__for__81__block__82__if__86__block__87__tokens1
                                 // RHS
                                    PUSH __field____main____Vector__char__1____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           POP __rhs
                           POP __lhs
                           LT __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endfor__91
                     // Body
                        // Free Operator
                           // RHS
                              // Subscript
                                 // LHS
                                    // Member Accessor
                                       // LHS
                                          // Identifier - tokens1
                                             PUSH __main__for__81__block__82__if__86__block__87__tokens1
                                       // RHS
                                          PUSH __field____main____Vector__char__1____data
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                 // OFFSET
                                    // Identifier - j
                                       PUSH __main__for__81__block__82__if__86__block__87__for__91__j
                                 POP __offset
                                 POP __pointer
                                 PUSH __pointer[__offset]
                           // Free array
                           POP __array
                           FREE __array
                           PUSH __array
                        // Statement results can be ignored
                        POP __void
                     // Repeat
                     JUMP __for__91
                     // End of For
                     __endfor__91:
                  //------------------------------------------------------
                  // Free Operator
                     // RHS
                        // Identifier - tokens1
                           PUSH __main__for__81__block__82__if__86__block__87__tokens1
                     // Free array
                     POP __array
                     FREE __array
                     PUSH __array
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            JUMP __endif__86
            //------------------------------------------------------------
            // Else-Statement
            __else__86:
            //------------------------------------------------------------
            // Code Block
               // Assignment - '='
                  // RHS
                     // Function Call - split(char[], char) -> Vector<:char[]:>
                        // Arguments
                           // Subscript
                              // LHS
                                 // Member Accessor
                                    // LHS
                                       // Identifier - lines
                                          PUSH __main__lines
                                    // RHS
                                       PUSH __field____main____Vector__char__1____data
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              // OFFSET
                                 // Addition
                                    // LHS
                                       // Identifier - l
                                          PUSH __main__for__81__l
                                    // RHS
                                       // Int Literal
                                          PUSH 2
                                    POP __rhs
                                    POP __lhs
                                    ADD __res __lhs __rhs
                                    PUSH __res
                              POP __offset
                              POP __pointer
                              PUSH __pointer[__offset]
                           // Char Literal
                              PUSH ' '
                           POP __arg1
                           POP __arg0
                        // Pushing args in reverse order
                        PUSH __arg1
                        PUSH __arg0
                        // *** split
                        CALL __main____split__char__1__char
                        // Remove args
                        POP __void
                        POP __void
                        RESPONSE __retval
                        PUSH __retval
                  // LHS
                     // Variable Declaration
                        ASSIGN __main__for__81__block__82__else__86__block__92__tokens1 0
                  POP __rhs
                  ASSIGN __main__for__81__block__82__else__86__block__92__tokens1 __rhs
                  PUSH __rhs
               // Statement results can be ignored
               POP __void
               //---------------------------------------------------------
               // If-Statement
                  // Condition
                     // Equal
                        // LHS
                           // Subscript
                              // LHS
                                 // Subscript
                                    // LHS
                                       // Member Accessor
                                          // LHS
                                             // Identifier - tokens1
                                                PUSH __main__for__81__block__82__else__86__block__92__tokens1
                                          // RHS
                                             PUSH __field____main____Vector__char__1____data
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    // OFFSET
                                       // Subtraction
                                          // LHS
                                             // Member Accessor
                                                // LHS
                                                   // Identifier - tokens1
                                                      PUSH __main__for__81__block__82__else__86__block__92__tokens1
                                                // RHS
                                                   PUSH __field____main____Vector__char__1____size
                                                POP __child
                                                POP __parent
                                                PUSH __parent[__child]
                                          // RHS
                                             // Int Literal
                                                PUSH 1
                                          POP __rhs
                                          POP __lhs
                                          SUBTRACT __res __lhs __rhs
                                          PUSH __res
                                    POP __offset
                                    POP __pointer
                                    PUSH __pointer[__offset]
                              // OFFSET
                                 // Int Literal
                                    PUSH 0
                              POP __offset
                              POP __pointer
                              PUSH __pointer[__offset]
                        // RHS
                           // Char Literal
                              PUSH 'o'
                        POP __rhs
                        POP __lhs
                        EQUAL __res __lhs __rhs
                        PUSH __res
                     POP __cond
                     CMP __cond 0
                     JEQ __else__93
                  // Body
                     //---------------------------------------------------
                     // Code Block
                        // Assignment - '='
                           // RHS
                              // Identifier - OP_SQUARE
                                 PUSH __main__OP_SQUARE
                           // LHS
                              // Member Accessor Assignment
                                 // LHS
                                    // Identifier - monkey
                                       PUSH __main__for__81__block__82__monkey
                                 // RHS
                                    PUSH __field____main____Monkey____op
                                 POP __child
                                 POP __parent
                                 POP __rhs
                           ASSIGN __parent[__child] __rhs
                           PUSH __rhs
                        // Statement results can be ignored
                        POP __void
                     //---------------------------------------------------
                  JUMP __endif__93
                  //------------------------------------------------------
                  // Else-Statement
                  __else__93:
                  //------------------------------------------------------
                  // Code Block
                     // Assignment - '='
                        // RHS
                           // Identifier - OP_ADD
                              PUSH __main__OP_ADD
                        // LHS
                           // Member Accessor Assignment
                              // LHS
                                 // Identifier - monkey
                                    PUSH __main__for__81__block__82__monkey
                              // RHS
                                 PUSH __field____main____Monkey____op
                              POP __child
                              POP __parent
                              POP __rhs
                        ASSIGN __parent[__child] __rhs
                        PUSH __rhs
                     // Statement results can be ignored
                     POP __void
                     // Assignment - '='
                        // RHS
                           // Function Call - stringToInt(char[]) -> int
                              // Arguments
                                 // Subscript
                                    // LHS
                                       // Member Accessor
                                          // LHS
                                             // Identifier - tokens1
                                                PUSH __main__for__81__block__82__else__86__block__92__tokens1
                                          // RHS
                                             PUSH __field____main____Vector__char__1____data
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    // OFFSET
                                       // Subtraction
                                          // LHS
                                             // Member Accessor
                                                // LHS
                                                   // Identifier - tokens1
                                                      PUSH __main__for__81__block__82__else__86__block__92__tokens1
                                                // RHS
                                                   PUSH __field____main____Vector__char__1____size
                                                POP __child
                                                POP __parent
                                                PUSH __parent[__child]
                                          // RHS
                                             // Int Literal
                                                PUSH 1
                                          POP __rhs
                                          POP __lhs
                                          SUBTRACT __res __lhs __rhs
                                          PUSH __res
                                    POP __offset
                                    POP __pointer
                                    PUSH __pointer[__offset]
                                 POP __arg0
                              // Pushing args in reverse order
                              PUSH __arg0
                              // *** stringToInt
                              CALL __builtin__stringToInt__char__1
                              // Remove args
                              POP __void
                              RESPONSE __retval
                              PUSH __retval
                        // LHS
                           // Member Accessor Assignment
                              // LHS
                                 // Identifier - monkey
                                    PUSH __main__for__81__block__82__monkey
                              // RHS
                                 PUSH __field____main____Monkey____operand
                              POP __child
                              POP __parent
                              POP __rhs
                        ASSIGN __parent[__child] __rhs
                        PUSH __rhs
                     // Statement results can be ignored
                     POP __void
                  //------------------------------------------------------
                  //------------------------------------------------------
                  // End of if
                  __endif__93:
               //---------------------------------------------------------
               //---------------------------------------------------------
               // For-Loop
               // Init
                  // Assignment - '='
                     // RHS
                        // Int Literal
                           PUSH 0
                     // LHS
                        // Variable Declaration
                           ASSIGN __main__for__81__block__82__else__86__block__92__for__96__j 0
                     POP __rhs
                     ASSIGN __main__for__81__block__82__else__86__block__92__for__96__j __rhs
                     PUSH __rhs
               JUMP __forcond__96
               __for__96:
                  // Update
                     // Pre-Increment
                        // RHS
                           // Identifier - j
                              PUSH __main__for__81__block__82__else__86__block__92__for__96__j
                        POP __rhs
                        ADD __main__for__81__block__82__else__86__block__92__for__96__j __main__for__81__block__82__else__86__block__92__for__96__j 1
                        ASSIGN __res __main__for__81__block__82__else__86__block__92__for__96__j
                        PUSH __res
                  __forcond__96:
                  // Condition
                     // Less Than
                        // LHS
                           // Identifier - j
                              PUSH __main__for__81__block__82__else__86__block__92__for__96__j
                        // RHS
                           // Member Accessor
                              // LHS
                                 // Identifier - tokens1
                                    PUSH __main__for__81__block__82__else__86__block__92__tokens1
                              // RHS
                                 PUSH __field____main____Vector__char__1____size
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        POP __rhs
                        POP __lhs
                        LT __res __lhs __rhs
                        PUSH __res
                     POP __cond
                     CMP __cond 0
                     JEQ __endfor__96
                  // Body
                     // Free Operator
                        // RHS
                           // Subscript
                              // LHS
                                 // Member Accessor
                                    // LHS
                                       // Identifier - tokens1
                                          PUSH __main__for__81__block__82__else__86__block__92__tokens1
                                    // RHS
                                       PUSH __field____main____Vector__char__1____data
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              // OFFSET
                                 // Identifier - j
                                    PUSH __main__for__81__block__82__else__86__block__92__for__96__j
                              POP __offset
                              POP __pointer
                              PUSH __pointer[__offset]
                        // Free array
                        POP __array
                        FREE __array
                        PUSH __array
                     // Statement results can be ignored
                     POP __void
                  // Repeat
                  JUMP __for__96
                  // End of For
                  __endfor__96:
               //---------------------------------------------------------
               // Free Operator
                  // RHS
                     // Identifier - tokens1
                        PUSH __main__for__81__block__82__else__86__block__92__tokens1
                  // Free array
                  POP __array
                  FREE __array
                  PUSH __array
               // Statement results can be ignored
               POP __void
            //------------------------------------------------------------
            //------------------------------------------------------------
            // End of if
            __endif__86:
         //---------------------------------------------------------------
         // Assignment - '='
            // RHS
               // Function Call - split(char[], char) -> Vector<:char[]:>
                  // Arguments
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // Identifier - lines
                                    PUSH __main__lines
                              // RHS
                                 PUSH __field____main____Vector__char__1____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Addition
                              // LHS
                                 // Identifier - l
                                    PUSH __main__for__81__l
                              // RHS
                                 // Int Literal
                                    PUSH 3
                              POP __rhs
                              POP __lhs
                              ADD __res __lhs __rhs
                              PUSH __res
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                     // Char Literal
                        PUSH ' '
                     POP __arg1
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg1
                  PUSH __arg0
                  // *** split
                  CALL __main____split__char__1__char
                  // Remove args
                  POP __void
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__for__81__block__82__tokens2 0
            POP __rhs
            ASSIGN __main__for__81__block__82__tokens2 __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Function Call - stringToInt(char[]) -> int
                  // Arguments
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // Identifier - tokens2
                                    PUSH __main__for__81__block__82__tokens2
                              // RHS
                                 PUSH __field____main____Vector__char__1____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Subtraction
                              // LHS
                                 // Member Accessor
                                    // LHS
                                       // Identifier - tokens2
                                          PUSH __main__for__81__block__82__tokens2
                                    // RHS
                                       PUSH __field____main____Vector__char__1____size
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              // RHS
                                 // Int Literal
                                    PUSH 1
                              POP __rhs
                              POP __lhs
                              SUBTRACT __res __lhs __rhs
                              PUSH __res
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** stringToInt
                  CALL __builtin__stringToInt__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Member Accessor Assignment
                  // LHS
                     // Identifier - monkey
                        PUSH __main__for__81__block__82__monkey
                  // RHS
                     PUSH __field____main____Monkey____divisible_by
                  POP __child
                  POP __parent
                  POP __rhs
            ASSIGN __parent[__child] __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // For-Loop
         // Init
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Variable Declaration
                     ASSIGN __main__for__81__block__82__for__97__j 0
               POP __rhs
               ASSIGN __main__for__81__block__82__for__97__j __rhs
               PUSH __rhs
         JUMP __forcond__97
         __for__97:
            // Update
               // Pre-Increment
                  // RHS
                     // Identifier - j
                        PUSH __main__for__81__block__82__for__97__j
                  POP __rhs
                  ADD __main__for__81__block__82__for__97__j __main__for__81__block__82__for__97__j 1
                  ASSIGN __res __main__for__81__block__82__for__97__j
                  PUSH __res
            __forcond__97:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - j
                        PUSH __main__for__81__block__82__for__97__j
                  // RHS
                     // Member Accessor
                        // LHS
                           // Identifier - tokens2
                              PUSH __main__for__81__block__82__tokens2
                        // RHS
                           PUSH __field____main____Vector__char__1____size
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endfor__97
            // Body
               // Free Operator
                  // RHS
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // Identifier - tokens2
                                    PUSH __main__for__81__block__82__tokens2
                              // RHS
                                 PUSH __field____main____Vector__char__1____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Identifier - j
                              PUSH __main__for__81__block__82__for__97__j
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                  // Free array
                  POP __array
                  FREE __array
                  PUSH __array
               // Statement results can be ignored
               POP __void
            // Repeat
            JUMP __for__97
            // End of For
            __endfor__97:
         //---------------------------------------------------------------
         // Free Operator
            // RHS
               // Identifier - tokens2
                  PUSH __main__for__81__block__82__tokens2
            // Free array
            POP __array
            FREE __array
            PUSH __array
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Function Call - split(char[], char) -> Vector<:char[]:>
                  // Arguments
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // Identifier - lines
                                    PUSH __main__lines
                              // RHS
                                 PUSH __field____main____Vector__char__1____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Addition
                              // LHS
                                 // Identifier - l
                                    PUSH __main__for__81__l
                              // RHS
                                 // Int Literal
                                    PUSH 4
                              POP __rhs
                              POP __lhs
                              ADD __res __lhs __rhs
                              PUSH __res
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                     // Char Literal
                        PUSH ' '
                     POP __arg1
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg1
                  PUSH __arg0
                  // *** split
                  CALL __main____split__char__1__char
                  // Remove args
                  POP __void
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__for__81__block__82__tokens3 0
            POP __rhs
            ASSIGN __main__for__81__block__82__tokens3 __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Function Call - stringToInt(char[]) -> int
                  // Arguments
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // Identifier - tokens3
                                    PUSH __main__for__81__block__82__tokens3
                              // RHS
                                 PUSH __field____main____Vector__char__1____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Subtraction
                              // LHS
                                 // Member Accessor
                                    // LHS
                                       // Identifier - tokens3
                                          PUSH __main__for__81__block__82__tokens3
                                    // RHS
                                       PUSH __field____main____Vector__char__1____size
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              // RHS
                                 // Int Literal
                                    PUSH 1
                              POP __rhs
                              POP __lhs
                              SUBTRACT __res __lhs __rhs
                              PUSH __res
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** stringToInt
                  CALL __builtin__stringToInt__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Member Accessor Assignment
                  // LHS
                     // Identifier - monkey
                        PUSH __main__for__81__block__82__monkey
                  // RHS
                     PUSH __field____main____Monkey____true_monkey_id
                  POP __child
                  POP __parent
                  POP __rhs
            ASSIGN __parent[__child] __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // For-Loop
         // Init
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Variable Declaration
                     ASSIGN __main__for__81__block__82__for__98__j 0
               POP __rhs
               ASSIGN __main__for__81__block__82__for__98__j __rhs
               PUSH __rhs
         JUMP __forcond__98
         __for__98:
            // Update
               // Pre-Increment
                  // RHS
                     // Identifier - j
                        PUSH __main__for__81__block__82__for__98__j
                  POP __rhs
                  ADD __main__for__81__block__82__for__98__j __main__for__81__block__82__for__98__j 1
                  ASSIGN __res __main__for__81__block__82__for__98__j
                  PUSH __res
            __forcond__98:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - j
                        PUSH __main__for__81__block__82__for__98__j
                  // RHS
                     // Member Accessor
                        // LHS
                           // Identifier - tokens3
                              PUSH __main__for__81__block__82__tokens3
                        // RHS
                           PUSH __field____main____Vector__char__1____size
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endfor__98
            // Body
               // Free Operator
                  // RHS
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // Identifier - tokens3
                                    PUSH __main__for__81__block__82__tokens3
                              // RHS
                                 PUSH __field____main____Vector__char__1____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Identifier - j
                              PUSH __main__for__81__block__82__for__98__j
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                  // Free array
                  POP __array
                  FREE __array
                  PUSH __array
               // Statement results can be ignored
               POP __void
            // Repeat
            JUMP __for__98
            // End of For
            __endfor__98:
         //---------------------------------------------------------------
         // Free Operator
            // RHS
               // Identifier - tokens3
                  PUSH __main__for__81__block__82__tokens3
            // Free array
            POP __array
            FREE __array
            PUSH __array
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Function Call - split(char[], char) -> Vector<:char[]:>
                  // Arguments
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // Identifier - lines
                                    PUSH __main__lines
                              // RHS
                                 PUSH __field____main____Vector__char__1____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Addition
                              // LHS
                                 // Identifier - l
                                    PUSH __main__for__81__l
                              // RHS
                                 // Int Literal
                                    PUSH 5
                              POP __rhs
                              POP __lhs
                              ADD __res __lhs __rhs
                              PUSH __res
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                     // Char Literal
                        PUSH ' '
                     POP __arg1
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg1
                  PUSH __arg0
                  // *** split
                  CALL __main____split__char__1__char
                  // Remove args
                  POP __void
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__for__81__block__82__tokens4 0
            POP __rhs
            ASSIGN __main__for__81__block__82__tokens4 __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Function Call - stringToInt(char[]) -> int
                  // Arguments
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // Identifier - tokens4
                                    PUSH __main__for__81__block__82__tokens4
                              // RHS
                                 PUSH __field____main____Vector__char__1____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Subtraction
                              // LHS
                                 // Member Accessor
                                    // LHS
                                       // Identifier - tokens4
                                          PUSH __main__for__81__block__82__tokens4
                                    // RHS
                                       PUSH __field____main____Vector__char__1____size
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              // RHS
                                 // Int Literal
                                    PUSH 1
                              POP __rhs
                              POP __lhs
                              SUBTRACT __res __lhs __rhs
                              PUSH __res
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** stringToInt
                  CALL __builtin__stringToInt__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Member Accessor Assignment
                  // LHS
                     // Identifier - monkey
                        PUSH __main__for__81__block__82__monkey
                  // RHS
                     PUSH __field____main____Monkey____false_monkey_id
                  POP __child
                  POP __parent
                  POP __rhs
            ASSIGN __parent[__child] __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // For-Loop
         // Init
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Variable Declaration
                     ASSIGN __main__for__81__block__82__for__99__j 0
               POP __rhs
               ASSIGN __main__for__81__block__82__for__99__j __rhs
               PUSH __rhs
         JUMP __forcond__99
         __for__99:
            // Update
               // Pre-Increment
                  // RHS
                     // Identifier - j
                        PUSH __main__for__81__block__82__for__99__j
                  POP __rhs
                  ADD __main__for__81__block__82__for__99__j __main__for__81__block__82__for__99__j 1
                  ASSIGN __res __main__for__81__block__82__for__99__j
                  PUSH __res
            __forcond__99:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - j
                        PUSH __main__for__81__block__82__for__99__j
                  // RHS
                     // Member Accessor
                        // LHS
                           // Identifier - tokens4
                              PUSH __main__for__81__block__82__tokens4
                        // RHS
                           PUSH __field____main____Vector__char__1____size
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endfor__99
            // Body
               // Free Operator
                  // RHS
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // Identifier - tokens4
                                    PUSH __main__for__81__block__82__tokens4
                              // RHS
                                 PUSH __field____main____Vector__char__1____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Identifier - j
                              PUSH __main__for__81__block__82__for__99__j
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                  // Free array
                  POP __array
                  FREE __array
                  PUSH __array
               // Statement results can be ignored
               POP __void
            // Repeat
            JUMP __for__99
            // End of For
            __endfor__99:
         //---------------------------------------------------------------
         // Free Operator
            // RHS
               // Identifier - tokens4
                  PUSH __main__for__81__block__82__tokens4
            // Free array
            POP __array
            FREE __array
            PUSH __array
         // Statement results can be ignored
         POP __void
         // Method Call - Vector<:Monkey:>::pushBack(Monkey) -> void
            // LHS
               // Identifier - monkeys
                  PUSH __main__monkeys
            // RHS
            // Arguments
               // Identifier - monkey
                  PUSH __main__for__81__block__82__monkey
               POP __arg0
            POP __obj
            // Pushing args in reverse order
            PUSH __arg0
            PUSH __obj
            CALL __method____main____Vector__Monkey____pushBack__Monkey
            POP __void
            // Remove args
            POP __void
            RESPONSE __retval
            PUSH __retval
         // Statement results can be ignored
         POP __void
      //------------------------------------------------------------------
   // Repeat
   JUMP __for__81
   // End of For
   __endfor__81:
//------------------------------------------------------------------------
//========================================================================
// Function Declaration - println(Vector<:Monkey:>) -> void
JUMP __end____main____println__Vector__tparam0__Monkey
__main____println__Vector__tparam0__Monkey:
   // Parameters
      // Param: monkeys
      STACKGET __main__println__monkeys 0
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // For-Loop
         // Init
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Variable Declaration
                     ASSIGN __main__println__block__100__for__101__i 0
               POP __rhs
               ASSIGN __main__println__block__100__for__101__i __rhs
               PUSH __rhs
         JUMP __forcond__101
         __for__101:
            // Update
               // Pre-Increment
                  // RHS
                     // Identifier - i
                        PUSH __main__println__block__100__for__101__i
                  POP __rhs
                  ADD __main__println__block__100__for__101__i __main__println__block__100__for__101__i 1
                  ASSIGN __res __main__println__block__100__for__101__i
                  PUSH __res
            __forcond__101:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - i
                        PUSH __main__println__block__100__for__101__i
                  // RHS
                     // Member Accessor
                        // LHS
                           // Identifier - monkeys
                              PUSH __main__println__monkeys
                        // RHS
                           PUSH __field____main____Vector__Monkey____size
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endfor__101
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Function Call - print(int) -> void
                     // Arguments
                        // Identifier - i
                           PUSH __main__println__block__100__for__101__i
                        POP __arg0
                     // Pushing args in reverse order
                     PUSH __arg0
                     // *** print
                     CALL __builtin__print__int
                     // Remove args
                     POP __void
                     RESPONSE __retval
                     PUSH __retval
                  // Statement results can be ignored
                  POP __void
                  // Function Call - print(char) -> void
                     // Arguments
                        // Char Literal
                           PUSH ':'
                        POP __arg0
                     // Pushing args in reverse order
                     PUSH __arg0
                     // *** print
                     CALL __builtin__print__char
                     // Remove args
                     POP __void
                     RESPONSE __retval
                     PUSH __retval
                  // Statement results can be ignored
                  POP __void
                  // Function Call - println<:int:>(Vector<:int:>) -> void
                     // Arguments
                        // Member Accessor
                           // LHS
                              // Subscript
                                 // LHS
                                    // Member Accessor
                                       // LHS
                                          // Identifier - monkeys
                                             PUSH __main__println__monkeys
                                       // RHS
                                          PUSH __field____main____Vector__Monkey____data
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                 // OFFSET
                                    // Identifier - i
                                       PUSH __main__println__block__100__for__101__i
                                 POP __offset
                                 POP __pointer
                                 PUSH __pointer[__offset]
                           // RHS
                              PUSH __field____main____Monkey____items
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                        POP __arg0
                     // Pushing args in reverse order
                     PUSH __arg0
                     // *** println
                     CALL __main____println__int____Vector__tparam0__int
                     // Remove args
                     POP __void
                     RESPONSE __retval
                     PUSH __retval
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            // Repeat
            JUMP __for__101
            // End of For
            __endfor__101:
         //---------------------------------------------------------------
      //------------------------------------------------------------------
   RETURN 0
__end____main____println__Vector__tparam0__Monkey:
// End Function Declaration - __main____println__Vector__tparam0__Monkey
//========================================================================

//------------------------------------------------------------------------
// For-Loop
// Init
   // Assignment - '='
      // RHS
         // Int Literal
            PUSH 0
      // LHS
         // Variable Declaration
            ASSIGN __main__for__103__r 0
      POP __rhs
      ASSIGN __main__for__103__r __rhs
      PUSH __rhs
JUMP __forcond__103
__for__103:
   // Update
      // Pre-Increment
         // RHS
            // Identifier - r
               PUSH __main__for__103__r
         POP __rhs
         ADD __main__for__103__r __main__for__103__r 1
         ASSIGN __res __main__for__103__r
         PUSH __res
   __forcond__103:
   // Condition
      // Less Than
         // LHS
            // Identifier - r
               PUSH __main__for__103__r
         // RHS
            // Int Literal
               PUSH 20
         POP __rhs
         POP __lhs
         LT __res __lhs __rhs
         PUSH __res
      POP __cond
      CMP __cond 0
      JEQ __endfor__103
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // For-Loop
         // Init
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Variable Declaration
                     ASSIGN __main__for__103__block__104__for__105__m 0
               POP __rhs
               ASSIGN __main__for__103__block__104__for__105__m __rhs
               PUSH __rhs
         JUMP __forcond__105
         __for__105:
            // Update
               // Pre-Increment
                  // RHS
                     // Identifier - m
                        PUSH __main__for__103__block__104__for__105__m
                  POP __rhs
                  ADD __main__for__103__block__104__for__105__m __main__for__103__block__104__for__105__m 1
                  ASSIGN __res __main__for__103__block__104__for__105__m
                  PUSH __res
            __forcond__105:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - m
                        PUSH __main__for__103__block__104__for__105__m
                  // RHS
                     // Member Accessor
                        // LHS
                           // Identifier - monkeys
                              PUSH __main__monkeys
                        // RHS
                           PUSH __field____main____Vector__Monkey____size
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endfor__105
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Subscript
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // Identifier - monkeys
                                       PUSH __main__monkeys
                                 // RHS
                                    PUSH __field____main____Vector__Monkey____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // OFFSET
                              // Identifier - m
                                 PUSH __main__for__103__block__104__for__105__m
                           POP __offset
                           POP __pointer
                           PUSH __pointer[__offset]
                     // LHS
                        // Variable Declaration
                           ASSIGN __main__for__103__block__104__for__105__block__106__monkey 0
                     POP __rhs
                     ASSIGN __main__for__103__block__104__for__105__block__106__monkey __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Member Accessor
                           // LHS
                              // Identifier - monkey
                                 PUSH __main__for__103__block__104__for__105__block__106__monkey
                           // RHS
                              PUSH __field____main____Monkey____items
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Variable Declaration
                           ASSIGN __main__for__103__block__104__for__105__block__106__monkey_items 0
                     POP __rhs
                     ASSIGN __main__for__103__block__104__for__105__block__106__monkey_items __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  //------------------------------------------------------
                  // For-Loop
                  // Init
                     // Assignment - '='
                        // RHS
                           // Int Literal
                              PUSH 0
                        // LHS
                           // Variable Declaration
                              ASSIGN __main__for__103__block__104__for__105__block__106__for__107__i 0
                        POP __rhs
                        ASSIGN __main__for__103__block__104__for__105__block__106__for__107__i __rhs
                        PUSH __rhs
                  JUMP __forcond__107
                  __for__107:
                     // Update
                        // Pre-Increment
                           // RHS
                              // Identifier - i
                                 PUSH __main__for__103__block__104__for__105__block__106__for__107__i
                           POP __rhs
                           ADD __main__for__103__block__104__for__105__block__106__for__107__i __main__for__103__block__104__for__105__block__106__for__107__i 1
                           ASSIGN __res __main__for__103__block__104__for__105__block__106__for__107__i
                           PUSH __res
                     __forcond__107:
                     // Condition
                        // Less Than
                           // LHS
                              // Identifier - i
                                 PUSH __main__for__103__block__104__for__105__block__106__for__107__i
                           // RHS
                              // Member Accessor
                                 // LHS
                                    // Identifier - monkey_items
                                       PUSH __main__for__103__block__104__for__105__block__106__monkey_items
                                 // RHS
                                    PUSH __field____main____Vector__int____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           POP __rhs
                           POP __lhs
                           LT __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endfor__107
                     // Body
                        //------------------------------------------------
                        // Code Block
                           // Assignment - '='
                              // RHS
                                 // Subscript
                                    // LHS
                                       // Member Accessor
                                          // LHS
                                             // Identifier - monkey_items
                                                PUSH __main__for__103__block__104__for__105__block__106__monkey_items
                                          // RHS
                                             PUSH __field____main____Vector__int____data
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    // OFFSET
                                       // Identifier - i
                                          PUSH __main__for__103__block__104__for__105__block__106__for__107__i
                                    POP __offset
                                    POP __pointer
                                    PUSH __pointer[__offset]
                              // LHS
                                 // Variable Declaration
                                    ASSIGN __main__for__103__block__104__for__105__block__106__for__107__block__108__worry_level 0
                              POP __rhs
                              ASSIGN __main__for__103__block__104__for__105__block__106__for__107__block__108__worry_level __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           //---------------------------------------------
                           // If-Statement
                              // Condition
                                 // Equal
                                    // LHS
                                       // Member Accessor
                                          // LHS
                                             // Identifier - monkey
                                                PUSH __main__for__103__block__104__for__105__block__106__monkey
                                          // RHS
                                             PUSH __field____main____Monkey____op
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    // RHS
                                       // Identifier - OP_ADD
                                          PUSH __main__OP_ADD
                                    POP __rhs
                                    POP __lhs
                                    EQUAL __res __lhs __rhs
                                    PUSH __res
                                 POP __cond
                                 CMP __cond 0
                                 JEQ __elif__109x0
                              // Body
                                 // Assignment - '+='
                                    // RHS
                                       // Member Accessor
                                          // LHS
                                             // Identifier - monkey
                                                PUSH __main__for__103__block__104__for__105__block__106__monkey
                                          // RHS
                                             PUSH __field____main____Monkey____operand
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    POP __rhs
                                    ADD __main__for__103__block__104__for__105__block__106__for__107__block__108__worry_level __main__for__103__block__104__for__105__block__106__for__107__block__108__worry_level __rhs
                                    PUSH __main__for__103__block__104__for__105__block__106__for__107__block__108__worry_level
                                 // Statement results can be ignored
                                 POP __void
                              JUMP __endif__109
                              //------------------------------------------
                              // Elif-Statement
                              __elif__109x0:
                                 // Condition
                                 // Equal
                                    // LHS
                                       // Member Accessor
                                          // LHS
                                             // Identifier - monkey
                                                PUSH __main__for__103__block__104__for__105__block__106__monkey
                                          // RHS
                                             PUSH __field____main____Monkey____op
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    // RHS
                                       // Identifier - OP_MUL
                                          PUSH __main__OP_MUL
                                    POP __rhs
                                    POP __lhs
                                    EQUAL __res __lhs __rhs
                                    PUSH __res
                                 POP __cond
                                 CMP __cond 0
                                 JEQ __else__109
                                 // Body
                                 // Assignment - '*='
                                    // RHS
                                       // Member Accessor
                                          // LHS
                                             // Identifier - monkey
                                                PUSH __main__for__103__block__104__for__105__block__106__monkey
                                          // RHS
                                             PUSH __field____main____Monkey____operand
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    POP __rhs
                                    MULTIPLY __main__for__103__block__104__for__105__block__106__for__107__block__108__worry_level __main__for__103__block__104__for__105__block__106__for__107__block__108__worry_level __rhs
                                    PUSH __main__for__103__block__104__for__105__block__106__for__107__block__108__worry_level
                                 // Statement results can be ignored
                                 POP __void
                                 JUMP __endif__109
                              //------------------------------------------
                              //------------------------------------------
                              // Else-Statement
                              __else__109:
                              // Assignment - '*='
                                 // RHS
                                    // Identifier - worry_level
                                       PUSH __main__for__103__block__104__for__105__block__106__for__107__block__108__worry_level
                                 POP __rhs
                                 MULTIPLY __main__for__103__block__104__for__105__block__106__for__107__block__108__worry_level __main__for__103__block__104__for__105__block__106__for__107__block__108__worry_level __rhs
                                 PUSH __main__for__103__block__104__for__105__block__106__for__107__block__108__worry_level
                              // Statement results can be ignored
                              POP __void
                              //------------------------------------------
                              // End of if
                              __endif__109:
                           //---------------------------------------------
                           // Assignment - '='
                              // RHS
                                 // Division
                                    // LHS
                                       // Identifier - worry_level
                                          PUSH __main__for__103__block__104__for__105__block__106__for__107__block__108__worry_level
                                    // RHS
                                       // Int Literal
                                          PUSH 3
                                    POP __rhs
                                    POP __lhs
                                    DIVIDE __res __lhs __rhs
                                    PUSH __res
                              POP __rhs
                              ASSIGN __main__for__103__block__104__for__105__block__106__for__107__block__108__worry_level __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           //---------------------------------------------
                           // If-Statement
                              // Condition
                                 // Equal
                                    // LHS
                                       // Mod
                                          // LHS
                                             // Identifier - worry_level
                                                PUSH __main__for__103__block__104__for__105__block__106__for__107__block__108__worry_level
                                          // RHS
                                             // Member Accessor
                                                // LHS
                                                   // Identifier - monkey
                                                      PUSH __main__for__103__block__104__for__105__block__106__monkey
                                                // RHS
                                                   PUSH __field____main____Monkey____divisible_by
                                                POP __child
                                                POP __parent
                                                PUSH __parent[__child]
                                          POP __rhs
                                          POP __lhs
                                          MOD __res __lhs __rhs
                                          PUSH __res
                                    // RHS
                                       // Int Literal
                                          PUSH 0
                                    POP __rhs
                                    POP __lhs
                                    EQUAL __res __lhs __rhs
                                    PUSH __res
                                 POP __cond
                                 CMP __cond 0
                                 JEQ __else__110
                              // Body
                                 // Method Call - Vector<:int:>::pushBack(int) -> void
                                    // LHS
                                       // Member Accessor
                                          // LHS
                                             // Subscript
                                                // LHS
                                                   // Member Accessor
                                                      // LHS
                                                         // Identifier - monkeys
                                                            PUSH __main__monkeys
                                                      // RHS
                                                         PUSH __field____main____Vector__Monkey____data
                                                      POP __child
                                                      POP __parent
                                                      PUSH __parent[__child]
                                                // OFFSET
                                                   // Member Accessor
                                                      // LHS
                                                         // Identifier - monkey
                                                            PUSH __main__for__103__block__104__for__105__block__106__monkey
                                                      // RHS
                                                         PUSH __field____main____Monkey____true_monkey_id
                                                      POP __child
                                                      POP __parent
                                                      PUSH __parent[__child]
                                                POP __offset
                                                POP __pointer
                                                PUSH __pointer[__offset]
                                          // RHS
                                             PUSH __field____main____Monkey____items
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    // RHS
                                    // Arguments
                                       // Identifier - worry_level
                                          PUSH __main__for__103__block__104__for__105__block__106__for__107__block__108__worry_level
                                       POP __arg0
                                    POP __obj
                                    // Pushing args in reverse order
                                    PUSH __arg0
                                    PUSH __obj
                                    CALL __method____main____Vector__int____pushBack__int
                                    POP __void
                                    // Remove args
                                    POP __void
                                    RESPONSE __retval
                                    PUSH __retval
                                 // Statement results can be ignored
                                 POP __void
                              JUMP __endif__110
                              //------------------------------------------
                              // Else-Statement
                              __else__110:
                              // Method Call - Vector<:int:>::pushBack(int) -> void
                                 // LHS
                                    // Member Accessor
                                       // LHS
                                          // Subscript
                                             // LHS
                                                // Member Accessor
                                                   // LHS
                                                      // Identifier - monkeys
                                                         PUSH __main__monkeys
                                                   // RHS
                                                      PUSH __field____main____Vector__Monkey____data
                                                   POP __child
                                                   POP __parent
                                                   PUSH __parent[__child]
                                             // OFFSET
                                                // Member Accessor
                                                   // LHS
                                                      // Identifier - monkey
                                                         PUSH __main__for__103__block__104__for__105__block__106__monkey
                                                   // RHS
                                                      PUSH __field____main____Monkey____false_monkey_id
                                                   POP __child
                                                   POP __parent
                                                   PUSH __parent[__child]
                                             POP __offset
                                             POP __pointer
                                             PUSH __pointer[__offset]
                                       // RHS
                                          PUSH __field____main____Monkey____items
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                 // RHS
                                 // Arguments
                                    // Identifier - worry_level
                                       PUSH __main__for__103__block__104__for__105__block__106__for__107__block__108__worry_level
                                    POP __arg0
                                 POP __obj
                                 // Pushing args in reverse order
                                 PUSH __arg0
                                 PUSH __obj
                                 CALL __method____main____Vector__int____pushBack__int
                                 POP __void
                                 // Remove args
                                 POP __void
                                 RESPONSE __retval
                                 PUSH __retval
                              // Statement results can be ignored
                              POP __void
                              //------------------------------------------
                              // End of if
                              __endif__110:
                           //---------------------------------------------
                           // Assignment - '+='
                              // RHS
                                 // Int Literal
                                    PUSH 1
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // Identifier - monkey
                                          PUSH __main__for__103__block__104__for__105__block__106__monkey
                                    // RHS
                                       PUSH __field____main____Monkey____inspected_items
                                    POP __child
                                    POP __parent
                                    POP __rhs
                              ADD __parent[__child] __parent[__child] __rhs
                              PUSH __parent[__child]
                           // Statement results can be ignored
                           POP __void
                        //------------------------------------------------
                     // Repeat
                     JUMP __for__107
                     // End of For
                     __endfor__107:
                  //------------------------------------------------------
                  // Method Call - Vector<:int:>::clear() -> void
                     // LHS
                        // Identifier - monkey_items
                           PUSH __main__for__103__block__104__for__105__block__106__monkey_items
                     // RHS
                     // Arguments
                     POP __obj
                     // Pushing args in reverse order
                     PUSH __obj
                     CALL __method____main____Vector__int____clear
                     POP __void
                     // Remove args
                     RESPONSE __retval
                     PUSH __retval
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            // Repeat
            JUMP __for__105
            // End of For
            __endfor__105:
         //---------------------------------------------------------------
      //------------------------------------------------------------------
   // Repeat
   JUMP __for__103
   // End of For
   __endfor__103:
//------------------------------------------------------------------------
// Assignment - '='
   // RHS
      // Int Literal
         PUSH 0
   // LHS
      // Variable Declaration
         ASSIGN __main__firstmax 0
   POP __rhs
   ASSIGN __main__firstmax __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Assignment - '='
   // RHS
      // Int Literal
         PUSH 0
   // LHS
      // Variable Declaration
         ASSIGN __main__secondmax 0
   POP __rhs
   ASSIGN __main__secondmax __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
//------------------------------------------------------------------------
// For-Loop
// Init
   // Assignment - '='
      // RHS
         // Int Literal
            PUSH 0
      // LHS
         // Variable Declaration
            ASSIGN __main__for__111__i 0
      POP __rhs
      ASSIGN __main__for__111__i __rhs
      PUSH __rhs
JUMP __forcond__111
__for__111:
   // Update
      // Pre-Increment
         // RHS
            // Identifier - i
               PUSH __main__for__111__i
         POP __rhs
         ADD __main__for__111__i __main__for__111__i 1
         ASSIGN __res __main__for__111__i
         PUSH __res
   __forcond__111:
   // Condition
      // Less Than
         // LHS
            // Identifier - i
               PUSH __main__for__111__i
         // RHS
            // Member Accessor
               // LHS
                  // Identifier - monkeys
                     PUSH __main__monkeys
               // RHS
                  PUSH __field____main____Vector__Monkey____size
               POP __child
               POP __parent
               PUSH __parent[__child]
         POP __rhs
         POP __lhs
         LT __res __lhs __rhs
         PUSH __res
      POP __cond
      CMP __cond 0
      JEQ __endfor__111
   // Body
      // Assignment - '='
         // RHS
            // Function Call - max(int, int) -> int
               // Arguments
                  // Member Accessor
                     // LHS
                        // Subscript
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // Identifier - monkeys
                                       PUSH __main__monkeys
                                 // RHS
                                    PUSH __field____main____Vector__Monkey____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // OFFSET
                              // Identifier - i
                                 PUSH __main__for__111__i
                           POP __offset
                           POP __pointer
                           PUSH __pointer[__offset]
                     // RHS
                        PUSH __field____main____Monkey____inspected_items
                     POP __child
                     POP __parent
                     PUSH __parent[__child]
                  // Identifier - firstmax
                     PUSH __main__firstmax
                  POP __arg1
                  POP __arg0
               // Pushing args in reverse order
               PUSH __arg1
               PUSH __arg0
               // *** max
               CALL __main____max__int__int
               // Remove args
               POP __void
               POP __void
               RESPONSE __retval
               PUSH __retval
         POP __rhs
         ASSIGN __main__firstmax __rhs
         PUSH __rhs
      // Statement results can be ignored
      POP __void
   // Repeat
   JUMP __for__111
   // End of For
   __endfor__111:
//------------------------------------------------------------------------
//------------------------------------------------------------------------
// For-Loop
// Init
   // Assignment - '='
      // RHS
         // Int Literal
            PUSH 0
      // LHS
         // Variable Declaration
            ASSIGN __main__for__112__i 0
      POP __rhs
      ASSIGN __main__for__112__i __rhs
      PUSH __rhs
JUMP __forcond__112
__for__112:
   // Update
      // Pre-Increment
         // RHS
            // Identifier - i
               PUSH __main__for__112__i
         POP __rhs
         ADD __main__for__112__i __main__for__112__i 1
         ASSIGN __res __main__for__112__i
         PUSH __res
   __forcond__112:
   // Condition
      // Less Than
         // LHS
            // Identifier - i
               PUSH __main__for__112__i
         // RHS
            // Member Accessor
               // LHS
                  // Identifier - monkeys
                     PUSH __main__monkeys
               // RHS
                  PUSH __field____main____Vector__Monkey____size
               POP __child
               POP __parent
               PUSH __parent[__child]
         POP __rhs
         POP __lhs
         LT __res __lhs __rhs
         PUSH __res
      POP __cond
      CMP __cond 0
      JEQ __endfor__112
   // Body
      //------------------------------------------------------------------
      // If-Statement
         // Condition
            // Not Equal
               // LHS
                  // Member Accessor
                     // LHS
                        // Subscript
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // Identifier - monkeys
                                       PUSH __main__monkeys
                                 // RHS
                                    PUSH __field____main____Vector__Monkey____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // OFFSET
                              // Identifier - i
                                 PUSH __main__for__112__i
                           POP __offset
                           POP __pointer
                           PUSH __pointer[__offset]
                     // RHS
                        PUSH __field____main____Monkey____inspected_items
                     POP __child
                     POP __parent
                     PUSH __parent[__child]
               // RHS
                  // Identifier - firstmax
                     PUSH __main__firstmax
               POP __rhs
               POP __lhs
               NEQUAL __res __lhs __rhs
               PUSH __res
            POP __cond
            CMP __cond 0
            JEQ __endif__113
         // Body
            // Assignment - '='
               // RHS
                  // Function Call - max(int, int) -> int
                     // Arguments
                        // Member Accessor
                           // LHS
                              // Subscript
                                 // LHS
                                    // Member Accessor
                                       // LHS
                                          // Identifier - monkeys
                                             PUSH __main__monkeys
                                       // RHS
                                          PUSH __field____main____Vector__Monkey____data
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                 // OFFSET
                                    // Identifier - i
                                       PUSH __main__for__112__i
                                 POP __offset
                                 POP __pointer
                                 PUSH __pointer[__offset]
                           // RHS
                              PUSH __field____main____Monkey____inspected_items
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                        // Identifier - secondmax
                           PUSH __main__secondmax
                        POP __arg1
                        POP __arg0
                     // Pushing args in reverse order
                     PUSH __arg1
                     PUSH __arg0
                     // *** max
                     CALL __main____max__int__int
                     // Remove args
                     POP __void
                     POP __void
                     RESPONSE __retval
                     PUSH __retval
               POP __rhs
               ASSIGN __main__secondmax __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
         JUMP __endif__113
         // End of if
         __endif__113:
      //------------------------------------------------------------------
   // Repeat
   JUMP __for__112
   // End of For
   __endfor__112:
//------------------------------------------------------------------------
// Function Call - println(int) -> void
   // Arguments
      // Multiplication
         // LHS
            // Identifier - firstmax
               PUSH __main__firstmax
         // RHS
            // Identifier - secondmax
               PUSH __main__secondmax
         POP __rhs
         POP __lhs
         MULTIPLY __res __lhs __rhs
         PUSH __res
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL __builtin__println__int
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
//========================================================================
//### END OF CODE ########################################################
//========================================================================

