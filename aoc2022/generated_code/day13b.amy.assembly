// AmyAssembly compiled from AmyScript
//========================================================================

//========================================================================
//### LIBRARY CODE #######################################################
//========================================================================

// AmyScript Built-in library
// Author: Amy Burnett
//========================================================================
// Global Builtin Variables

    assign __null 0

//========================================================================
// dont execute library functions 

jump __endOfLibrary

//========================================================================
// Prints a given string to the screen
// void print (char[] stringToPrint);
__builtin__print__char__1:
    // grab string
    stackget __str 0
    // print each char
    // init
    assign __i 0
__print__char__1__loop:
    // cond
    cmp __str[__i] 0
    jeq __print__char__1__endloop
    // Body
    print __str[__i]
    // update
    add __i __i 1
    // repeat
    jump __print__char__1__loop
__print__char__1__endloop:
    return 0

//========================================================================
// Prints an int to the screen
// void print (int intToPrint);
__builtin__print__int:
    stackget __str 0
    print __str
    return 0

//========================================================================
// Prints a float to the screen
// void print (float floatToPrint);
__builtin__print__float:
    stackget __str 0
    print __str
    return 0

//========================================================================
// Prints a char to the screen
// void print (char charToPrint);
__builtin__print__char:
    // grab string
    stackget __char 0
    print __char
    return 0

//========================================================================
// Prints an enum's integer value 
// void print (Enum e);
__builtin__print__Enum:
    stackget __e 0
    print __e
    return 0

//========================================================================
// Prints a given string to the screen with a newline at the end
// void println (char[] stringToPrint);
__builtin__println__char__1:
    // grab string
    stackget __str 0
    // print each char
    // init
    assign __i 0
__println__char__1__loop:
    // cond
    cmp __str[__i] 0
    jeq __println__char__1__endloop
    // Body
    print __str[__i]
    // update
    add __i __i 1
    // repeat
    jump __println__char__1__loop
__println__char__1__endloop:
    println
    return 0

//========================================================================
// Prints an int to the screen with a newline
// void print (int intToPrint);
__builtin__println__int:
    stackget __str 0
    println __str
    return 0

//========================================================================
// Prints a float to the screen with a newline
// void println (float floatToPrint);
__builtin__println__float:
    stackget __str 0
    println __str
    return 0

//========================================================================
// Prints a char to the screen with a newline
// void println (char charToPrint);
__builtin__println__char:
    // grab string
    stackget __char 0
    println __char
    return 0

//========================================================================
// Prints an enum's integer value with a newline
// void println (Enum e);
__builtin__println__Enum:
    stackget __e 0
    println __e
    return 0

//========================================================================
// Prints a newline to the console
// void println ();
__builtin__println:
    println 
    return 0

//========================================================================
// grabs input from the console 
// char[] input ();
__builtin__input:
    input __line
    return __line

//========================================================================
// exits/stops the program 
__builtin__exit:
    halt

//========================================================================

// Exits the program with the given exit code 
// void exit(int exit_code)
// - exit_code : 
__builtin__exit__int:
    // ** not implemented for amyasm
    halt 

//========================================================================
// returns default float value
// float float ();
__builtin__float:
    return 0.0

//========================================================================
// converts int to float
// float intToFloat (int);
__builtin__intToFloat__int:
    stackget val 0
    itof res val
    return res

//========================================================================
// parses a float from a given char[]
// float stringToFloat (char[]);
__builtin__stringToFloat__char__1:
    stackget val 0
    stof res val
    return res

//========================================================================
// returns default int value
// int int ();
__builtin__int:
    return 0

//========================================================================
// returns default char value
// char char ();
__builtin__char:
    return '0'

//========================================================================
// converts float to int
// int floatToInt (float);
__builtin__floatToInt__float:
    stackget val 0
    ftoi res val
    return res

//========================================================================
// parses an int from a given char[]
// int stringToInt (char[]);
__builtin__stringToInt__char__1:
    stackget val 0
    stoi res val
    return res

//========================================================================
// parses an int from a given char
// int charToInt (char);
__builtin__charToInt__char:
    stackget val 0
    ctoi res val
    return res

//========================================================================
// converts int to string
// char[] string (int);
__builtin__string__int:
    stackget val 0
    string res val
    return res

//========================================================================
// converts float to string
// char[] string (float);
__builtin__string__float:
    stackget val 0
    string res val
    return res

//========================================================================

// returns default value for array and object (null)
// null null ();
__builtin__null:
    return __null

//========================================================================

__endOfLibrary:
    //push prompt
    //call print

    //call input
    //response name

    //push name
    //call println

//========================================================================
//### COMPILED CODE ######################################################
//========================================================================

//========================================================================
// Class Template - 
   // Instances:
      //==================================================================
      // Class Declaration - __main____Vector__char__1 inherits __builtin____main__Object
         // Creating Dispatch Table
            MALLOC __dtable____main____Vector__char__1 5
            // Populate Dispatch Table
            ASSIGN __dtable____main____Vector__char__1[0] __method____main____Vector__char__1____pushBack__char__1
            ASSIGN __dtable____main____Vector__char__1[1] __method____main____Vector__char__1____popBack
            ASSIGN __dtable____main____Vector__char__1[2] __method____main____Vector__char__1____clear
            ASSIGN __dtable____main____Vector__char__1[3] __method____main____Vector__char__1____get__int
            ASSIGN __dtable____main____Vector__char__1[4] __method____main____Vector__char__1____set__int__char__1
         //---------------------------------------------------------------
         // Field - char[][] Vector<:char[]:>::data
         ASSIGN __field____main____Vector__char__1____data 1
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - int Vector<:char[]:>::size
         ASSIGN __field____main____Vector__char__1____size 2
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - int Vector<:char[]:>::capacity
         ASSIGN __field____main____Vector__char__1____capacity 3
         //---------------------------------------------------------------
      // skip over class methods
      JUMP __endclass____main____Vector__char__1
         //---------------------------------------------------------------
         // Constructor Declaration - Vector<:char[]:>::Vector() -> Vector<:char[]:>
         JUMP __end__ctor____main____Vector__char__1____Vector
         __ctor____main____Vector__char__1____Vector:
            // Creating Class Instance
               MALLOC __this 4
               // Add Dispatch Table
               ASSIGN __this[0] __dtable____main____Vector__char__1
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Int Literal
                           PUSH 10
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char__1____capacity
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Int Literal
                           PUSH 0
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char__1____size
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Array Allocator
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__char__1____capacity
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                           POP __size
                           MALLOC __ptr __size
                           PUSH __ptr
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char__1____data
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN __this
         __end__ctor____main____Vector__char__1____Vector:
         // End Constructor Declaration - __ctor____main____Vector__char__1____Vector
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Constructor Declaration - Vector<:char[]:>::Vector(int) -> Vector<:char[]:>
         JUMP __end__ctor____main____Vector__char__1____Vector__int
         __ctor____main____Vector__char__1____Vector__int:
            // Creating Class Instance
               MALLOC __this 4
               // Add Dispatch Table
               ASSIGN __this[0] __dtable____main____Vector__char__1
            // Parameters
               // Param: size
               STACKGET __main____Vector__char__1__Vector__size 0
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Addition
                           // LHS
                              // Identifier - size
                                 PUSH __main____Vector__char__1__Vector__size
                           // RHS
                              // Int Literal
                                 PUSH 10
                           POP __rhs
                           POP __lhs
                           ADD __res __lhs __rhs
                           PUSH __res
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char__1____capacity
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Identifier - size
                           PUSH __main____Vector__char__1__Vector__size
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char__1____size
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Array Allocator
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__char__1____capacity
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                           POP __size
                           MALLOC __ptr __size
                           PUSH __ptr
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char__1____data
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN __this
         __end__ctor____main____Vector__char__1____Vector__int:
         // End Constructor Declaration - __ctor____main____Vector__char__1____Vector__int
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:char[]:>::pushBack(char[]) -> void
         JUMP __end__method____main____Vector__char__1____pushBack__char__1
         __method____main____Vector__char__1____pushBack__char__1:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: val
               STACKGET __main____Vector__char__1__pushBack__val 1
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Greater Than or Equal to
                           // LHS
                              // Addition
                                 // LHS
                                    // Member Accessor
                                       // LHS
                                          // This keyword
                                             PUSH __this
                                       // RHS
                                          PUSH __field____main____Vector__char__1____size
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                 // RHS
                                    // Int Literal
                                       PUSH 1
                                 POP __rhs
                                 POP __lhs
                                 ADD __res __lhs __rhs
                                 PUSH __res
                           // RHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__char__1____capacity
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           POP __rhs
                           POP __lhs
                           GE __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__3
                     // Body
                        //------------------------------------------------
                        // Code Block
                           // Assignment - '='
                              // RHS
                                 // Multiplication
                                    // LHS
                                       // Member Accessor
                                          // LHS
                                             // This keyword
                                                PUSH __this
                                          // RHS
                                             PUSH __field____main____Vector__char__1____capacity
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    // RHS
                                       // Int Literal
                                          PUSH 2
                                    POP __rhs
                                    POP __lhs
                                    MULTIPLY __res __lhs __rhs
                                    PUSH __res
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__char__1____capacity
                                    POP __child
                                    POP __parent
                                    POP __rhs
                              ASSIGN __parent[__child] __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           // Assignment - '='
                              // RHS
                                 // Array Allocator
                                    // Member Accessor
                                       // LHS
                                          // This keyword
                                             PUSH __this
                                       // RHS
                                          PUSH __field____main____Vector__char__1____capacity
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                    POP __size
                                    MALLOC __ptr __size
                                    PUSH __ptr
                              // LHS
                                 // Variable Declaration
                                    ASSIGN __main____Vector__char__1__pushBack__block__2__if__3__block__4__nData 0
                              POP __rhs
                              ASSIGN __main____Vector__char__1__pushBack__block__2__if__3__block__4__nData __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           //---------------------------------------------
                           // For-Loop
                           // Init
                              // Assignment - '='
                                 // RHS
                                    // Int Literal
                                       PUSH 0
                                 // LHS
                                    // Variable Declaration
                                       ASSIGN __main____Vector__char__1__pushBack__block__2__if__3__block__4__for__5__i 0
                                 POP __rhs
                                 ASSIGN __main____Vector__char__1__pushBack__block__2__if__3__block__4__for__5__i __rhs
                                 PUSH __rhs
                           JUMP __forcond__5
                           __for__5:
                              // Update
                                 // Pre-Increment
                                    // RHS
                                       // Identifier - i
                                          PUSH __main____Vector__char__1__pushBack__block__2__if__3__block__4__for__5__i
                                    POP __rhs
                                    ADD __main____Vector__char__1__pushBack__block__2__if__3__block__4__for__5__i __main____Vector__char__1__pushBack__block__2__if__3__block__4__for__5__i 1
                                    ASSIGN __res __main____Vector__char__1__pushBack__block__2__if__3__block__4__for__5__i
                                    PUSH __res
                              __forcond__5:
                              // Condition
                                 // Less Than
                                    // LHS
                                       // Identifier - i
                                          PUSH __main____Vector__char__1__pushBack__block__2__if__3__block__4__for__5__i
                                    // RHS
                                       // Member Accessor
                                          // LHS
                                             // This keyword
                                                PUSH __this
                                          // RHS
                                             PUSH __field____main____Vector__char__1____size
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    POP __rhs
                                    POP __lhs
                                    LT __res __lhs __rhs
                                    PUSH __res
                                 POP __cond
                                 CMP __cond 0
                                 JEQ __endfor__5
                              // Body
                                 //---------------------------------------
                                 // Code Block
                                    // Assignment - '='
                                       // RHS
                                          // Subscript
                                             // LHS
                                                // Member Accessor
                                                   // LHS
                                                      // This keyword
                                                         PUSH __this
                                                   // RHS
                                                      PUSH __field____main____Vector__char__1____data
                                                   POP __child
                                                   POP __parent
                                                   PUSH __parent[__child]
                                             // OFFSET
                                                // Identifier - i
                                                   PUSH __main____Vector__char__1__pushBack__block__2__if__3__block__4__for__5__i
                                             POP __offset
                                             POP __pointer
                                             PUSH __pointer[__offset]
                                       // LHS
                                          // Subscript assignment
                                             // LHS
                                                // Identifier - nData
                                                   PUSH __main____Vector__char__1__pushBack__block__2__if__3__block__4__nData
                                             // OFFSET
                                                // Identifier - i
                                                   PUSH __main____Vector__char__1__pushBack__block__2__if__3__block__4__for__5__i
                                             POP __offset
                                             POP __pointer
                                       POP __rhs
                                       ASSIGN __pointer[__offset] __rhs
                                       PUSH __rhs
                                    // Statement results can be ignored
                                    POP __void
                                 //---------------------------------------
                              // Repeat
                              JUMP __for__5
                              // End of For
                              __endfor__5:
                           //---------------------------------------------
                           // Free Operator
                              // RHS
                                 // Member Accessor
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__char__1____data
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              // Free array
                              POP __array
                              FREE __array
                              PUSH __array
                           // Statement results can be ignored
                           POP __void
                           // Assignment - '='
                              // RHS
                                 // Identifier - nData
                                    PUSH __main____Vector__char__1__pushBack__block__2__if__3__block__4__nData
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__char__1____data
                                    POP __child
                                    POP __parent
                                    POP __rhs
                              ASSIGN __parent[__child] __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                        //------------------------------------------------
                     JUMP __endif__3
                     // End of if
                     __endif__3:
                  //------------------------------------------------------
                  // Assignment - '='
                     // RHS
                        // Identifier - val
                           PUSH __main____Vector__char__1__pushBack__val
                     // LHS
                        // Subscript assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__char__1____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // OFFSET
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__char__1____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           POP __offset
                           POP __pointer
                     POP __rhs
                     ASSIGN __pointer[__offset] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Pre-Increment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char__1____size
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     POP __rhs
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char__1____size
                           POP __child
                           POP __parent
                           ADD __parent[__child] __parent[__child] 1
                           ASSIGN __res __parent[__child]
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__char__1____pushBack__char__1:
         // End Method Declaration - __method____main____Vector__char__1____pushBack__char__1
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:char[]:>::popBack() -> char[]
         JUMP __end__method____main____Vector__char__1____popBack
         __method____main____Vector__char__1____popBack:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__char__1____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Pre-Decrement
                              // RHS
                                 // Member Accessor
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__char__1____size
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              POP __rhs
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__char__1____size
                                    POP __child
                                    POP __parent
                                    SUBTRACT __parent[__child] __parent[__child] 1
                                    ASSIGN __res __parent[__child]
                              PUSH __res
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__char__1____popBack:
         // End Method Declaration - __method____main____Vector__char__1____popBack
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:char[]:>::clear() -> void
         JUMP __end__method____main____Vector__char__1____clear
         __method____main____Vector__char__1____clear:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // While-Loop
                  __while__9:
                     // Condition
                        // Greater Than
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__char__1____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              // Int Literal
                                 PUSH 0
                           POP __rhs
                           POP __lhs
                           GT __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endwhile__9
                     // Body
                        // Method Call - Vector<:char[]:>::popBack() -> char[]
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                           // Arguments
                           POP __obj
                           // Pushing args in reverse order
                           PUSH __obj
                           CALL __method____main____Vector__char__1____popBack
                           POP __void
                           // Remove args
                           RESPONSE __retval
                           PUSH __retval
                        // Statement results can be ignored
                        POP __void
                     JUMP __while__9
                     // End of While
                     __endwhile__9:
                  //------------------------------------------------------
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__char__1____clear:
         // End Method Declaration - __method____main____Vector__char__1____clear
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:char[]:>::get(int) -> char[]
         JUMP __end__method____main____Vector__char__1____get__int
         __method____main____Vector__char__1____get__int:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: index
               STACKGET __main____Vector__char__1__get__index 1
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__char__1____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Identifier - index
                              PUSH __main____Vector__char__1__get__index
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__char__1____get__int:
         // End Method Declaration - __method____main____Vector__char__1____get__int
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:char[]:>::set(int, char[]) -> void
         JUMP __end__method____main____Vector__char__1____set__int__char__1
         __method____main____Vector__char__1____set__int__char__1:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: index
               STACKGET __main____Vector__char__1__set__index 1
               // Param: value
               STACKGET __main____Vector__char__1__set__value 2
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Identifier - value
                           PUSH __main____Vector__char__1__set__value
                     // LHS
                        // Subscript assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__char__1____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // OFFSET
                              // Identifier - index
                                 PUSH __main____Vector__char__1__set__index
                           POP __offset
                           POP __pointer
                     POP __rhs
                     ASSIGN __pointer[__offset] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__char__1____set__int__char__1:
         // End Method Declaration - __method____main____Vector__char__1____set__int__char__1
         //---------------------------------------------------------------

      __endclass____main____Vector__char__1:
      // End Class Declaration - __main____Vector__char__1
      //==================================================================

      //==================================================================
      // Class Declaration - __main____Vector__Element inherits __builtin____main__Object
         // Creating Dispatch Table
            MALLOC __dtable____main____Vector__Element 5
            // Populate Dispatch Table
            ASSIGN __dtable____main____Vector__Element[0] __method____main____Vector__Element____pushBack__Element
            ASSIGN __dtable____main____Vector__Element[1] __method____main____Vector__Element____popBack
            ASSIGN __dtable____main____Vector__Element[2] __method____main____Vector__Element____clear
            ASSIGN __dtable____main____Vector__Element[3] __method____main____Vector__Element____get__int
            ASSIGN __dtable____main____Vector__Element[4] __method____main____Vector__Element____set__int__Element
         //---------------------------------------------------------------
         // Field - Element[] Vector<:Element:>::data
         ASSIGN __field____main____Vector__Element____data 1
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - int Vector<:Element:>::size
         ASSIGN __field____main____Vector__Element____size 2
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - int Vector<:Element:>::capacity
         ASSIGN __field____main____Vector__Element____capacity 3
         //---------------------------------------------------------------
      // skip over class methods
      JUMP __endclass____main____Vector__Element
         //---------------------------------------------------------------
         // Constructor Declaration - Vector<:Element:>::Vector() -> Vector<:Element:>
         JUMP __end__ctor____main____Vector__Element____Vector
         __ctor____main____Vector__Element____Vector:
            // Creating Class Instance
               MALLOC __this 4
               // Add Dispatch Table
               ASSIGN __this[0] __dtable____main____Vector__Element
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Int Literal
                           PUSH 10
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__Element____capacity
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Int Literal
                           PUSH 0
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__Element____size
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Array Allocator
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__Element____capacity
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                           POP __size
                           MALLOC __ptr __size
                           PUSH __ptr
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__Element____data
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN __this
         __end__ctor____main____Vector__Element____Vector:
         // End Constructor Declaration - __ctor____main____Vector__Element____Vector
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Constructor Declaration - Vector<:Element:>::Vector(int) -> Vector<:Element:>
         JUMP __end__ctor____main____Vector__Element____Vector__int
         __ctor____main____Vector__Element____Vector__int:
            // Creating Class Instance
               MALLOC __this 4
               // Add Dispatch Table
               ASSIGN __this[0] __dtable____main____Vector__Element
            // Parameters
               // Param: size
               STACKGET __main____Vector__Element__Vector__size 0
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Addition
                           // LHS
                              // Identifier - size
                                 PUSH __main____Vector__Element__Vector__size
                           // RHS
                              // Int Literal
                                 PUSH 10
                           POP __rhs
                           POP __lhs
                           ADD __res __lhs __rhs
                           PUSH __res
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__Element____capacity
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Identifier - size
                           PUSH __main____Vector__Element__Vector__size
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__Element____size
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Array Allocator
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__Element____capacity
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                           POP __size
                           MALLOC __ptr __size
                           PUSH __ptr
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__Element____data
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN __this
         __end__ctor____main____Vector__Element____Vector__int:
         // End Constructor Declaration - __ctor____main____Vector__Element____Vector__int
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:Element:>::pushBack(Element) -> void
         JUMP __end__method____main____Vector__Element____pushBack__Element
         __method____main____Vector__Element____pushBack__Element:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: val
               STACKGET __main____Vector__Element__pushBack__val 1
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Greater Than or Equal to
                           // LHS
                              // Addition
                                 // LHS
                                    // Member Accessor
                                       // LHS
                                          // This keyword
                                             PUSH __this
                                       // RHS
                                          PUSH __field____main____Vector__Element____size
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                 // RHS
                                    // Int Literal
                                       PUSH 1
                                 POP __rhs
                                 POP __lhs
                                 ADD __res __lhs __rhs
                                 PUSH __res
                           // RHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__Element____capacity
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           POP __rhs
                           POP __lhs
                           GE __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__15
                     // Body
                        //------------------------------------------------
                        // Code Block
                           // Assignment - '='
                              // RHS
                                 // Multiplication
                                    // LHS
                                       // Member Accessor
                                          // LHS
                                             // This keyword
                                                PUSH __this
                                          // RHS
                                             PUSH __field____main____Vector__Element____capacity
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    // RHS
                                       // Int Literal
                                          PUSH 2
                                    POP __rhs
                                    POP __lhs
                                    MULTIPLY __res __lhs __rhs
                                    PUSH __res
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__Element____capacity
                                    POP __child
                                    POP __parent
                                    POP __rhs
                              ASSIGN __parent[__child] __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           // Assignment - '='
                              // RHS
                                 // Array Allocator
                                    // Member Accessor
                                       // LHS
                                          // This keyword
                                             PUSH __this
                                       // RHS
                                          PUSH __field____main____Vector__Element____capacity
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                    POP __size
                                    MALLOC __ptr __size
                                    PUSH __ptr
                              // LHS
                                 // Variable Declaration
                                    ASSIGN __main____Vector__Element__pushBack__block__14__if__15__block__16__nData 0
                              POP __rhs
                              ASSIGN __main____Vector__Element__pushBack__block__14__if__15__block__16__nData __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           //---------------------------------------------
                           // For-Loop
                           // Init
                              // Assignment - '='
                                 // RHS
                                    // Int Literal
                                       PUSH 0
                                 // LHS
                                    // Variable Declaration
                                       ASSIGN __main____Vector__Element__pushBack__block__14__if__15__block__16__for__17__i 0
                                 POP __rhs
                                 ASSIGN __main____Vector__Element__pushBack__block__14__if__15__block__16__for__17__i __rhs
                                 PUSH __rhs
                           JUMP __forcond__17
                           __for__17:
                              // Update
                                 // Pre-Increment
                                    // RHS
                                       // Identifier - i
                                          PUSH __main____Vector__Element__pushBack__block__14__if__15__block__16__for__17__i
                                    POP __rhs
                                    ADD __main____Vector__Element__pushBack__block__14__if__15__block__16__for__17__i __main____Vector__Element__pushBack__block__14__if__15__block__16__for__17__i 1
                                    ASSIGN __res __main____Vector__Element__pushBack__block__14__if__15__block__16__for__17__i
                                    PUSH __res
                              __forcond__17:
                              // Condition
                                 // Less Than
                                    // LHS
                                       // Identifier - i
                                          PUSH __main____Vector__Element__pushBack__block__14__if__15__block__16__for__17__i
                                    // RHS
                                       // Member Accessor
                                          // LHS
                                             // This keyword
                                                PUSH __this
                                          // RHS
                                             PUSH __field____main____Vector__Element____size
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    POP __rhs
                                    POP __lhs
                                    LT __res __lhs __rhs
                                    PUSH __res
                                 POP __cond
                                 CMP __cond 0
                                 JEQ __endfor__17
                              // Body
                                 //---------------------------------------
                                 // Code Block
                                    // Assignment - '='
                                       // RHS
                                          // Subscript
                                             // LHS
                                                // Member Accessor
                                                   // LHS
                                                      // This keyword
                                                         PUSH __this
                                                   // RHS
                                                      PUSH __field____main____Vector__Element____data
                                                   POP __child
                                                   POP __parent
                                                   PUSH __parent[__child]
                                             // OFFSET
                                                // Identifier - i
                                                   PUSH __main____Vector__Element__pushBack__block__14__if__15__block__16__for__17__i
                                             POP __offset
                                             POP __pointer
                                             PUSH __pointer[__offset]
                                       // LHS
                                          // Subscript assignment
                                             // LHS
                                                // Identifier - nData
                                                   PUSH __main____Vector__Element__pushBack__block__14__if__15__block__16__nData
                                             // OFFSET
                                                // Identifier - i
                                                   PUSH __main____Vector__Element__pushBack__block__14__if__15__block__16__for__17__i
                                             POP __offset
                                             POP __pointer
                                       POP __rhs
                                       ASSIGN __pointer[__offset] __rhs
                                       PUSH __rhs
                                    // Statement results can be ignored
                                    POP __void
                                 //---------------------------------------
                              // Repeat
                              JUMP __for__17
                              // End of For
                              __endfor__17:
                           //---------------------------------------------
                           // Free Operator
                              // RHS
                                 // Member Accessor
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__Element____data
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              // Free array
                              POP __array
                              FREE __array
                              PUSH __array
                           // Statement results can be ignored
                           POP __void
                           // Assignment - '='
                              // RHS
                                 // Identifier - nData
                                    PUSH __main____Vector__Element__pushBack__block__14__if__15__block__16__nData
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__Element____data
                                    POP __child
                                    POP __parent
                                    POP __rhs
                              ASSIGN __parent[__child] __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                        //------------------------------------------------
                     JUMP __endif__15
                     // End of if
                     __endif__15:
                  //------------------------------------------------------
                  // Assignment - '='
                     // RHS
                        // Identifier - val
                           PUSH __main____Vector__Element__pushBack__val
                     // LHS
                        // Subscript assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__Element____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // OFFSET
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__Element____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           POP __offset
                           POP __pointer
                     POP __rhs
                     ASSIGN __pointer[__offset] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Pre-Increment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__Element____size
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     POP __rhs
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__Element____size
                           POP __child
                           POP __parent
                           ADD __parent[__child] __parent[__child] 1
                           ASSIGN __res __parent[__child]
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__Element____pushBack__Element:
         // End Method Declaration - __method____main____Vector__Element____pushBack__Element
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:Element:>::popBack() -> Element
         JUMP __end__method____main____Vector__Element____popBack
         __method____main____Vector__Element____popBack:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__Element____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Pre-Decrement
                              // RHS
                                 // Member Accessor
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__Element____size
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              POP __rhs
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__Element____size
                                    POP __child
                                    POP __parent
                                    SUBTRACT __parent[__child] __parent[__child] 1
                                    ASSIGN __res __parent[__child]
                              PUSH __res
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__Element____popBack:
         // End Method Declaration - __method____main____Vector__Element____popBack
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:Element:>::clear() -> void
         JUMP __end__method____main____Vector__Element____clear
         __method____main____Vector__Element____clear:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // While-Loop
                  __while__21:
                     // Condition
                        // Greater Than
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__Element____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              // Int Literal
                                 PUSH 0
                           POP __rhs
                           POP __lhs
                           GT __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endwhile__21
                     // Body
                        // Method Call - Vector<:Element:>::popBack() -> Element
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                           // Arguments
                           POP __obj
                           // Pushing args in reverse order
                           PUSH __obj
                           CALL __method____main____Vector__Element____popBack
                           POP __void
                           // Remove args
                           RESPONSE __retval
                           PUSH __retval
                        // Statement results can be ignored
                        POP __void
                     JUMP __while__21
                     // End of While
                     __endwhile__21:
                  //------------------------------------------------------
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__Element____clear:
         // End Method Declaration - __method____main____Vector__Element____clear
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:Element:>::get(int) -> Element
         JUMP __end__method____main____Vector__Element____get__int
         __method____main____Vector__Element____get__int:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: index
               STACKGET __main____Vector__Element__get__index 1
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__Element____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Identifier - index
                              PUSH __main____Vector__Element__get__index
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__Element____get__int:
         // End Method Declaration - __method____main____Vector__Element____get__int
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:Element:>::set(int, Element) -> void
         JUMP __end__method____main____Vector__Element____set__int__Element
         __method____main____Vector__Element____set__int__Element:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: index
               STACKGET __main____Vector__Element__set__index 1
               // Param: value
               STACKGET __main____Vector__Element__set__value 2
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Identifier - value
                           PUSH __main____Vector__Element__set__value
                     // LHS
                        // Subscript assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__Element____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // OFFSET
                              // Identifier - index
                                 PUSH __main____Vector__Element__set__index
                           POP __offset
                           POP __pointer
                     POP __rhs
                     ASSIGN __pointer[__offset] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__Element____set__int__Element:
         // End Method Declaration - __method____main____Vector__Element____set__int__Element
         //---------------------------------------------------------------

      __endclass____main____Vector__Element:
      // End Class Declaration - __main____Vector__Element
      //==================================================================

      //==================================================================
      // Class Declaration - __main____Vector__char inherits __builtin____main__Object
         // Creating Dispatch Table
            MALLOC __dtable____main____Vector__char 5
            // Populate Dispatch Table
            ASSIGN __dtable____main____Vector__char[0] __method____main____Vector__char____pushBack__char
            ASSIGN __dtable____main____Vector__char[1] __method____main____Vector__char____popBack
            ASSIGN __dtable____main____Vector__char[2] __method____main____Vector__char____clear
            ASSIGN __dtable____main____Vector__char[3] __method____main____Vector__char____get__int
            ASSIGN __dtable____main____Vector__char[4] __method____main____Vector__char____set__int__char
         //---------------------------------------------------------------
         // Field - char[] Vector<:char:>::data
         ASSIGN __field____main____Vector__char____data 1
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - int Vector<:char:>::size
         ASSIGN __field____main____Vector__char____size 2
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - int Vector<:char:>::capacity
         ASSIGN __field____main____Vector__char____capacity 3
         //---------------------------------------------------------------
      // skip over class methods
      JUMP __endclass____main____Vector__char
         //---------------------------------------------------------------
         // Constructor Declaration - Vector<:char:>::Vector() -> Vector<:char:>
         JUMP __end__ctor____main____Vector__char____Vector
         __ctor____main____Vector__char____Vector:
            // Creating Class Instance
               MALLOC __this 4
               // Add Dispatch Table
               ASSIGN __this[0] __dtable____main____Vector__char
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Int Literal
                           PUSH 10
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char____capacity
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Int Literal
                           PUSH 0
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char____size
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Array Allocator
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__char____capacity
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                           POP __size
                           MALLOC __ptr __size
                           PUSH __ptr
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char____data
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN __this
         __end__ctor____main____Vector__char____Vector:
         // End Constructor Declaration - __ctor____main____Vector__char____Vector
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Constructor Declaration - Vector<:char:>::Vector(int) -> Vector<:char:>
         JUMP __end__ctor____main____Vector__char____Vector__int
         __ctor____main____Vector__char____Vector__int:
            // Creating Class Instance
               MALLOC __this 4
               // Add Dispatch Table
               ASSIGN __this[0] __dtable____main____Vector__char
            // Parameters
               // Param: size
               STACKGET __main____Vector__char__Vector__size 0
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Addition
                           // LHS
                              // Identifier - size
                                 PUSH __main____Vector__char__Vector__size
                           // RHS
                              // Int Literal
                                 PUSH 10
                           POP __rhs
                           POP __lhs
                           ADD __res __lhs __rhs
                           PUSH __res
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char____capacity
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Identifier - size
                           PUSH __main____Vector__char__Vector__size
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char____size
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Array Allocator
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__char____capacity
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                           POP __size
                           MALLOC __ptr __size
                           PUSH __ptr
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char____data
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN __this
         __end__ctor____main____Vector__char____Vector__int:
         // End Constructor Declaration - __ctor____main____Vector__char____Vector__int
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:char:>::pushBack(char) -> void
         JUMP __end__method____main____Vector__char____pushBack__char
         __method____main____Vector__char____pushBack__char:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: val
               STACKGET __main____Vector__char__pushBack__val 1
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Greater Than or Equal to
                           // LHS
                              // Addition
                                 // LHS
                                    // Member Accessor
                                       // LHS
                                          // This keyword
                                             PUSH __this
                                       // RHS
                                          PUSH __field____main____Vector__char____size
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                 // RHS
                                    // Int Literal
                                       PUSH 1
                                 POP __rhs
                                 POP __lhs
                                 ADD __res __lhs __rhs
                                 PUSH __res
                           // RHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__char____capacity
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           POP __rhs
                           POP __lhs
                           GE __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__27
                     // Body
                        //------------------------------------------------
                        // Code Block
                           // Assignment - '='
                              // RHS
                                 // Multiplication
                                    // LHS
                                       // Member Accessor
                                          // LHS
                                             // This keyword
                                                PUSH __this
                                          // RHS
                                             PUSH __field____main____Vector__char____capacity
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    // RHS
                                       // Int Literal
                                          PUSH 2
                                    POP __rhs
                                    POP __lhs
                                    MULTIPLY __res __lhs __rhs
                                    PUSH __res
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__char____capacity
                                    POP __child
                                    POP __parent
                                    POP __rhs
                              ASSIGN __parent[__child] __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           // Assignment - '='
                              // RHS
                                 // Array Allocator
                                    // Member Accessor
                                       // LHS
                                          // This keyword
                                             PUSH __this
                                       // RHS
                                          PUSH __field____main____Vector__char____capacity
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                    POP __size
                                    MALLOC __ptr __size
                                    PUSH __ptr
                              // LHS
                                 // Variable Declaration
                                    ASSIGN __main____Vector__char__pushBack__block__26__if__27__block__28__nData 0
                              POP __rhs
                              ASSIGN __main____Vector__char__pushBack__block__26__if__27__block__28__nData __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           //---------------------------------------------
                           // For-Loop
                           // Init
                              // Assignment - '='
                                 // RHS
                                    // Int Literal
                                       PUSH 0
                                 // LHS
                                    // Variable Declaration
                                       ASSIGN __main____Vector__char__pushBack__block__26__if__27__block__28__for__29__i 0
                                 POP __rhs
                                 ASSIGN __main____Vector__char__pushBack__block__26__if__27__block__28__for__29__i __rhs
                                 PUSH __rhs
                           JUMP __forcond__29
                           __for__29:
                              // Update
                                 // Pre-Increment
                                    // RHS
                                       // Identifier - i
                                          PUSH __main____Vector__char__pushBack__block__26__if__27__block__28__for__29__i
                                    POP __rhs
                                    ADD __main____Vector__char__pushBack__block__26__if__27__block__28__for__29__i __main____Vector__char__pushBack__block__26__if__27__block__28__for__29__i 1
                                    ASSIGN __res __main____Vector__char__pushBack__block__26__if__27__block__28__for__29__i
                                    PUSH __res
                              __forcond__29:
                              // Condition
                                 // Less Than
                                    // LHS
                                       // Identifier - i
                                          PUSH __main____Vector__char__pushBack__block__26__if__27__block__28__for__29__i
                                    // RHS
                                       // Member Accessor
                                          // LHS
                                             // This keyword
                                                PUSH __this
                                          // RHS
                                             PUSH __field____main____Vector__char____size
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    POP __rhs
                                    POP __lhs
                                    LT __res __lhs __rhs
                                    PUSH __res
                                 POP __cond
                                 CMP __cond 0
                                 JEQ __endfor__29
                              // Body
                                 //---------------------------------------
                                 // Code Block
                                    // Assignment - '='
                                       // RHS
                                          // Subscript
                                             // LHS
                                                // Member Accessor
                                                   // LHS
                                                      // This keyword
                                                         PUSH __this
                                                   // RHS
                                                      PUSH __field____main____Vector__char____data
                                                   POP __child
                                                   POP __parent
                                                   PUSH __parent[__child]
                                             // OFFSET
                                                // Identifier - i
                                                   PUSH __main____Vector__char__pushBack__block__26__if__27__block__28__for__29__i
                                             POP __offset
                                             POP __pointer
                                             PUSH __pointer[__offset]
                                       // LHS
                                          // Subscript assignment
                                             // LHS
                                                // Identifier - nData
                                                   PUSH __main____Vector__char__pushBack__block__26__if__27__block__28__nData
                                             // OFFSET
                                                // Identifier - i
                                                   PUSH __main____Vector__char__pushBack__block__26__if__27__block__28__for__29__i
                                             POP __offset
                                             POP __pointer
                                       POP __rhs
                                       ASSIGN __pointer[__offset] __rhs
                                       PUSH __rhs
                                    // Statement results can be ignored
                                    POP __void
                                 //---------------------------------------
                              // Repeat
                              JUMP __for__29
                              // End of For
                              __endfor__29:
                           //---------------------------------------------
                           // Free Operator
                              // RHS
                                 // Member Accessor
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__char____data
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              // Free array
                              POP __array
                              FREE __array
                              PUSH __array
                           // Statement results can be ignored
                           POP __void
                           // Assignment - '='
                              // RHS
                                 // Identifier - nData
                                    PUSH __main____Vector__char__pushBack__block__26__if__27__block__28__nData
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__char____data
                                    POP __child
                                    POP __parent
                                    POP __rhs
                              ASSIGN __parent[__child] __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                        //------------------------------------------------
                     JUMP __endif__27
                     // End of if
                     __endif__27:
                  //------------------------------------------------------
                  // Assignment - '='
                     // RHS
                        // Identifier - val
                           PUSH __main____Vector__char__pushBack__val
                     // LHS
                        // Subscript assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__char____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // OFFSET
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__char____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           POP __offset
                           POP __pointer
                     POP __rhs
                     ASSIGN __pointer[__offset] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Pre-Increment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char____size
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     POP __rhs
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__char____size
                           POP __child
                           POP __parent
                           ADD __parent[__child] __parent[__child] 1
                           ASSIGN __res __parent[__child]
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__char____pushBack__char:
         // End Method Declaration - __method____main____Vector__char____pushBack__char
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:char:>::popBack() -> char
         JUMP __end__method____main____Vector__char____popBack
         __method____main____Vector__char____popBack:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__char____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Pre-Decrement
                              // RHS
                                 // Member Accessor
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__char____size
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              POP __rhs
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__char____size
                                    POP __child
                                    POP __parent
                                    SUBTRACT __parent[__child] __parent[__child] 1
                                    ASSIGN __res __parent[__child]
                              PUSH __res
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__char____popBack:
         // End Method Declaration - __method____main____Vector__char____popBack
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:char:>::clear() -> void
         JUMP __end__method____main____Vector__char____clear
         __method____main____Vector__char____clear:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // While-Loop
                  __while__33:
                     // Condition
                        // Greater Than
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__char____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              // Int Literal
                                 PUSH 0
                           POP __rhs
                           POP __lhs
                           GT __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endwhile__33
                     // Body
                        // Method Call - Vector<:char:>::popBack() -> char
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                           // Arguments
                           POP __obj
                           // Pushing args in reverse order
                           PUSH __obj
                           CALL __method____main____Vector__char____popBack
                           POP __void
                           // Remove args
                           RESPONSE __retval
                           PUSH __retval
                        // Statement results can be ignored
                        POP __void
                     JUMP __while__33
                     // End of While
                     __endwhile__33:
                  //------------------------------------------------------
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__char____clear:
         // End Method Declaration - __method____main____Vector__char____clear
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:char:>::get(int) -> char
         JUMP __end__method____main____Vector__char____get__int
         __method____main____Vector__char____get__int:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: index
               STACKGET __main____Vector__char__get__index 1
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__char____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Identifier - index
                              PUSH __main____Vector__char__get__index
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__char____get__int:
         // End Method Declaration - __method____main____Vector__char____get__int
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:char:>::set(int, char) -> void
         JUMP __end__method____main____Vector__char____set__int__char
         __method____main____Vector__char____set__int__char:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: index
               STACKGET __main____Vector__char__set__index 1
               // Param: value
               STACKGET __main____Vector__char__set__value 2
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Identifier - value
                           PUSH __main____Vector__char__set__value
                     // LHS
                        // Subscript assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__char____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // OFFSET
                              // Identifier - index
                                 PUSH __main____Vector__char__set__index
                           POP __offset
                           POP __pointer
                     POP __rhs
                     ASSIGN __pointer[__offset] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__char____set__int__char:
         // End Method Declaration - __method____main____Vector__char____set__int__char
         //---------------------------------------------------------------

      __endclass____main____Vector__char:
      // End Class Declaration - __main____Vector__char
      //==================================================================

// End Class Template - 
//========================================================================

//========================================================================
// Function Template - 
   // Instances:
// End Function Template - 
//========================================================================

//========================================================================
// Function Template - 
   // Instances:
// End Function Template - 
//========================================================================

//========================================================================
// Function Declaration - strlen(char[]) -> int
JUMP __end____main____strlen__char__1
__main____strlen__char__1:
   // Parameters
      // Param: str
      STACKGET __main__strlen__str 0
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Equal
                  // LHS
                     // Identifier - str
                        PUSH __main__strlen__str
                  // RHS
                     // Null Literal
                        ASSIGN __null 0
                        PUSH __null
                  POP __rhs
                  POP __lhs
                  EQUAL __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__37
            // Body
               // Return
                  // Negative
                     // RHS
                        // Int Literal
                           PUSH 1
                     POP __rhs
                     SUBTRACT __res 0 __rhs
                     PUSH __res
                  POP __rVal
                  RETURN __rVal
            JUMP __endif__37
            // End of if
            __endif__37:
         //---------------------------------------------------------------
         // Assignment - '='
            // RHS
               // Int Literal
                  PUSH 0
            // LHS
               // Variable Declaration
                  ASSIGN __main__strlen__block__36__size 0
            POP __rhs
            ASSIGN __main__strlen__block__36__size __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // While-Loop
         __while__38:
            // Condition
               // Not Equal
                  // LHS
                     // Subscript
                        // LHS
                           // Identifier - str
                              PUSH __main__strlen__str
                        // OFFSET
                           // Post-Increment
                              ASSIGN __res __main__strlen__block__36__size
                              ADD __main__strlen__block__36__size __main__strlen__block__36__size 1
                              PUSH __res
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                  // RHS
                     // Char Literal
                        PUSH '\0'
                  POP __rhs
                  POP __lhs
                  NEQUAL __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endwhile__38
            // Body
            JUMP __while__38
            // End of While
            __endwhile__38:
         //---------------------------------------------------------------
         // Return
            // Subtraction
               // LHS
                  // Identifier - size
                     PUSH __main__strlen__block__36__size
               // RHS
                  // Int Literal
                     PUSH 1
               POP __rhs
               POP __lhs
               SUBTRACT __res __lhs __rhs
               PUSH __res
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____strlen__char__1:
// End Function Declaration - __main____strlen__char__1
//========================================================================

//========================================================================
// Function Declaration - strcmp(char[], char[]) -> int
JUMP __end____main____strcmp__char__1__char__1
__main____strcmp__char__1__char__1:
   // Parameters
      // Param: a
      STACKGET __main__strcmp__a 0
      // Param: b
      STACKGET __main__strcmp__b 1
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Assignment - '='
            // RHS
               // Function Call - strlen(char[]) -> int
                  // Arguments
                     // Identifier - a
                        PUSH __main__strcmp__a
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** strlen
                  CALL __main____strlen__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__strcmp__block__39__asize 0
            POP __rhs
            ASSIGN __main__strcmp__block__39__asize __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Function Call - strlen(char[]) -> int
                  // Arguments
                     // Identifier - b
                        PUSH __main__strcmp__b
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** strlen
                  CALL __main____strlen__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__strcmp__block__39__bsize 0
            POP __rhs
            ASSIGN __main__strcmp__block__39__bsize __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Not Equal
                  // LHS
                     // Identifier - asize
                        PUSH __main__strcmp__block__39__asize
                  // RHS
                     // Identifier - bsize
                        PUSH __main__strcmp__block__39__bsize
                  POP __rhs
                  POP __lhs
                  NEQUAL __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__40
            // Body
               // Return
                  // Int Literal
                     PUSH 0
                  POP __rVal
                  RETURN __rVal
            JUMP __endif__40
            // End of if
            __endif__40:
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // For-Loop
         // Init
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Variable Declaration
                     ASSIGN __main__strcmp__block__39__for__41__i 0
               POP __rhs
               ASSIGN __main__strcmp__block__39__for__41__i __rhs
               PUSH __rhs
         JUMP __forcond__41
         __for__41:
            // Update
               // Pre-Increment
                  // RHS
                     // Identifier - i
                        PUSH __main__strcmp__block__39__for__41__i
                  POP __rhs
                  ADD __main__strcmp__block__39__for__41__i __main__strcmp__block__39__for__41__i 1
                  ASSIGN __res __main__strcmp__block__39__for__41__i
                  PUSH __res
            __forcond__41:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - i
                        PUSH __main__strcmp__block__39__for__41__i
                  // RHS
                     // Identifier - asize
                        PUSH __main__strcmp__block__39__asize
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endfor__41
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Not Equal
                           // LHS
                              // Subscript
                                 // LHS
                                    // Identifier - a
                                       PUSH __main__strcmp__a
                                 // OFFSET
                                    // Identifier - i
                                       PUSH __main__strcmp__block__39__for__41__i
                                 POP __offset
                                 POP __pointer
                                 PUSH __pointer[__offset]
                           // RHS
                              // Subscript
                                 // LHS
                                    // Identifier - b
                                       PUSH __main__strcmp__b
                                 // OFFSET
                                    // Identifier - i
                                       PUSH __main__strcmp__block__39__for__41__i
                                 POP __offset
                                 POP __pointer
                                 PUSH __pointer[__offset]
                           POP __rhs
                           POP __lhs
                           NEQUAL __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__43
                     // Body
                        //------------------------------------------------
                        // Code Block
                           // Return
                              // Int Literal
                                 PUSH 0
                              POP __rVal
                              RETURN __rVal
                        //------------------------------------------------
                     JUMP __endif__43
                     // End of if
                     __endif__43:
                  //------------------------------------------------------
               //---------------------------------------------------------
            // Repeat
            JUMP __for__41
            // End of For
            __endfor__41:
         //---------------------------------------------------------------
         // Return
            // Int Literal
               PUSH 1
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____strcmp__char__1__char__1:
// End Function Declaration - __main____strcmp__char__1__char__1
//========================================================================

//========================================================================
// Function Declaration - substr(char[], int, int) -> char[]
JUMP __end____main____substr__char__1__int__int
__main____substr__char__1__int__int:
   // Parameters
      // Param: a
      STACKGET __main__substr__a 0
      // Param: start
      STACKGET __main__substr__start 1
      // Param: end
      STACKGET __main__substr__end 2
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Assignment - '='
            // RHS
               // Array Allocator
                  // Addition
                     // LHS
                        // Subtraction
                           // LHS
                              // Identifier - end
                                 PUSH __main__substr__end
                           // RHS
                              // Identifier - start
                                 PUSH __main__substr__start
                           POP __rhs
                           POP __lhs
                           SUBTRACT __res __lhs __rhs
                           PUSH __res
                     // RHS
                        // Int Literal
                           PUSH 1
                     POP __rhs
                     POP __lhs
                     ADD __res __lhs __rhs
                     PUSH __res
                  POP __size
                  MALLOC __ptr __size
                  PUSH __ptr
            // LHS
               // Variable Declaration
                  ASSIGN __main__substr__block__45__res 0
            POP __rhs
            ASSIGN __main__substr__block__45__res __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // For-Loop
         // Init
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Variable Declaration
                     ASSIGN __main__substr__block__45__for__46__i 0
               POP __rhs
               ASSIGN __main__substr__block__45__for__46__i __rhs
               PUSH __rhs
         JUMP __forcond__46
         __for__46:
            // Update
               // Pre-Increment
                  // RHS
                     // Identifier - i
                        PUSH __main__substr__block__45__for__46__i
                  POP __rhs
                  ADD __main__substr__block__45__for__46__i __main__substr__block__45__for__46__i 1
                  ASSIGN __res __main__substr__block__45__for__46__i
                  PUSH __res
            __forcond__46:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - i
                        PUSH __main__substr__block__45__for__46__i
                  // RHS
                     // Subtraction
                        // LHS
                           // Identifier - end
                              PUSH __main__substr__end
                        // RHS
                           // Identifier - start
                              PUSH __main__substr__start
                        POP __rhs
                        POP __lhs
                        SUBTRACT __res __lhs __rhs
                        PUSH __res
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endfor__46
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Subscript
                           // LHS
                              // Identifier - a
                                 PUSH __main__substr__a
                           // OFFSET
                              // Addition
                                 // LHS
                                    // Identifier - i
                                       PUSH __main__substr__block__45__for__46__i
                                 // RHS
                                    // Identifier - start
                                       PUSH __main__substr__start
                                 POP __rhs
                                 POP __lhs
                                 ADD __res __lhs __rhs
                                 PUSH __res
                           POP __offset
                           POP __pointer
                           PUSH __pointer[__offset]
                     // LHS
                        // Subscript assignment
                           // LHS
                              // Identifier - res
                                 PUSH __main__substr__block__45__res
                           // OFFSET
                              // Identifier - i
                                 PUSH __main__substr__block__45__for__46__i
                           POP __offset
                           POP __pointer
                     POP __rhs
                     ASSIGN __pointer[__offset] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            // Repeat
            JUMP __for__46
            // End of For
            __endfor__46:
         //---------------------------------------------------------------
         // Assignment - '='
            // RHS
               // Char Literal
                  PUSH '\0'
            // LHS
               // Subscript assignment
                  // LHS
                     // Identifier - res
                        PUSH __main__substr__block__45__res
                  // OFFSET
                     // Subtraction
                        // LHS
                           // Identifier - end
                              PUSH __main__substr__end
                        // RHS
                           // Identifier - start
                              PUSH __main__substr__start
                        POP __rhs
                        POP __lhs
                        SUBTRACT __res __lhs __rhs
                        PUSH __res
                  POP __offset
                  POP __pointer
            POP __rhs
            ASSIGN __pointer[__offset] __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Return
            // Identifier - res
               PUSH __main__substr__block__45__res
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____substr__char__1__int__int:
// End Function Declaration - __main____substr__char__1__int__int
//========================================================================

//========================================================================
// Function Declaration - first_index_of(char[], char) -> int
JUMP __end____main____first_index_of__char__1__char
__main____first_index_of__char__1__char:
   // Parameters
      // Param: arr
      STACKGET __main__first_index_of__arr 0
      // Param: c
      STACKGET __main__first_index_of__c 1
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Assignment - '='
            // RHS
               // Function Call - strlen(char[]) -> int
                  // Arguments
                     // Identifier - arr
                        PUSH __main__first_index_of__arr
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** strlen
                  CALL __main____strlen__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__first_index_of__block__48__size 0
            POP __rhs
            ASSIGN __main__first_index_of__block__48__size __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // For-Loop
         // Init
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Variable Declaration
                     ASSIGN __main__first_index_of__block__48__for__49__i 0
               POP __rhs
               ASSIGN __main__first_index_of__block__48__for__49__i __rhs
               PUSH __rhs
         JUMP __forcond__49
         __for__49:
            // Update
               // Pre-Increment
                  // RHS
                     // Identifier - i
                        PUSH __main__first_index_of__block__48__for__49__i
                  POP __rhs
                  ADD __main__first_index_of__block__48__for__49__i __main__first_index_of__block__48__for__49__i 1
                  ASSIGN __res __main__first_index_of__block__48__for__49__i
                  PUSH __res
            __forcond__49:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - i
                        PUSH __main__first_index_of__block__48__for__49__i
                  // RHS
                     // Identifier - size
                        PUSH __main__first_index_of__block__48__size
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endfor__49
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Equal
                           // LHS
                              // Subscript
                                 // LHS
                                    // Identifier - arr
                                       PUSH __main__first_index_of__arr
                                 // OFFSET
                                    // Identifier - i
                                       PUSH __main__first_index_of__block__48__for__49__i
                                 POP __offset
                                 POP __pointer
                                 PUSH __pointer[__offset]
                           // RHS
                              // Identifier - c
                                 PUSH __main__first_index_of__c
                           POP __rhs
                           POP __lhs
                           EQUAL __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__51
                     // Body
                        // Return
                           // Identifier - i
                              PUSH __main__first_index_of__block__48__for__49__i
                           POP __rVal
                           RETURN __rVal
                     JUMP __endif__51
                     // End of if
                     __endif__51:
                  //------------------------------------------------------
               //---------------------------------------------------------
            // Repeat
            JUMP __for__49
            // End of For
            __endfor__49:
         //---------------------------------------------------------------
         // Return
            // Negative
               // RHS
                  // Int Literal
                     PUSH 1
               POP __rhs
               SUBTRACT __res 0 __rhs
               PUSH __res
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____first_index_of__char__1__char:
// End Function Declaration - __main____first_index_of__char__1__char
//========================================================================

//========================================================================
// Function Declaration - split(char[], char) -> Vector<:char[]:>
JUMP __end____main____split__char__1__char
__main____split__char__1__char:
   // Parameters
      // Param: str
      STACKGET __main__split__str 0
      // Param: delim
      STACKGET __main__split__delim 1
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Assignment - '='
            // RHS
               // Constructor Call - Vector<:char[]:>::Vector() -> Vector<:char[]:>
                  // Arguments
                  // Pushing args in reverse order
                  CALL __ctor____main____Vector__char__1____Vector
                  // Remove args
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__split__block__52__tokens 0
            POP __rhs
            ASSIGN __main__split__block__52__tokens __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Function Call - strlen(char[]) -> int
                  // Arguments
                     // Identifier - str
                        PUSH __main__split__str
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** strlen
                  CALL __main____strlen__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__split__block__52__size 0
            POP __rhs
            ASSIGN __main__split__block__52__size __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Int Literal
                  PUSH 0
            // LHS
               // Variable Declaration
                  ASSIGN __main__split__block__52__i 0
            POP __rhs
            ASSIGN __main__split__block__52__i __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Int Literal
                  PUSH 0
            // LHS
               // Variable Declaration
                  ASSIGN __main__split__block__52__j 0
            POP __rhs
            ASSIGN __main__split__block__52__j __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // While-Loop
         __while__53:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - i
                        PUSH __main__split__block__52__i
                  // RHS
                     // Identifier - size
                        PUSH __main__split__block__52__size
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endwhile__53
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Not Equal
                           // LHS
                              // Subscript
                                 // LHS
                                    // Identifier - str
                                       PUSH __main__split__str
                                 // OFFSET
                                    // Identifier - i
                                       PUSH __main__split__block__52__i
                                 POP __offset
                                 POP __pointer
                                 PUSH __pointer[__offset]
                           // RHS
                              // Identifier - delim
                                 PUSH __main__split__delim
                           POP __rhs
                           POP __lhs
                           NEQUAL __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__55
                     // Body
                        //------------------------------------------------
                        // Code Block
                           // Assignment - '='
                              // RHS
                                 // Int Literal
                                    PUSH 0
                              // LHS
                                 // Variable Declaration
                                    ASSIGN __main__split__block__52__while__53__block__54__if__55__block__56__count 0
                              POP __rhs
                              ASSIGN __main__split__block__52__while__53__block__54__if__55__block__56__count __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           // Assignment - '='
                              // RHS
                                 // Identifier - i
                                    PUSH __main__split__block__52__i
                              // LHS
                                 // Variable Declaration
                                    ASSIGN __main__split__block__52__while__53__block__54__if__55__block__56__k 0
                              POP __rhs
                              ASSIGN __main__split__block__52__while__53__block__54__if__55__block__56__k __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           //---------------------------------------------
                           // While-Loop
                           __while__57:
                              // Condition
                                 // Less Than
                                    // LHS
                                       // Identifier - k
                                          PUSH __main__split__block__52__while__53__block__54__if__55__block__56__k
                                    // RHS
                                       // Identifier - size
                                          PUSH __main__split__block__52__size
                                    POP __rhs
                                    POP __lhs
                                    LT __res __lhs __rhs
                                    PUSH __res
                                 POP __cond
                                 CMP __cond 0
                                 JEQ __endwhile__57
                              // Body
                                 //---------------------------------------
                                 // If-Statement
                                    // Condition
                                       // Not Equal
                                          // LHS
                                             // Subscript
                                                // LHS
                                                   // Identifier - str
                                                      PUSH __main__split__str
                                                // OFFSET
                                                   // Post-Increment
                                                      ASSIGN __res __main__split__block__52__while__53__block__54__if__55__block__56__k
                                                      ADD __main__split__block__52__while__53__block__54__if__55__block__56__k __main__split__block__52__while__53__block__54__if__55__block__56__k 1
                                                      PUSH __res
                                                POP __offset
                                                POP __pointer
                                                PUSH __pointer[__offset]
                                          // RHS
                                             // Identifier - delim
                                                PUSH __main__split__delim
                                          POP __rhs
                                          POP __lhs
                                          NEQUAL __res __lhs __rhs
                                          PUSH __res
                                       POP __cond
                                       CMP __cond 0
                                       JEQ __else__58
                                    // Body
                                       // Pre-Increment
                                          // RHS
                                             // Identifier - count
                                                PUSH __main__split__block__52__while__53__block__54__if__55__block__56__count
                                          POP __rhs
                                          ADD __main__split__block__52__while__53__block__54__if__55__block__56__count __main__split__block__52__while__53__block__54__if__55__block__56__count 1
                                          ASSIGN __res __main__split__block__52__while__53__block__54__if__55__block__56__count
                                          PUSH __res
                                       // Statement results can be ignored
                                       POP __void
                                    JUMP __endif__58
                                    //------------------------------------
                                    // Else-Statement
                                    __else__58:
                                    // Break out of __while__57
                                    JUMP __endwhile__57
                                    //------------------------------------
                                    // End of if
                                    __endif__58:
                                 //---------------------------------------
                              JUMP __while__57
                              // End of While
                              __endwhile__57:
                           //---------------------------------------------
                           // Method Call - Vector<:char[]:>::pushBack(char[]) -> void
                              // LHS
                                 // Identifier - tokens
                                    PUSH __main__split__block__52__tokens
                              // RHS
                              // Arguments
                                 // Array Allocator
                                    // Addition
                                       // LHS
                                          // Identifier - count
                                             PUSH __main__split__block__52__while__53__block__54__if__55__block__56__count
                                       // RHS
                                          // Int Literal
                                             PUSH 1
                                       POP __rhs
                                       POP __lhs
                                       ADD __res __lhs __rhs
                                       PUSH __res
                                    POP __size
                                    MALLOC __ptr __size
                                    PUSH __ptr
                                 POP __arg0
                              POP __obj
                              // Pushing args in reverse order
                              PUSH __arg0
                              PUSH __obj
                              CALL __method____main____Vector__char__1____pushBack__char__1
                              POP __void
                              // Remove args
                              POP __void
                              RESPONSE __retval
                              PUSH __retval
                           // Statement results can be ignored
                           POP __void
                           //---------------------------------------------
                           // For-Loop
                           // Init
                              // Assignment - '='
                                 // RHS
                                    // Int Literal
                                       PUSH 0
                                 // LHS
                                    // Variable Declaration
                                       ASSIGN __main__split__block__52__while__53__block__54__if__55__block__56__for__59__k 0
                                 POP __rhs
                                 ASSIGN __main__split__block__52__while__53__block__54__if__55__block__56__for__59__k __rhs
                                 PUSH __rhs
                           JUMP __forcond__59
                           __for__59:
                              // Update
                                 // Pre-Increment
                                    // RHS
                                       // Identifier - k
                                          PUSH __main__split__block__52__while__53__block__54__if__55__block__56__for__59__k
                                    POP __rhs
                                    ADD __main__split__block__52__while__53__block__54__if__55__block__56__for__59__k __main__split__block__52__while__53__block__54__if__55__block__56__for__59__k 1
                                    ASSIGN __res __main__split__block__52__while__53__block__54__if__55__block__56__for__59__k
                                    PUSH __res
                              __forcond__59:
                              // Condition
                                 // Less Than
                                    // LHS
                                       // Identifier - k
                                          PUSH __main__split__block__52__while__53__block__54__if__55__block__56__for__59__k
                                    // RHS
                                       // Identifier - count
                                          PUSH __main__split__block__52__while__53__block__54__if__55__block__56__count
                                    POP __rhs
                                    POP __lhs
                                    LT __res __lhs __rhs
                                    PUSH __res
                                 POP __cond
                                 CMP __cond 0
                                 JEQ __endfor__59
                              // Body
                                 //---------------------------------------
                                 // Code Block
                                    // Assignment - '='
                                       // RHS
                                          // Subscript
                                             // LHS
                                                // Identifier - str
                                                   PUSH __main__split__str
                                             // OFFSET
                                                // Post-Increment
                                                   ASSIGN __res __main__split__block__52__i
                                                   ADD __main__split__block__52__i __main__split__block__52__i 1
                                                   PUSH __res
                                             POP __offset
                                             POP __pointer
                                             PUSH __pointer[__offset]
                                       // LHS
                                          // Subscript assignment
                                             // LHS
                                                // Subscript
                                                   // LHS
                                                      // Member Accessor
                                                         // LHS
                                                            // Identifier - tokens
                                                               PUSH __main__split__block__52__tokens
                                                         // RHS
                                                            PUSH __field____main____Vector__char__1____data
                                                         POP __child
                                                         POP __parent
                                                         PUSH __parent[__child]
                                                   // OFFSET
                                                      // Identifier - j
                                                         PUSH __main__split__block__52__j
                                                   POP __offset
                                                   POP __pointer
                                                   PUSH __pointer[__offset]
                                             // OFFSET
                                                // Identifier - k
                                                   PUSH __main__split__block__52__while__53__block__54__if__55__block__56__for__59__k
                                             POP __offset
                                             POP __pointer
                                       POP __rhs
                                       ASSIGN __pointer[__offset] __rhs
                                       PUSH __rhs
                                    // Statement results can be ignored
                                    POP __void
                                 //---------------------------------------
                              // Repeat
                              JUMP __for__59
                              // End of For
                              __endfor__59:
                           //---------------------------------------------
                           // Assignment - '='
                              // RHS
                                 // Char Literal
                                    PUSH '\0'
                              // LHS
                                 // Subscript assignment
                                    // LHS
                                       // Subscript
                                          // LHS
                                             // Member Accessor
                                                // LHS
                                                   // Identifier - tokens
                                                      PUSH __main__split__block__52__tokens
                                                // RHS
                                                   PUSH __field____main____Vector__char__1____data
                                                POP __child
                                                POP __parent
                                                PUSH __parent[__child]
                                          // OFFSET
                                             // Identifier - j
                                                PUSH __main__split__block__52__j
                                          POP __offset
                                          POP __pointer
                                          PUSH __pointer[__offset]
                                    // OFFSET
                                       // Identifier - count
                                          PUSH __main__split__block__52__while__53__block__54__if__55__block__56__count
                                    POP __offset
                                    POP __pointer
                              POP __rhs
                              ASSIGN __pointer[__offset] __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           // Pre-Increment
                              // RHS
                                 // Identifier - j
                                    PUSH __main__split__block__52__j
                              POP __rhs
                              ADD __main__split__block__52__j __main__split__block__52__j 1
                              ASSIGN __res __main__split__block__52__j
                              PUSH __res
                           // Statement results can be ignored
                           POP __void
                        //------------------------------------------------
                     JUMP __endif__55
                     // End of if
                     __endif__55:
                  //------------------------------------------------------
                  // Pre-Increment
                     // RHS
                        // Identifier - i
                           PUSH __main__split__block__52__i
                     POP __rhs
                     ADD __main__split__block__52__i __main__split__block__52__i 1
                     ASSIGN __res __main__split__block__52__i
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            JUMP __while__53
            // End of While
            __endwhile__53:
         //---------------------------------------------------------------
         // Return
            // Identifier - tokens
               PUSH __main__split__block__52__tokens
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____split__char__1__char:
// End Function Declaration - __main____split__char__1__char
//========================================================================

//========================================================================
// Function Declaration - max(int, int) -> int
JUMP __end____main____max__int__int
__main____max__int__int:
   // Parameters
      // Param: a
      STACKGET __main__max__a 0
      // Param: b
      STACKGET __main__max__b 1
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Greater Than or Equal to
                  // LHS
                     // Identifier - a
                        PUSH __main__max__a
                  // RHS
                     // Identifier - b
                        PUSH __main__max__b
                  POP __rhs
                  POP __lhs
                  GE __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__62
            // Body
               // Return
                  // Identifier - a
                     PUSH __main__max__a
                  POP __rVal
                  RETURN __rVal
            JUMP __endif__62
            // End of if
            __endif__62:
         //---------------------------------------------------------------
         // Return
            // Identifier - b
               PUSH __main__max__b
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____max__int__int:
// End Function Declaration - __main____max__int__int
//========================================================================

//========================================================================
// Function Declaration - max(float, float) -> float
JUMP __end____main____max__float__float
__main____max__float__float:
   // Parameters
      // Param: a
      STACKGET __main__max__a 0
      // Param: b
      STACKGET __main__max__b 1
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Greater Than or Equal to
                  // LHS
                     // Identifier - a
                        PUSH __main__max__a
                  // RHS
                     // Identifier - b
                        PUSH __main__max__b
                  POP __rhs
                  POP __lhs
                  GE __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__64
            // Body
               // Return
                  // Identifier - a
                     PUSH __main__max__a
                  POP __rVal
                  RETURN __rVal
            JUMP __endif__64
            // End of if
            __endif__64:
         //---------------------------------------------------------------
         // Return
            // Identifier - b
               PUSH __main__max__b
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____max__float__float:
// End Function Declaration - __main____max__float__float
//========================================================================

//========================================================================
// Function Declaration - min(int, int) -> int
JUMP __end____main____min__int__int
__main____min__int__int:
   // Parameters
      // Param: a
      STACKGET __main__min__a 0
      // Param: b
      STACKGET __main__min__b 1
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Less Than or Equal to
                  // LHS
                     // Identifier - a
                        PUSH __main__min__a
                  // RHS
                     // Identifier - b
                        PUSH __main__min__b
                  POP __rhs
                  POP __lhs
                  LE __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__66
            // Body
               // Return
                  // Identifier - a
                     PUSH __main__min__a
                  POP __rVal
                  RETURN __rVal
            JUMP __endif__66
            // End of if
            __endif__66:
         //---------------------------------------------------------------
         // Return
            // Identifier - b
               PUSH __main__min__b
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____min__int__int:
// End Function Declaration - __main____min__int__int
//========================================================================

//========================================================================
// Function Declaration - min(float, float) -> float
JUMP __end____main____min__float__float
__main____min__float__float:
   // Parameters
      // Param: a
      STACKGET __main__min__a 0
      // Param: b
      STACKGET __main__min__b 1
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Less Than or Equal to
                  // LHS
                     // Identifier - a
                        PUSH __main__min__a
                  // RHS
                     // Identifier - b
                        PUSH __main__min__b
                  POP __rhs
                  POP __lhs
                  LE __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__68
            // Body
               // Return
                  // Identifier - a
                     PUSH __main__min__a
                  POP __rVal
                  RETURN __rVal
            JUMP __endif__68
            // End of if
            __endif__68:
         //---------------------------------------------------------------
         // Return
            // Identifier - b
               PUSH __main__min__b
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____min__float__float:
// End Function Declaration - __main____min__float__float
//========================================================================

//========================================================================
// Function Declaration - abs(int) -> int
JUMP __end____main____abs__int
__main____abs__int:
   // Parameters
      // Param: v
      STACKGET __main__abs__v 0
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Less Than
                  // LHS
                     // Identifier - v
                        PUSH __main__abs__v
                  // RHS
                     // Int Literal
                        PUSH 0
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__70
            // Body
               // Return
                  // Negative
                     // RHS
                        // Identifier - v
                           PUSH __main__abs__v
                     POP __rhs
                     SUBTRACT __res 0 __rhs
                     PUSH __res
                  POP __rVal
                  RETURN __rVal
            JUMP __endif__70
            // End of if
            __endif__70:
         //---------------------------------------------------------------
         // Return
            // Identifier - v
               PUSH __main__abs__v
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____abs__int:
// End Function Declaration - __main____abs__int
//========================================================================

//========================================================================
// Function Declaration - abs(float) -> float
JUMP __end____main____abs__float
__main____abs__float:
   // Parameters
      // Param: v
      STACKGET __main__abs__v 0
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Less Than
                  // LHS
                     // Identifier - v
                        PUSH __main__abs__v
                  // RHS
                     // Float Literal
                        PUSH 0.0
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__72
            // Body
               // Return
                  // Negative
                     // RHS
                        // Identifier - v
                           PUSH __main__abs__v
                     POP __rhs
                     SUBTRACT __res 0 __rhs
                     PUSH __res
                  POP __rVal
                  RETURN __rVal
            JUMP __endif__72
            // End of if
            __endif__72:
         //---------------------------------------------------------------
         // Return
            // Identifier - v
               PUSH __main__abs__v
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____abs__float:
// End Function Declaration - __main____abs__float
//========================================================================

//========================================================================
// Class Template - 
   // Instances:
// End Class Template - 
//========================================================================

//========================================================================
// Class Template - 
   // Instances:
// End Class Template - 
//========================================================================

//========================================================================
// Function Template - 
   // Instances:
// End Function Template - 
//========================================================================

//========================================================================
// Function Template - 
   // Instances:
// End Function Template - 
//========================================================================

// Assignment - '='
   // RHS
      // Function Call - input() -> char[]
         // Arguments
         // Pushing args in reverse order
         // *** input
         CALL __builtin__input
         // Remove args
         RESPONSE __retval
         PUSH __retval
   // LHS
      // Variable Declaration
         ASSIGN __main__line 0
   POP __rhs
   ASSIGN __main__line __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Assignment - '='
   // RHS
      // Constructor Call - Vector<:char[]:>::Vector() -> Vector<:char[]:>
         // Arguments
         // Pushing args in reverse order
         CALL __ctor____main____Vector__char__1____Vector
         // Remove args
         RESPONSE __retval
         PUSH __retval
   // LHS
      // Variable Declaration
         ASSIGN __main__lines 0
   POP __rhs
   ASSIGN __main__lines __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
//------------------------------------------------------------------------
// While-Loop
__while__73:
   // Condition
      // Not Equal
         // LHS
            // Identifier - line
               PUSH __main__line
         // RHS
            // Null Literal
               ASSIGN __null 0
               PUSH __null
         POP __rhs
         POP __lhs
         NEQUAL __res __lhs __rhs
         PUSH __res
      POP __cond
      CMP __cond 0
      JEQ __endwhile__73
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Method Call - Vector<:char[]:>::pushBack(char[]) -> void
            // LHS
               // Identifier - lines
                  PUSH __main__lines
            // RHS
            // Arguments
               // Identifier - line
                  PUSH __main__line
               POP __arg0
            POP __obj
            // Pushing args in reverse order
            PUSH __arg0
            PUSH __obj
            CALL __method____main____Vector__char__1____pushBack__char__1
            POP __void
            // Remove args
            POP __void
            RESPONSE __retval
            PUSH __retval
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Function Call - input() -> char[]
                  // Arguments
                  // Pushing args in reverse order
                  // *** input
                  CALL __builtin__input
                  // Remove args
                  RESPONSE __retval
                  PUSH __retval
            POP __rhs
            ASSIGN __main__line __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
      //------------------------------------------------------------------
   JUMP __while__73
   // End of While
   __endwhile__73:
//------------------------------------------------------------------------
//========================================================================
// Class Declaration - __main____Element inherits __builtin____main__Object
   // Creating Dispatch Table
      MALLOC __dtable____main____Element 1
      // Populate Dispatch Table
      ASSIGN __dtable____main____Element[0] __method____main____Element____switch_to_list__Vector
   //---------------------------------------------------------------------
   // Field - int Element::is_list
   ASSIGN __field____main____Element____is_list 1
   //---------------------------------------------------------------------
   //---------------------------------------------------------------------
   // Field - int Element::value
   ASSIGN __field____main____Element____value 2
   //---------------------------------------------------------------------
   //---------------------------------------------------------------------
   // Field - Vector<:Element:> Element::list
   ASSIGN __field____main____Element____list 3
   //---------------------------------------------------------------------
// skip over class methods
JUMP __endclass____main____Element
   //---------------------------------------------------------------------
   // Constructor Declaration - Element::Element(int) -> Element
   JUMP __end__ctor____main____Element____Element__int
   __ctor____main____Element____Element__int:
      // Creating Class Instance
         MALLOC __this 4
         // Add Dispatch Table
         ASSIGN __this[0] __dtable____main____Element
      // Parameters
         // Param: value
         STACKGET __main____Element__Element__value 0
      // Body
         //---------------------------------------------------------------
         // Code Block
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____Element____is_list
                     POP __child
                     POP __parent
                     POP __rhs
               ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
            // Assignment - '='
               // RHS
                  // Identifier - value
                     PUSH __main____Element__Element__value
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____Element____value
                     POP __child
                     POP __parent
                     POP __rhs
               ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
            // Assignment - '='
               // RHS
                  // Null Literal
                     ASSIGN __null 0
                     PUSH __null
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____Element____list
                     POP __child
                     POP __parent
                     POP __rhs
               ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
         //---------------------------------------------------------------
      RETURN __this
   __end__ctor____main____Element____Element__int:
   // End Constructor Declaration - __ctor____main____Element____Element__int
   //---------------------------------------------------------------------

   //---------------------------------------------------------------------
   // Constructor Declaration - Element::Element(Vector<:Element:>) -> Element
   JUMP __end__ctor____main____Element____Element__Vector
   __ctor____main____Element____Element__Vector:
      // Creating Class Instance
         MALLOC __this 4
         // Add Dispatch Table
         ASSIGN __this[0] __dtable____main____Element
      // Parameters
         // Param: list
         STACKGET __main____Element__Element__list 0
      // Body
         //---------------------------------------------------------------
         // Code Block
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 1
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____Element____is_list
                     POP __child
                     POP __parent
                     POP __rhs
               ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____Element____value
                     POP __child
                     POP __parent
                     POP __rhs
               ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
            // Assignment - '='
               // RHS
                  // Identifier - list
                     PUSH __main____Element__Element__list
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____Element____list
                     POP __child
                     POP __parent
                     POP __rhs
               ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
         //---------------------------------------------------------------
      RETURN __this
   __end__ctor____main____Element____Element__Vector:
   // End Constructor Declaration - __ctor____main____Element____Element__Vector
   //---------------------------------------------------------------------

   //---------------------------------------------------------------------
   // Method Declaration - Element::switch_to_list(Vector<:Element:>) -> void
   JUMP __end__method____main____Element____switch_to_list__Vector
   __method____main____Element____switch_to_list__Vector:
      // Class Instance
         STACKGET __this 0
      // Parameters
         // Param: list
         STACKGET __main____Element__switch_to_list__list 1
      // Body
         //---------------------------------------------------------------
         // Code Block
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 1
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____Element____is_list
                     POP __child
                     POP __parent
                     POP __rhs
               ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____Element____value
                     POP __child
                     POP __parent
                     POP __rhs
               ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
            // Assignment - '='
               // RHS
                  // Identifier - list
                     PUSH __main____Element__switch_to_list__list
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____Element____list
                     POP __child
                     POP __parent
                     POP __rhs
               ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
         //---------------------------------------------------------------
      RETURN 0
   __end__method____main____Element____switch_to_list__Vector:
   // End Method Declaration - __method____main____Element____switch_to_list__Vector
   //---------------------------------------------------------------------

__endclass____main____Element:
// End Class Declaration - __main____Element
//========================================================================

//========================================================================
// Function Declaration - print(Element) -> void
JUMP __end____main____print__Element
__main____print__Element:
   // Parameters
      // Param: e
      STACKGET __main__print__e 0
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Member Accessor
                  // LHS
                     // Identifier - e
                        PUSH __main__print__e
                  // RHS
                     PUSH __field____main____Element____is_list
                  POP __child
                  POP __parent
                  PUSH __parent[__child]
               POP __cond
               CMP __cond 0
               JEQ __endif__79
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Function Call - print(char) -> void
                     // Arguments
                        // Char Literal
                           PUSH '['
                        POP __arg0
                     // Pushing args in reverse order
                     PUSH __arg0
                     // *** print
                     CALL __builtin__print__char
                     // Remove args
                     POP __void
                     RESPONSE __retval
                     PUSH __retval
                  // Statement results can be ignored
                  POP __void
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Greater Than
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // Member Accessor
                                       // LHS
                                          // Identifier - e
                                             PUSH __main__print__e
                                       // RHS
                                          PUSH __field____main____Element____list
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                 // RHS
                                    PUSH __field____main____Vector__Element____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              // Int Literal
                                 PUSH 0
                           POP __rhs
                           POP __lhs
                           GT __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__81
                     // Body
                        // Function Call - print(Element) -> void
                           // Arguments
                              // Subscript
                                 // LHS
                                    // Member Accessor
                                       // LHS
                                          // Member Accessor
                                             // LHS
                                                // Identifier - e
                                                   PUSH __main__print__e
                                             // RHS
                                                PUSH __field____main____Element____list
                                             POP __child
                                             POP __parent
                                             PUSH __parent[__child]
                                       // RHS
                                          PUSH __field____main____Vector__Element____data
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                 // OFFSET
                                    // Int Literal
                                       PUSH 0
                                 POP __offset
                                 POP __pointer
                                 PUSH __pointer[__offset]
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg0
                           // *** print
                           CALL __main____print__Element
                           // Remove args
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                        // Statement results can be ignored
                        POP __void
                     JUMP __endif__81
                     // End of if
                     __endif__81:
                  //------------------------------------------------------
                  //------------------------------------------------------
                  // For-Loop
                  // Init
                     // Assignment - '='
                        // RHS
                           // Int Literal
                              PUSH 1
                        // LHS
                           // Variable Declaration
                              ASSIGN __main__print__block__78__if__79__block__80__for__82__i 0
                        POP __rhs
                        ASSIGN __main__print__block__78__if__79__block__80__for__82__i __rhs
                        PUSH __rhs
                  JUMP __forcond__82
                  __for__82:
                     // Update
                        // Pre-Increment
                           // RHS
                              // Identifier - i
                                 PUSH __main__print__block__78__if__79__block__80__for__82__i
                           POP __rhs
                           ADD __main__print__block__78__if__79__block__80__for__82__i __main__print__block__78__if__79__block__80__for__82__i 1
                           ASSIGN __res __main__print__block__78__if__79__block__80__for__82__i
                           PUSH __res
                     __forcond__82:
                     // Condition
                        // Less Than
                           // LHS
                              // Identifier - i
                                 PUSH __main__print__block__78__if__79__block__80__for__82__i
                           // RHS
                              // Member Accessor
                                 // LHS
                                    // Member Accessor
                                       // LHS
                                          // Identifier - e
                                             PUSH __main__print__e
                                       // RHS
                                          PUSH __field____main____Element____list
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                 // RHS
                                    PUSH __field____main____Vector__Element____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           POP __rhs
                           POP __lhs
                           LT __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endfor__82
                     // Body
                        //------------------------------------------------
                        // Code Block
                           // Function Call - print(char) -> void
                              // Arguments
                                 // Char Literal
                                    PUSH ','
                                 POP __arg0
                              // Pushing args in reverse order
                              PUSH __arg0
                              // *** print
                              CALL __builtin__print__char
                              // Remove args
                              POP __void
                              RESPONSE __retval
                              PUSH __retval
                           // Statement results can be ignored
                           POP __void
                           // Function Call - print(Element) -> void
                              // Arguments
                                 // Subscript
                                    // LHS
                                       // Member Accessor
                                          // LHS
                                             // Member Accessor
                                                // LHS
                                                   // Identifier - e
                                                      PUSH __main__print__e
                                                // RHS
                                                   PUSH __field____main____Element____list
                                                POP __child
                                                POP __parent
                                                PUSH __parent[__child]
                                          // RHS
                                             PUSH __field____main____Vector__Element____data
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    // OFFSET
                                       // Identifier - i
                                          PUSH __main__print__block__78__if__79__block__80__for__82__i
                                    POP __offset
                                    POP __pointer
                                    PUSH __pointer[__offset]
                                 POP __arg0
                              // Pushing args in reverse order
                              PUSH __arg0
                              // *** print
                              CALL __main____print__Element
                              // Remove args
                              POP __void
                              RESPONSE __retval
                              PUSH __retval
                           // Statement results can be ignored
                           POP __void
                        //------------------------------------------------
                     // Repeat
                     JUMP __for__82
                     // End of For
                     __endfor__82:
                  //------------------------------------------------------
                  // Function Call - print(char) -> void
                     // Arguments
                        // Char Literal
                           PUSH ']'
                        POP __arg0
                     // Pushing args in reverse order
                     PUSH __arg0
                     // *** print
                     CALL __builtin__print__char
                     // Remove args
                     POP __void
                     RESPONSE __retval
                     PUSH __retval
                  // Statement results can be ignored
                  POP __void
                  // Return
                     RETURN 0
               //---------------------------------------------------------
            JUMP __endif__79
            // End of if
            __endif__79:
         //---------------------------------------------------------------
         // Function Call - print(int) -> void
            // Arguments
               // Member Accessor
                  // LHS
                     // Identifier - e
                        PUSH __main__print__e
                  // RHS
                     PUSH __field____main____Element____value
                  POP __child
                  POP __parent
                  PUSH __parent[__child]
               POP __arg0
            // Pushing args in reverse order
            PUSH __arg0
            // *** print
            CALL __builtin__print__int
            // Remove args
            POP __void
            RESPONSE __retval
            PUSH __retval
         // Statement results can be ignored
         POP __void
      //------------------------------------------------------------------
   RETURN 0
__end____main____print__Element:
// End Function Declaration - __main____print__Element
//========================================================================

//========================================================================
// Class Template - 
   // Instances:
      //==================================================================
      // Class Declaration - __main____Pair__Element__int inherits __builtin____main__Object
         // Creating Dispatch Table
            MALLOC __dtable____main____Pair__Element__int 0
            // Populate Dispatch Table
         //---------------------------------------------------------------
         // Field - Element Pair<:Element, int:>::a
         ASSIGN __field____main____Pair__Element__int____a 1
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - int Pair<:Element, int:>::b
         ASSIGN __field____main____Pair__Element__int____b 2
         //---------------------------------------------------------------
      // skip over class methods
      JUMP __endclass____main____Pair__Element__int
         //---------------------------------------------------------------
         // Constructor Declaration - Pair<:Element, int:>::Pair(Element, int) -> Pair<:Element, int:>
         JUMP __end__ctor____main____Pair__Element__int____Pair__Element__int
         __ctor____main____Pair__Element__int____Pair__Element__int:
            // Creating Class Instance
               MALLOC __this 3
               // Add Dispatch Table
               ASSIGN __this[0] __dtable____main____Pair__Element__int
            // Parameters
               // Param: a
               STACKGET __main____Pair__Element__int__Pair__a 0
               // Param: b
               STACKGET __main____Pair__Element__int__Pair__b 1
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Identifier - a
                           PUSH __main____Pair__Element__int__Pair__a
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Pair__Element__int____a
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Identifier - b
                           PUSH __main____Pair__Element__int__Pair__b
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Pair__Element__int____b
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN __this
         __end__ctor____main____Pair__Element__int____Pair__Element__int:
         // End Constructor Declaration - __ctor____main____Pair__Element__int____Pair__Element__int
         //---------------------------------------------------------------

      __endclass____main____Pair__Element__int:
      // End Class Declaration - __main____Pair__Element__int
      //==================================================================

// End Class Template - 
//========================================================================

//========================================================================
// Function Declaration - build_element(char[], int, int) -> Pair<:Element, int:>
JUMP __end____main____build_element__char__1__int__int
__main____build_element__char__1__int__int:
   // Parameters
      // Param: line
      STACKGET __main__build_element__line 0
      // Param: i
      STACKGET __main__build_element__i 1
      // Param: line_size
      STACKGET __main__build_element__line_size 2
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Greater Than or Equal to
                  // LHS
                     // Identifier - i
                        PUSH __main__build_element__i
                  // RHS
                     // Identifier - line_size
                        PUSH __main__build_element__line_size
                  POP __rhs
                  POP __lhs
                  GE __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__86
            // Body
               // Return
                  // Null Literal
                     ASSIGN __null 0
                     PUSH __null
                  POP __rVal
                  RETURN __rVal
            JUMP __endif__86
            // End of if
            __endif__86:
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Equal
                  // LHS
                     // Subscript
                        // LHS
                           // Identifier - line
                              PUSH __main__build_element__line
                        // OFFSET
                           // Identifier - i
                              PUSH __main__build_element__i
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                  // RHS
                     // Char Literal
                        PUSH '['
                  POP __rhs
                  POP __lhs
                  EQUAL __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__87
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Pre-Increment
                     // RHS
                        // Identifier - i
                           PUSH __main__build_element__i
                     POP __rhs
                     ADD __main__build_element__i __main__build_element__i 1
                     ASSIGN __res __main__build_element__i
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Constructor Call - Vector<:Element:>::Vector() -> Vector<:Element:>
                           // Arguments
                           // Pushing args in reverse order
                           CALL __ctor____main____Vector__Element____Vector
                           // Remove args
                           RESPONSE __retval
                           PUSH __retval
                     // LHS
                        // Variable Declaration
                           ASSIGN __main__build_element__block__85__if__87__block__88__sub_elements 0
                     POP __rhs
                     ASSIGN __main__build_element__block__85__if__87__block__88__sub_elements __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  //------------------------------------------------------
                  // While-Loop
                  __while__89:
                     // Condition
                        // Not Equal
                           // LHS
                              // Subscript
                                 // LHS
                                    // Identifier - line
                                       PUSH __main__build_element__line
                                 // OFFSET
                                    // Identifier - i
                                       PUSH __main__build_element__i
                                 POP __offset
                                 POP __pointer
                                 PUSH __pointer[__offset]
                           // RHS
                              // Char Literal
                                 PUSH ']'
                           POP __rhs
                           POP __lhs
                           NEQUAL __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endwhile__89
                     // Body
                        //------------------------------------------------
                        // Code Block
                           // Assignment - '='
                              // RHS
                                 // Function Call - build_element(char[], int, int) -> Pair<:Element, int:>
                                    // Arguments
                                       // Identifier - line
                                          PUSH __main__build_element__line
                                       // Identifier - i
                                          PUSH __main__build_element__i
                                       // Identifier - line_size
                                          PUSH __main__build_element__line_size
                                       POP __arg2
                                       POP __arg1
                                       POP __arg0
                                    // Pushing args in reverse order
                                    PUSH __arg2
                                    PUSH __arg1
                                    PUSH __arg0
                                    // *** build_element
                                    CALL __main____build_element__char__1__int__int
                                    // Remove args
                                    POP __void
                                    POP __void
                                    POP __void
                                    RESPONSE __retval
                                    PUSH __retval
                              // LHS
                                 // Variable Declaration
                                    ASSIGN __main__build_element__block__85__if__87__block__88__while__89__block__90__p 0
                              POP __rhs
                              ASSIGN __main__build_element__block__85__if__87__block__88__while__89__block__90__p __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           // Method Call - Vector<:Element:>::pushBack(Element) -> void
                              // LHS
                                 // Identifier - sub_elements
                                    PUSH __main__build_element__block__85__if__87__block__88__sub_elements
                              // RHS
                              // Arguments
                                 // Member Accessor
                                    // LHS
                                       // Identifier - p
                                          PUSH __main__build_element__block__85__if__87__block__88__while__89__block__90__p
                                    // RHS
                                       PUSH __field____main____Pair__Element__int____a
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                                 POP __arg0
                              POP __obj
                              // Pushing args in reverse order
                              PUSH __arg0
                              PUSH __obj
                              CALL __method____main____Vector__Element____pushBack__Element
                              POP __void
                              // Remove args
                              POP __void
                              RESPONSE __retval
                              PUSH __retval
                           // Statement results can be ignored
                           POP __void
                           // Assignment - '='
                              // RHS
                                 // Member Accessor
                                    // LHS
                                       // Identifier - p
                                          PUSH __main__build_element__block__85__if__87__block__88__while__89__block__90__p
                                    // RHS
                                       PUSH __field____main____Pair__Element__int____b
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              POP __rhs
                              ASSIGN __main__build_element__i __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           //---------------------------------------------
                           // If-Statement
                              // Condition
                                 // Equal
                                    // LHS
                                       // Subscript
                                          // LHS
                                             // Identifier - line
                                                PUSH __main__build_element__line
                                          // OFFSET
                                             // Identifier - i
                                                PUSH __main__build_element__i
                                          POP __offset
                                          POP __pointer
                                          PUSH __pointer[__offset]
                                    // RHS
                                       // Char Literal
                                          PUSH ','
                                    POP __rhs
                                    POP __lhs
                                    EQUAL __res __lhs __rhs
                                    PUSH __res
                                 POP __cond
                                 CMP __cond 0
                                 JEQ __endif__91
                              // Body
                                 // Pre-Increment
                                    // RHS
                                       // Identifier - i
                                          PUSH __main__build_element__i
                                    POP __rhs
                                    ADD __main__build_element__i __main__build_element__i 1
                                    ASSIGN __res __main__build_element__i
                                    PUSH __res
                                 // Statement results can be ignored
                                 POP __void
                              JUMP __endif__91
                              // End of if
                              __endif__91:
                           //---------------------------------------------
                           // Free Operator
                              // RHS
                                 // Identifier - p
                                    PUSH __main__build_element__block__85__if__87__block__88__while__89__block__90__p
                              // Free array
                              POP __array
                              FREE __array
                              PUSH __array
                           // Statement results can be ignored
                           POP __void
                        //------------------------------------------------
                     JUMP __while__89
                     // End of While
                     __endwhile__89:
                  //------------------------------------------------------
                  // Pre-Increment
                     // RHS
                        // Identifier - i
                           PUSH __main__build_element__i
                     POP __rhs
                     ADD __main__build_element__i __main__build_element__i 1
                     ASSIGN __res __main__build_element__i
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Constructor Call - Element::Element(Vector<:Element:>) -> Element
                           // Arguments
                              // Identifier - sub_elements
                                 PUSH __main__build_element__block__85__if__87__block__88__sub_elements
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg0
                           CALL __ctor____main____Element____Element__Vector
                           // Remove args
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                     // LHS
                        // Variable Declaration
                           ASSIGN __main__build_element__block__85__if__87__block__88__e 0
                     POP __rhs
                     ASSIGN __main__build_element__block__85__if__87__block__88__e __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Return
                     // Constructor Call - Pair<:Element, int:>::Pair(Element, int) -> Pair<:Element, int:>
                        // Arguments
                           // Identifier - e
                              PUSH __main__build_element__block__85__if__87__block__88__e
                           // Identifier - i
                              PUSH __main__build_element__i
                           POP __arg1
                           POP __arg0
                        // Pushing args in reverse order
                        PUSH __arg1
                        PUSH __arg0
                        CALL __ctor____main____Pair__Element__int____Pair__Element__int
                        // Remove args
                        POP __void
                        POP __void
                        RESPONSE __retval
                        PUSH __retval
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            JUMP __endif__87
            // End of if
            __endif__87:
         //---------------------------------------------------------------
         // Assignment - '='
            // RHS
               // Constructor Call - Vector<:char:>::Vector() -> Vector<:char:>
                  // Arguments
                  // Pushing args in reverse order
                  CALL __ctor____main____Vector__char____Vector
                  // Remove args
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__build_element__block__85__str 0
            POP __rhs
            ASSIGN __main__build_element__block__85__str __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // While-Loop
         __while__92:
            // Condition
               // Negate
                  // RHS
                     // OR
                        // LHS
                           // Equal
                              // LHS
                                 // Subscript
                                    // LHS
                                       // Identifier - line
                                          PUSH __main__build_element__line
                                    // OFFSET
                                       // Identifier - i
                                          PUSH __main__build_element__i
                                    POP __offset
                                    POP __pointer
                                    PUSH __pointer[__offset]
                              // RHS
                                 // Char Literal
                                    PUSH ','
                              POP __rhs
                              POP __lhs
                              EQUAL __res __lhs __rhs
                              PUSH __res
                        // RHS
                           // Equal
                              // LHS
                                 // Subscript
                                    // LHS
                                       // Identifier - line
                                          PUSH __main__build_element__line
                                    // OFFSET
                                       // Identifier - i
                                          PUSH __main__build_element__i
                                    POP __offset
                                    POP __pointer
                                    PUSH __pointer[__offset]
                              // RHS
                                 // Char Literal
                                    PUSH ']'
                              POP __rhs
                              POP __lhs
                              EQUAL __res __lhs __rhs
                              PUSH __res
                        POP __rhs
                        POP __lhs
                        OR __res __lhs __rhs
                        PUSH __res
                  POP __rhs
                  NOT __res __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endwhile__92
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Method Call - Vector<:char:>::pushBack(char) -> void
                     // LHS
                        // Identifier - str
                           PUSH __main__build_element__block__85__str
                     // RHS
                     // Arguments
                        // Subscript
                           // LHS
                              // Identifier - line
                                 PUSH __main__build_element__line
                           // OFFSET
                              // Identifier - i
                                 PUSH __main__build_element__i
                           POP __offset
                           POP __pointer
                           PUSH __pointer[__offset]
                        POP __arg0
                     POP __obj
                     // Pushing args in reverse order
                     PUSH __arg0
                     PUSH __obj
                     CALL __method____main____Vector__char____pushBack__char
                     POP __void
                     // Remove args
                     POP __void
                     RESPONSE __retval
                     PUSH __retval
                  // Statement results can be ignored
                  POP __void
                  // Pre-Increment
                     // RHS
                        // Identifier - i
                           PUSH __main__build_element__i
                     POP __rhs
                     ADD __main__build_element__i __main__build_element__i 1
                     ASSIGN __res __main__build_element__i
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            JUMP __while__92
            // End of While
            __endwhile__92:
         //---------------------------------------------------------------
         // Method Call - Vector<:char:>::pushBack(char) -> void
            // LHS
               // Identifier - str
                  PUSH __main__build_element__block__85__str
            // RHS
            // Arguments
               // Char Literal
                  PUSH '\0'
               POP __arg0
            POP __obj
            // Pushing args in reverse order
            PUSH __arg0
            PUSH __obj
            CALL __method____main____Vector__char____pushBack__char
            POP __void
            // Remove args
            POP __void
            RESPONSE __retval
            PUSH __retval
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Function Call - stringToInt(char[]) -> int
                  // Arguments
                     // Member Accessor
                        // LHS
                           // Identifier - str
                              PUSH __main__build_element__block__85__str
                        // RHS
                           PUSH __field____main____Vector__char____data
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** stringToInt
                  CALL __builtin__stringToInt__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__build_element__block__85__value 0
            POP __rhs
            ASSIGN __main__build_element__block__85__value __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Return
            // Constructor Call - Pair<:Element, int:>::Pair(Element, int) -> Pair<:Element, int:>
               // Arguments
                  // Constructor Call - Element::Element(int) -> Element
                     // Arguments
                        // Identifier - value
                           PUSH __main__build_element__block__85__value
                        POP __arg0
                     // Pushing args in reverse order
                     PUSH __arg0
                     CALL __ctor____main____Element____Element__int
                     // Remove args
                     POP __void
                     RESPONSE __retval
                     PUSH __retval
                  // Identifier - i
                     PUSH __main__build_element__i
                  POP __arg1
                  POP __arg0
               // Pushing args in reverse order
               PUSH __arg1
               PUSH __arg0
               CALL __ctor____main____Pair__Element__int____Pair__Element__int
               // Remove args
               POP __void
               POP __void
               RESPONSE __retval
               PUSH __retval
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____build_element__char__1__int__int:
// End Function Declaration - __main____build_element__char__1__int__int
//========================================================================

// Assignment - '='
   // RHS
      // Int Literal
         PUSH 1
   // LHS
      // Variable Declaration
         ASSIGN __main__RIGHT_ORDER 0
   POP __rhs
   ASSIGN __main__RIGHT_ORDER __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Assignment - '='
   // RHS
      // Negative
         // RHS
            // Int Literal
               PUSH 1
         POP __rhs
         SUBTRACT __res 0 __rhs
         PUSH __res
   // LHS
      // Variable Declaration
         ASSIGN __main__CONTINUE 0
   POP __rhs
   ASSIGN __main__CONTINUE __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Assignment - '='
   // RHS
      // Int Literal
         PUSH 0
   // LHS
      // Variable Declaration
         ASSIGN __main__WRONG_ORDER 0
   POP __rhs
   ASSIGN __main__WRONG_ORDER __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
//========================================================================
// Function Declaration - is_correct_order(Element, Element) -> int
JUMP __end____main____is_correct_order__Element__Element
__main____is_correct_order__Element__Element:
   // Parameters
      // Param: a
      STACKGET __main__is_correct_order__a 0
      // Param: b
      STACKGET __main__is_correct_order__b 1
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Assignment - '='
            // RHS
               // Int Literal
                  PUSH 1
            // LHS
               // Variable Declaration
                  ASSIGN __main__is_correct_order__block__94__RIGHT_ORDER 0
            POP __rhs
            ASSIGN __main__is_correct_order__block__94__RIGHT_ORDER __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Negative
                  // RHS
                     // Int Literal
                        PUSH 1
                  POP __rhs
                  SUBTRACT __res 0 __rhs
                  PUSH __res
            // LHS
               // Variable Declaration
                  ASSIGN __main__is_correct_order__block__94__CONTINUE 0
            POP __rhs
            ASSIGN __main__is_correct_order__block__94__CONTINUE __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Int Literal
                  PUSH 0
            // LHS
               // Variable Declaration
                  ASSIGN __main__is_correct_order__block__94__WRONG_ORDER 0
            POP __rhs
            ASSIGN __main__is_correct_order__block__94__WRONG_ORDER __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // AND
                  // LHS
                     // Negate
                        // RHS
                           // Member Accessor
                              // LHS
                                 // Identifier - a
                                    PUSH __main__is_correct_order__a
                              // RHS
                                 PUSH __field____main____Element____is_list
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        POP __rhs
                        NOT __res __rhs
                        PUSH __res
                  // RHS
                     // Negate
                        // RHS
                           // Member Accessor
                              // LHS
                                 // Identifier - b
                                    PUSH __main__is_correct_order__b
                              // RHS
                                 PUSH __field____main____Element____is_list
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        POP __rhs
                        NOT __res __rhs
                        PUSH __res
                  POP __rhs
                  POP __lhs
                  AND __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__95
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Less Than
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // Identifier - a
                                       PUSH __main__is_correct_order__a
                                 // RHS
                                    PUSH __field____main____Element____value
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              // Member Accessor
                                 // LHS
                                    // Identifier - b
                                       PUSH __main__is_correct_order__b
                                 // RHS
                                    PUSH __field____main____Element____value
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           POP __rhs
                           POP __lhs
                           LT __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __elif__97x0
                     // Body
                        // Return
                           // Identifier - RIGHT_ORDER
                              PUSH __main__is_correct_order__block__94__RIGHT_ORDER
                           POP __rVal
                           RETURN __rVal
                     JUMP __endif__97
                     //---------------------------------------------------
                     // Elif-Statement
                     __elif__97x0:
                        // Condition
                        // Greater Than
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // Identifier - a
                                       PUSH __main__is_correct_order__a
                                 // RHS
                                    PUSH __field____main____Element____value
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              // Member Accessor
                                 // LHS
                                    // Identifier - b
                                       PUSH __main__is_correct_order__b
                                 // RHS
                                    PUSH __field____main____Element____value
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           POP __rhs
                           POP __lhs
                           GT __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__97
                        // Body
                        // Return
                           // Identifier - WRONG_ORDER
                              PUSH __main__is_correct_order__block__94__WRONG_ORDER
                           POP __rVal
                           RETURN __rVal
                        JUMP __endif__97
                     //---------------------------------------------------
                     // End of if
                     __endif__97:
                  //------------------------------------------------------
                  // Return
                     // Identifier - CONTINUE
                        PUSH __main__is_correct_order__block__94__CONTINUE
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            JUMP __endif__95
            // End of if
            __endif__95:
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // AND
                  // LHS
                     // Member Accessor
                        // LHS
                           // Identifier - a
                              PUSH __main__is_correct_order__a
                        // RHS
                           PUSH __field____main____Element____is_list
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                  // RHS
                     // Member Accessor
                        // LHS
                           // Identifier - b
                              PUSH __main__is_correct_order__b
                        // RHS
                           PUSH __field____main____Element____is_list
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                  POP __rhs
                  POP __lhs
                  AND __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__98
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // For-Loop
                  // Init
                     // Assignment - '='
                        // RHS
                           // Int Literal
                              PUSH 0
                        // LHS
                           // Variable Declaration
                              ASSIGN __main__is_correct_order__block__94__if__98__block__99__for__100__i 0
                        POP __rhs
                        ASSIGN __main__is_correct_order__block__94__if__98__block__99__for__100__i __rhs
                        PUSH __rhs
                  JUMP __forcond__100
                  __for__100:
                     // Update
                        // Pre-Increment
                           // RHS
                              // Identifier - i
                                 PUSH __main__is_correct_order__block__94__if__98__block__99__for__100__i
                           POP __rhs
                           ADD __main__is_correct_order__block__94__if__98__block__99__for__100__i __main__is_correct_order__block__94__if__98__block__99__for__100__i 1
                           ASSIGN __res __main__is_correct_order__block__94__if__98__block__99__for__100__i
                           PUSH __res
                     __forcond__100:
                     // Condition
                        // AND
                           // LHS
                              // Less Than
                                 // LHS
                                    // Identifier - i
                                       PUSH __main__is_correct_order__block__94__if__98__block__99__for__100__i
                                 // RHS
                                    // Member Accessor
                                       // LHS
                                          // Member Accessor
                                             // LHS
                                                // Identifier - a
                                                   PUSH __main__is_correct_order__a
                                             // RHS
                                                PUSH __field____main____Element____list
                                             POP __child
                                             POP __parent
                                             PUSH __parent[__child]
                                       // RHS
                                          PUSH __field____main____Vector__Element____size
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                 POP __rhs
                                 POP __lhs
                                 LT __res __lhs __rhs
                                 PUSH __res
                           // RHS
                              // Less Than
                                 // LHS
                                    // Identifier - i
                                       PUSH __main__is_correct_order__block__94__if__98__block__99__for__100__i
                                 // RHS
                                    // Member Accessor
                                       // LHS
                                          // Member Accessor
                                             // LHS
                                                // Identifier - b
                                                   PUSH __main__is_correct_order__b
                                             // RHS
                                                PUSH __field____main____Element____list
                                             POP __child
                                             POP __parent
                                             PUSH __parent[__child]
                                       // RHS
                                          PUSH __field____main____Vector__Element____size
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                 POP __rhs
                                 POP __lhs
                                 LT __res __lhs __rhs
                                 PUSH __res
                           POP __rhs
                           POP __lhs
                           AND __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endfor__100
                     // Body
                        //------------------------------------------------
                        // Code Block
                           // Assignment - '='
                              // RHS
                                 // Function Call - is_correct_order(Element, Element) -> int
                                    // Arguments
                                       // Subscript
                                          // LHS
                                             // Member Accessor
                                                // LHS
                                                   // Member Accessor
                                                      // LHS
                                                         // Identifier - a
                                                            PUSH __main__is_correct_order__a
                                                      // RHS
                                                         PUSH __field____main____Element____list
                                                      POP __child
                                                      POP __parent
                                                      PUSH __parent[__child]
                                                // RHS
                                                   PUSH __field____main____Vector__Element____data
                                                POP __child
                                                POP __parent
                                                PUSH __parent[__child]
                                          // OFFSET
                                             // Identifier - i
                                                PUSH __main__is_correct_order__block__94__if__98__block__99__for__100__i
                                          POP __offset
                                          POP __pointer
                                          PUSH __pointer[__offset]
                                       // Subscript
                                          // LHS
                                             // Member Accessor
                                                // LHS
                                                   // Member Accessor
                                                      // LHS
                                                         // Identifier - b
                                                            PUSH __main__is_correct_order__b
                                                      // RHS
                                                         PUSH __field____main____Element____list
                                                      POP __child
                                                      POP __parent
                                                      PUSH __parent[__child]
                                                // RHS
                                                   PUSH __field____main____Vector__Element____data
                                                POP __child
                                                POP __parent
                                                PUSH __parent[__child]
                                          // OFFSET
                                             // Identifier - i
                                                PUSH __main__is_correct_order__block__94__if__98__block__99__for__100__i
                                          POP __offset
                                          POP __pointer
                                          PUSH __pointer[__offset]
                                       POP __arg1
                                       POP __arg0
                                    // Pushing args in reverse order
                                    PUSH __arg1
                                    PUSH __arg0
                                    // *** is_correct_order
                                    CALL __main____is_correct_order__Element__Element
                                    // Remove args
                                    POP __void
                                    POP __void
                                    RESPONSE __retval
                                    PUSH __retval
                              // LHS
                                 // Variable Declaration
                                    ASSIGN __main__is_correct_order__block__94__if__98__block__99__for__100__block__101__res 0
                              POP __rhs
                              ASSIGN __main__is_correct_order__block__94__if__98__block__99__for__100__block__101__res __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           //---------------------------------------------
                           // If-Statement
                              // Condition
                                 // Equal
                                    // LHS
                                       // Identifier - res
                                          PUSH __main__is_correct_order__block__94__if__98__block__99__for__100__block__101__res
                                    // RHS
                                       // Identifier - RIGHT_ORDER
                                          PUSH __main__is_correct_order__block__94__RIGHT_ORDER
                                    POP __rhs
                                    POP __lhs
                                    EQUAL __res __lhs __rhs
                                    PUSH __res
                                 POP __cond
                                 CMP __cond 0
                                 JEQ __endif__102
                              // Body
                                 // Return
                                    // Identifier - RIGHT_ORDER
                                       PUSH __main__is_correct_order__block__94__RIGHT_ORDER
                                    POP __rVal
                                    RETURN __rVal
                              JUMP __endif__102
                              // End of if
                              __endif__102:
                           //---------------------------------------------
                           //---------------------------------------------
                           // If-Statement
                              // Condition
                                 // Equal
                                    // LHS
                                       // Identifier - res
                                          PUSH __main__is_correct_order__block__94__if__98__block__99__for__100__block__101__res
                                    // RHS
                                       // Identifier - WRONG_ORDER
                                          PUSH __main__is_correct_order__block__94__WRONG_ORDER
                                    POP __rhs
                                    POP __lhs
                                    EQUAL __res __lhs __rhs
                                    PUSH __res
                                 POP __cond
                                 CMP __cond 0
                                 JEQ __endif__103
                              // Body
                                 // Return
                                    // Identifier - WRONG_ORDER
                                       PUSH __main__is_correct_order__block__94__WRONG_ORDER
                                    POP __rVal
                                    RETURN __rVal
                              JUMP __endif__103
                              // End of if
                              __endif__103:
                           //---------------------------------------------
                        //------------------------------------------------
                     // Repeat
                     JUMP __for__100
                     // End of For
                     __endfor__100:
                  //------------------------------------------------------
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Less Than
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // Member Accessor
                                       // LHS
                                          // Identifier - a
                                             PUSH __main__is_correct_order__a
                                       // RHS
                                          PUSH __field____main____Element____list
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                 // RHS
                                    PUSH __field____main____Vector__Element____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              // Member Accessor
                                 // LHS
                                    // Member Accessor
                                       // LHS
                                          // Identifier - b
                                             PUSH __main__is_correct_order__b
                                       // RHS
                                          PUSH __field____main____Element____list
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                 // RHS
                                    PUSH __field____main____Vector__Element____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           POP __rhs
                           POP __lhs
                           LT __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__104
                     // Body
                        // Return
                           // Identifier - RIGHT_ORDER
                              PUSH __main__is_correct_order__block__94__RIGHT_ORDER
                           POP __rVal
                           RETURN __rVal
                     JUMP __endif__104
                     // End of if
                     __endif__104:
                  //------------------------------------------------------
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Greater Than
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // Member Accessor
                                       // LHS
                                          // Identifier - a
                                             PUSH __main__is_correct_order__a
                                       // RHS
                                          PUSH __field____main____Element____list
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                 // RHS
                                    PUSH __field____main____Vector__Element____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              // Member Accessor
                                 // LHS
                                    // Member Accessor
                                       // LHS
                                          // Identifier - b
                                             PUSH __main__is_correct_order__b
                                       // RHS
                                          PUSH __field____main____Element____list
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                 // RHS
                                    PUSH __field____main____Vector__Element____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           POP __rhs
                           POP __lhs
                           GT __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__105
                     // Body
                        // Return
                           // Identifier - WRONG_ORDER
                              PUSH __main__is_correct_order__block__94__WRONG_ORDER
                           POP __rVal
                           RETURN __rVal
                     JUMP __endif__105
                     // End of if
                     __endif__105:
                  //------------------------------------------------------
                  // Return
                     // Identifier - CONTINUE
                        PUSH __main__is_correct_order__block__94__CONTINUE
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            JUMP __endif__98
            // End of if
            __endif__98:
         //---------------------------------------------------------------
         // Assignment - '='
            // RHS
               // Int Literal
                  PUSH 0
            // LHS
               // Variable Declaration
                  ASSIGN __main__is_correct_order__block__94__wasANum 0
            POP __rhs
            ASSIGN __main__is_correct_order__block__94__wasANum __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Negate
                  // RHS
                     // Member Accessor
                        // LHS
                           // Identifier - a
                              PUSH __main__is_correct_order__a
                        // RHS
                           PUSH __field____main____Element____is_list
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                  POP __rhs
                  NOT __res __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__106
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Int Literal
                           PUSH 1
                     POP __rhs
                     ASSIGN __main__is_correct_order__block__94__wasANum __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Constructor Call - Element::Element(int) -> Element
                           // Arguments
                              // Member Accessor
                                 // LHS
                                    // Identifier - a
                                       PUSH __main__is_correct_order__a
                                 // RHS
                                    PUSH __field____main____Element____value
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg0
                           CALL __ctor____main____Element____Element__int
                           // Remove args
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                     // LHS
                        // Variable Declaration
                           ASSIGN __main__is_correct_order__block__94__if__106__block__107__newnum 0
                     POP __rhs
                     ASSIGN __main__is_correct_order__block__94__if__106__block__107__newnum __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Method Call - Element::switch_to_list(Vector<:Element:>) -> void
                     // LHS
                        // Identifier - a
                           PUSH __main__is_correct_order__a
                     // RHS
                     // Arguments
                        // Constructor Call - Vector<:Element:>::Vector() -> Vector<:Element:>
                           // Arguments
                           // Pushing args in reverse order
                           CALL __ctor____main____Vector__Element____Vector
                           // Remove args
                           RESPONSE __retval
                           PUSH __retval
                        POP __arg0
                     POP __obj
                     // Pushing args in reverse order
                     PUSH __arg0
                     PUSH __obj
                     CALL __method____main____Element____switch_to_list__Vector
                     POP __void
                     // Remove args
                     POP __void
                     RESPONSE __retval
                     PUSH __retval
                  // Statement results can be ignored
                  POP __void
                  // Method Call - Vector<:Element:>::pushBack(Element) -> void
                     // LHS
                        // Member Accessor
                           // LHS
                              // Identifier - a
                                 PUSH __main__is_correct_order__a
                           // RHS
                              PUSH __field____main____Element____list
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // RHS
                     // Arguments
                        // Identifier - newnum
                           PUSH __main__is_correct_order__block__94__if__106__block__107__newnum
                        POP __arg0
                     POP __obj
                     // Pushing args in reverse order
                     PUSH __arg0
                     PUSH __obj
                     CALL __method____main____Vector__Element____pushBack__Element
                     POP __void
                     // Remove args
                     POP __void
                     RESPONSE __retval
                     PUSH __retval
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            JUMP __endif__106
            // End of if
            __endif__106:
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Negate
                  // RHS
                     // Member Accessor
                        // LHS
                           // Identifier - b
                              PUSH __main__is_correct_order__b
                        // RHS
                           PUSH __field____main____Element____is_list
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                  POP __rhs
                  NOT __res __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__108
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Int Literal
                           PUSH 0
                     POP __rhs
                     ASSIGN __main__is_correct_order__block__94__wasANum __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Constructor Call - Element::Element(int) -> Element
                           // Arguments
                              // Member Accessor
                                 // LHS
                                    // Identifier - b
                                       PUSH __main__is_correct_order__b
                                 // RHS
                                    PUSH __field____main____Element____value
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg0
                           CALL __ctor____main____Element____Element__int
                           // Remove args
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                     // LHS
                        // Variable Declaration
                           ASSIGN __main__is_correct_order__block__94__if__108__block__109__newnum 0
                     POP __rhs
                     ASSIGN __main__is_correct_order__block__94__if__108__block__109__newnum __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Method Call - Element::switch_to_list(Vector<:Element:>) -> void
                     // LHS
                        // Identifier - b
                           PUSH __main__is_correct_order__b
                     // RHS
                     // Arguments
                        // Constructor Call - Vector<:Element:>::Vector() -> Vector<:Element:>
                           // Arguments
                           // Pushing args in reverse order
                           CALL __ctor____main____Vector__Element____Vector
                           // Remove args
                           RESPONSE __retval
                           PUSH __retval
                        POP __arg0
                     POP __obj
                     // Pushing args in reverse order
                     PUSH __arg0
                     PUSH __obj
                     CALL __method____main____Element____switch_to_list__Vector
                     POP __void
                     // Remove args
                     POP __void
                     RESPONSE __retval
                     PUSH __retval
                  // Statement results can be ignored
                  POP __void
                  // Method Call - Vector<:Element:>::pushBack(Element) -> void
                     // LHS
                        // Member Accessor
                           // LHS
                              // Identifier - b
                                 PUSH __main__is_correct_order__b
                           // RHS
                              PUSH __field____main____Element____list
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // RHS
                     // Arguments
                        // Identifier - newnum
                           PUSH __main__is_correct_order__block__94__if__108__block__109__newnum
                        POP __arg0
                     POP __obj
                     // Pushing args in reverse order
                     PUSH __arg0
                     PUSH __obj
                     CALL __method____main____Vector__Element____pushBack__Element
                     POP __void
                     // Remove args
                     POP __void
                     RESPONSE __retval
                     PUSH __retval
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            JUMP __endif__108
            // End of if
            __endif__108:
         //---------------------------------------------------------------
         // Assignment - '='
            // RHS
               // Function Call - is_correct_order(Element, Element) -> int
                  // Arguments
                     // Identifier - a
                        PUSH __main__is_correct_order__a
                     // Identifier - b
                        PUSH __main__is_correct_order__b
                     POP __arg1
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg1
                  PUSH __arg0
                  // *** is_correct_order
                  CALL __main____is_correct_order__Element__Element
                  // Remove args
                  POP __void
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__is_correct_order__block__94__res 0
            POP __rhs
            ASSIGN __main__is_correct_order__block__94__res __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Identifier - wasANum
                  PUSH __main__is_correct_order__block__94__wasANum
               POP __cond
               CMP __cond 0
               JEQ __else__110
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Method Call - Vector<:Element:>::popBack() -> Element
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // Identifier - a
                                       PUSH __main__is_correct_order__a
                                 // RHS
                                    PUSH __field____main____Element____list
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                           // Arguments
                           POP __obj
                           // Pushing args in reverse order
                           PUSH __obj
                           CALL __method____main____Vector__Element____popBack
                           POP __void
                           // Remove args
                           RESPONSE __retval
                           PUSH __retval
                     // LHS
                        // Variable Declaration
                           ASSIGN __main__is_correct_order__block__94__if__110__block__111__a_ 0
                     POP __rhs
                     ASSIGN __main__is_correct_order__block__94__if__110__block__111__a_ __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Int Literal
                           PUSH 0
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Identifier - a
                                 PUSH __main__is_correct_order__a
                           // RHS
                              PUSH __field____main____Element____is_list
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment - '='
                     // RHS
                        // Member Accessor
                           // LHS
                              // Identifier - a_
                                 PUSH __main__is_correct_order__block__94__if__110__block__111__a_
                           // RHS
                              PUSH __field____main____Element____value
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Identifier - a
                                 PUSH __main__is_correct_order__a
                           // RHS
                              PUSH __field____main____Element____value
                           POP __child
                           POP __parent
                           POP __rhs
                     ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Free Operator
                     // RHS
                        // Member Accessor
                           // LHS
                              // Identifier - a
                                 PUSH __main__is_correct_order__a
                           // RHS
                              PUSH __field____main____Element____list
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // Free array
                     POP __array
                     FREE __array
                     PUSH __array
                  // Statement results can be ignored
                  POP __void
                  // Free Operator
                     // RHS
                        // Identifier - a_
                           PUSH __main__is_correct_order__block__94__if__110__block__111__a_
                     // Free array
                     POP __array
                     FREE __array
                     PUSH __array
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            JUMP __endif__110
            //------------------------------------------------------------
            // Else-Statement
            __else__110:
            //------------------------------------------------------------
            // Code Block
               // Assignment - '='
                  // RHS
                     // Method Call - Vector<:Element:>::popBack() -> Element
                        // LHS
                           // Member Accessor
                              // LHS
                                 // Identifier - b
                                    PUSH __main__is_correct_order__b
                              // RHS
                                 PUSH __field____main____Element____list
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // RHS
                        // Arguments
                        POP __obj
                        // Pushing args in reverse order
                        PUSH __obj
                        CALL __method____main____Vector__Element____popBack
                        POP __void
                        // Remove args
                        RESPONSE __retval
                        PUSH __retval
                  // LHS
                     // Variable Declaration
                        ASSIGN __main__is_correct_order__block__94__else__110__block__112__b_ 0
                  POP __rhs
                  ASSIGN __main__is_correct_order__block__94__else__110__block__112__b_ __rhs
                  PUSH __rhs
               // Statement results can be ignored
               POP __void
               // Assignment - '='
                  // RHS
                     // Int Literal
                        PUSH 0
                  // LHS
                     // Member Accessor Assignment
                        // LHS
                           // Identifier - b
                              PUSH __main__is_correct_order__b
                        // RHS
                           PUSH __field____main____Element____is_list
                        POP __child
                        POP __parent
                        POP __rhs
                  ASSIGN __parent[__child] __rhs
                  PUSH __rhs
               // Statement results can be ignored
               POP __void
               // Assignment - '='
                  // RHS
                     // Member Accessor
                        // LHS
                           // Identifier - b_
                              PUSH __main__is_correct_order__block__94__else__110__block__112__b_
                        // RHS
                           PUSH __field____main____Element____value
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                  // LHS
                     // Member Accessor Assignment
                        // LHS
                           // Identifier - b
                              PUSH __main__is_correct_order__b
                        // RHS
                           PUSH __field____main____Element____value
                        POP __child
                        POP __parent
                        POP __rhs
                  ASSIGN __parent[__child] __rhs
                  PUSH __rhs
               // Statement results can be ignored
               POP __void
               // Free Operator
                  // RHS
                     // Member Accessor
                        // LHS
                           // Identifier - b
                              PUSH __main__is_correct_order__b
                        // RHS
                           PUSH __field____main____Element____list
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                  // Free array
                  POP __array
                  FREE __array
                  PUSH __array
               // Statement results can be ignored
               POP __void
               // Free Operator
                  // RHS
                     // Identifier - b_
                        PUSH __main__is_correct_order__block__94__else__110__block__112__b_
                  // Free array
                  POP __array
                  FREE __array
                  PUSH __array
               // Statement results can be ignored
               POP __void
            //------------------------------------------------------------
            //------------------------------------------------------------
            // End of if
            __endif__110:
         //---------------------------------------------------------------
         // Return
            // Identifier - res
               PUSH __main__is_correct_order__block__94__res
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____is_correct_order__Element__Element:
// End Function Declaration - __main____is_correct_order__Element__Element
//========================================================================

// Assignment - '='
   // RHS
      // Constructor Call - Vector<:Element:>::Vector() -> Vector<:Element:>
         // Arguments
         // Pushing args in reverse order
         CALL __ctor____main____Vector__Element____Vector
         // Remove args
         RESPONSE __retval
         PUSH __retval
   // LHS
      // Variable Declaration
         ASSIGN __main__elements 0
   POP __rhs
   ASSIGN __main__elements __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Assignment - '='
   // RHS
      // Constructor Call - Element::Element(int) -> Element
         // Arguments
            // Int Literal
               PUSH 2
            POP __arg0
         // Pushing args in reverse order
         PUSH __arg0
         CALL __ctor____main____Element____Element__int
         // Remove args
         POP __void
         RESPONSE __retval
         PUSH __retval
   // LHS
      // Variable Declaration
         ASSIGN __main__e0 0
   POP __rhs
   ASSIGN __main__e0 __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Assignment - '='
   // RHS
      // Constructor Call - Vector<:Element:>::Vector() -> Vector<:Element:>
         // Arguments
         // Pushing args in reverse order
         CALL __ctor____main____Vector__Element____Vector
         // Remove args
         RESPONSE __retval
         PUSH __retval
   // LHS
      // Variable Declaration
         ASSIGN __main__e1 0
   POP __rhs
   ASSIGN __main__e1 __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Method Call - Vector<:Element:>::pushBack(Element) -> void
   // LHS
      // Identifier - e1
         PUSH __main__e1
   // RHS
   // Arguments
      // Identifier - e0
         PUSH __main__e0
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____Vector__Element____pushBack__Element
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Assignment - '='
   // RHS
      // Constructor Call - Element::Element(Vector<:Element:>) -> Element
         // Arguments
            // Identifier - e1
               PUSH __main__e1
            POP __arg0
         // Pushing args in reverse order
         PUSH __arg0
         CALL __ctor____main____Element____Element__Vector
         // Remove args
         POP __void
         RESPONSE __retval
         PUSH __retval
   // LHS
      // Variable Declaration
         ASSIGN __main__e2 0
   POP __rhs
   ASSIGN __main__e2 __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Assignment - '='
   // RHS
      // Constructor Call - Vector<:Element:>::Vector() -> Vector<:Element:>
         // Arguments
         // Pushing args in reverse order
         CALL __ctor____main____Vector__Element____Vector
         // Remove args
         RESPONSE __retval
         PUSH __retval
   // LHS
      // Variable Declaration
         ASSIGN __main__e3 0
   POP __rhs
   ASSIGN __main__e3 __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Method Call - Vector<:Element:>::pushBack(Element) -> void
   // LHS
      // Identifier - e3
         PUSH __main__e3
   // RHS
   // Arguments
      // Identifier - e2
         PUSH __main__e2
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____Vector__Element____pushBack__Element
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Assignment - '='
   // RHS
      // Constructor Call - Element::Element(Vector<:Element:>) -> Element
         // Arguments
            // Identifier - e3
               PUSH __main__e3
            POP __arg0
         // Pushing args in reverse order
         PUSH __arg0
         CALL __ctor____main____Element____Element__Vector
         // Remove args
         POP __void
         RESPONSE __retval
         PUSH __retval
   // LHS
      // Variable Declaration
         ASSIGN __main__divider2 0
   POP __rhs
   ASSIGN __main__divider2 __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Method Call - Vector<:Element:>::pushBack(Element) -> void
   // LHS
      // Identifier - elements
         PUSH __main__elements
   // RHS
   // Arguments
      // Identifier - divider2
         PUSH __main__divider2
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____Vector__Element____pushBack__Element
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Assignment - '='
   // RHS
      // Constructor Call - Element::Element(int) -> Element
         // Arguments
            // Int Literal
               PUSH 6
            POP __arg0
         // Pushing args in reverse order
         PUSH __arg0
         CALL __ctor____main____Element____Element__int
         // Remove args
         POP __void
         RESPONSE __retval
         PUSH __retval
   POP __rhs
   ASSIGN __main__e0 __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Assignment - '='
   // RHS
      // Constructor Call - Vector<:Element:>::Vector() -> Vector<:Element:>
         // Arguments
         // Pushing args in reverse order
         CALL __ctor____main____Vector__Element____Vector
         // Remove args
         RESPONSE __retval
         PUSH __retval
   POP __rhs
   ASSIGN __main__e1 __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Method Call - Vector<:Element:>::pushBack(Element) -> void
   // LHS
      // Identifier - e1
         PUSH __main__e1
   // RHS
   // Arguments
      // Identifier - e0
         PUSH __main__e0
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____Vector__Element____pushBack__Element
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Assignment - '='
   // RHS
      // Constructor Call - Element::Element(Vector<:Element:>) -> Element
         // Arguments
            // Identifier - e1
               PUSH __main__e1
            POP __arg0
         // Pushing args in reverse order
         PUSH __arg0
         CALL __ctor____main____Element____Element__Vector
         // Remove args
         POP __void
         RESPONSE __retval
         PUSH __retval
   POP __rhs
   ASSIGN __main__e2 __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Assignment - '='
   // RHS
      // Constructor Call - Vector<:Element:>::Vector() -> Vector<:Element:>
         // Arguments
         // Pushing args in reverse order
         CALL __ctor____main____Vector__Element____Vector
         // Remove args
         RESPONSE __retval
         PUSH __retval
   POP __rhs
   ASSIGN __main__e3 __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Method Call - Vector<:Element:>::pushBack(Element) -> void
   // LHS
      // Identifier - e3
         PUSH __main__e3
   // RHS
   // Arguments
      // Identifier - e2
         PUSH __main__e2
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____Vector__Element____pushBack__Element
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Assignment - '='
   // RHS
      // Constructor Call - Element::Element(Vector<:Element:>) -> Element
         // Arguments
            // Identifier - e3
               PUSH __main__e3
            POP __arg0
         // Pushing args in reverse order
         PUSH __arg0
         CALL __ctor____main____Element____Element__Vector
         // Remove args
         POP __void
         RESPONSE __retval
         PUSH __retval
   // LHS
      // Variable Declaration
         ASSIGN __main__divider6 0
   POP __rhs
   ASSIGN __main__divider6 __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Method Call - Vector<:Element:>::pushBack(Element) -> void
   // LHS
      // Identifier - elements
         PUSH __main__elements
   // RHS
   // Arguments
      // Identifier - divider6
         PUSH __main__divider6
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____Vector__Element____pushBack__Element
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
//------------------------------------------------------------------------
// For-Loop
// Init
   // Assignment - '='
      // RHS
         // Int Literal
            PUSH 0
      // LHS
         // Variable Declaration
            ASSIGN __main__for__113__l 0
      POP __rhs
      ASSIGN __main__for__113__l __rhs
      PUSH __rhs
JUMP __forcond__113
__for__113:
   // Update
      // Assignment - '+='
         // RHS
            // Int Literal
               PUSH 1
         POP __rhs
         ADD __main__for__113__l __main__for__113__l __rhs
         PUSH __main__for__113__l
   __forcond__113:
   // Condition
      // Less Than
         // LHS
            // Identifier - l
               PUSH __main__for__113__l
         // RHS
            // Member Accessor
               // LHS
                  // Identifier - lines
                     PUSH __main__lines
               // RHS
                  PUSH __field____main____Vector__char__1____size
               POP __child
               POP __parent
               PUSH __parent[__child]
         POP __rhs
         POP __lhs
         LT __res __lhs __rhs
         PUSH __res
      POP __cond
      CMP __cond 0
      JEQ __endfor__113
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Equal
                  // LHS
                     // Subscript
                        // LHS
                           // Subscript
                              // LHS
                                 // Member Accessor
                                    // LHS
                                       // Identifier - lines
                                          PUSH __main__lines
                                    // RHS
                                       PUSH __field____main____Vector__char__1____data
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              // OFFSET
                                 // Identifier - l
                                    PUSH __main__for__113__l
                              POP __offset
                              POP __pointer
                              PUSH __pointer[__offset]
                        // OFFSET
                           // Int Literal
                              PUSH 0
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                  // RHS
                     // Char Literal
                        PUSH '\n'
                  POP __rhs
                  POP __lhs
                  EQUAL __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__115
            // Body
               // Continue in __for__113
               JUMP __for__113
            JUMP __endif__115
            // End of if
            __endif__115:
         //---------------------------------------------------------------
         // Assignment - '='
            // RHS
               // Function Call - build_element(char[], int, int) -> Pair<:Element, int:>
                  // Arguments
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // Identifier - lines
                                    PUSH __main__lines
                              // RHS
                                 PUSH __field____main____Vector__char__1____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Addition
                              // LHS
                                 // Identifier - l
                                    PUSH __main__for__113__l
                              // RHS
                                 // Int Literal
                                    PUSH 0
                              POP __rhs
                              POP __lhs
                              ADD __res __lhs __rhs
                              PUSH __res
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                     // Int Literal
                        PUSH 0
                     // Subtraction
                        // LHS
                           // Function Call - strlen(char[]) -> int
                              // Arguments
                                 // Subscript
                                    // LHS
                                       // Member Accessor
                                          // LHS
                                             // Identifier - lines
                                                PUSH __main__lines
                                          // RHS
                                             PUSH __field____main____Vector__char__1____data
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    // OFFSET
                                       // Addition
                                          // LHS
                                             // Identifier - l
                                                PUSH __main__for__113__l
                                          // RHS
                                             // Int Literal
                                                PUSH 0
                                          POP __rhs
                                          POP __lhs
                                          ADD __res __lhs __rhs
                                          PUSH __res
                                    POP __offset
                                    POP __pointer
                                    PUSH __pointer[__offset]
                                 POP __arg0
                              // Pushing args in reverse order
                              PUSH __arg0
                              // *** strlen
                              CALL __main____strlen__char__1
                              // Remove args
                              POP __void
                              RESPONSE __retval
                              PUSH __retval
                        // RHS
                           // Int Literal
                              PUSH 1
                        POP __rhs
                        POP __lhs
                        SUBTRACT __res __lhs __rhs
                        PUSH __res
                     POP __arg2
                     POP __arg1
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg2
                  PUSH __arg1
                  PUSH __arg0
                  // *** build_element
                  CALL __main____build_element__char__1__int__int
                  // Remove args
                  POP __void
                  POP __void
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__for__113__block__114__p0 0
            POP __rhs
            ASSIGN __main__for__113__block__114__p0 __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Method Call - Vector<:Element:>::pushBack(Element) -> void
            // LHS
               // Identifier - elements
                  PUSH __main__elements
            // RHS
            // Arguments
               // Member Accessor
                  // LHS
                     // Identifier - p0
                        PUSH __main__for__113__block__114__p0
                  // RHS
                     PUSH __field____main____Pair__Element__int____a
                  POP __child
                  POP __parent
                  PUSH __parent[__child]
               POP __arg0
            POP __obj
            // Pushing args in reverse order
            PUSH __arg0
            PUSH __obj
            CALL __method____main____Vector__Element____pushBack__Element
            POP __void
            // Remove args
            POP __void
            RESPONSE __retval
            PUSH __retval
         // Statement results can be ignored
         POP __void
         // Free Operator
            // RHS
               // Identifier - p0
                  PUSH __main__for__113__block__114__p0
            // Free array
            POP __array
            FREE __array
            PUSH __array
         // Statement results can be ignored
         POP __void
      //------------------------------------------------------------------
   // Repeat
   JUMP __for__113
   // End of For
   __endfor__113:
//------------------------------------------------------------------------
//========================================================================
// Function Declaration - bubbleSort(Vector<:Element:>) -> void
JUMP __end____main____bubbleSort__Vector__tparam0__Element
__main____bubbleSort__Vector__tparam0__Element:
   // Parameters
      // Param: arr
      STACKGET __main__bubbleSort__arr 0
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Assignment - '='
            // RHS
               // Int Literal
                  PUSH 1
            // LHS
               // Variable Declaration
                  ASSIGN __main__bubbleSort__block__116__RIGHT_ORDER 0
            POP __rhs
            ASSIGN __main__bubbleSort__block__116__RIGHT_ORDER __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Negative
                  // RHS
                     // Int Literal
                        PUSH 1
                  POP __rhs
                  SUBTRACT __res 0 __rhs
                  PUSH __res
            // LHS
               // Variable Declaration
                  ASSIGN __main__bubbleSort__block__116__CONTINUE 0
            POP __rhs
            ASSIGN __main__bubbleSort__block__116__CONTINUE __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Int Literal
                  PUSH 0
            // LHS
               // Variable Declaration
                  ASSIGN __main__bubbleSort__block__116__WRONG_ORDER 0
            POP __rhs
            ASSIGN __main__bubbleSort__block__116__WRONG_ORDER __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Int Literal
                  PUSH 1
            // LHS
               // Variable Declaration
                  ASSIGN __main__bubbleSort__block__116__hasSwapped 0
            POP __rhs
            ASSIGN __main__bubbleSort__block__116__hasSwapped __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Assignment - '='
            // RHS
               // Int Literal
                  PUSH 0
            // LHS
               // Variable Declaration
                  ASSIGN __main__bubbleSort__block__116__i 0
            POP __rhs
            ASSIGN __main__bubbleSort__block__116__i __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // While-Loop
         __while__117:
            // Condition
               // Identifier - hasSwapped
                  PUSH __main__bubbleSort__block__116__hasSwapped
               POP __cond
               CMP __cond 0
               JEQ __endwhile__117
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment - '='
                     // RHS
                        // Int Literal
                           PUSH 0
                     POP __rhs
                     ASSIGN __main__bubbleSort__block__116__hasSwapped __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  //------------------------------------------------------
                  // For-Loop
                  // Init
                     // Assignment - '='
                        // RHS
                           // Int Literal
                              PUSH 1
                        // LHS
                           // Variable Declaration
                              ASSIGN __main__bubbleSort__block__116__while__117__block__118__for__119__i 0
                        POP __rhs
                        ASSIGN __main__bubbleSort__block__116__while__117__block__118__for__119__i __rhs
                        PUSH __rhs
                  JUMP __forcond__119
                  __for__119:
                     // Update
                        // Pre-Increment
                           // RHS
                              // Identifier - i
                                 PUSH __main__bubbleSort__block__116__while__117__block__118__for__119__i
                           POP __rhs
                           ADD __main__bubbleSort__block__116__while__117__block__118__for__119__i __main__bubbleSort__block__116__while__117__block__118__for__119__i 1
                           ASSIGN __res __main__bubbleSort__block__116__while__117__block__118__for__119__i
                           PUSH __res
                     __forcond__119:
                     // Condition
                        // Less Than
                           // LHS
                              // Identifier - i
                                 PUSH __main__bubbleSort__block__116__while__117__block__118__for__119__i
                           // RHS
                              // Member Accessor
                                 // LHS
                                    // Identifier - arr
                                       PUSH __main__bubbleSort__arr
                                 // RHS
                                    PUSH __field____main____Vector__Element____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           POP __rhs
                           POP __lhs
                           LT __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endfor__119
                     // Body
                        //------------------------------------------------
                        // Code Block
                           // Assignment - '='
                              // RHS
                                 // Function Call - is_correct_order(Element, Element) -> int
                                    // Arguments
                                       // Subscript
                                          // LHS
                                             // Member Accessor
                                                // LHS
                                                   // Identifier - arr
                                                      PUSH __main__bubbleSort__arr
                                                // RHS
                                                   PUSH __field____main____Vector__Element____data
                                                POP __child
                                                POP __parent
                                                PUSH __parent[__child]
                                          // OFFSET
                                             // Subtraction
                                                // LHS
                                                   // Identifier - i
                                                      PUSH __main__bubbleSort__block__116__while__117__block__118__for__119__i
                                                // RHS
                                                   // Int Literal
                                                      PUSH 1
                                                POP __rhs
                                                POP __lhs
                                                SUBTRACT __res __lhs __rhs
                                                PUSH __res
                                          POP __offset
                                          POP __pointer
                                          PUSH __pointer[__offset]
                                       // Subscript
                                          // LHS
                                             // Member Accessor
                                                // LHS
                                                   // Identifier - arr
                                                      PUSH __main__bubbleSort__arr
                                                // RHS
                                                   PUSH __field____main____Vector__Element____data
                                                POP __child
                                                POP __parent
                                                PUSH __parent[__child]
                                          // OFFSET
                                             // Identifier - i
                                                PUSH __main__bubbleSort__block__116__while__117__block__118__for__119__i
                                          POP __offset
                                          POP __pointer
                                          PUSH __pointer[__offset]
                                       POP __arg1
                                       POP __arg0
                                    // Pushing args in reverse order
                                    PUSH __arg1
                                    PUSH __arg0
                                    // *** is_correct_order
                                    CALL __main____is_correct_order__Element__Element
                                    // Remove args
                                    POP __void
                                    POP __void
                                    RESPONSE __retval
                                    PUSH __retval
                              // LHS
                                 // Variable Declaration
                                    ASSIGN __main__bubbleSort__block__116__while__117__block__118__for__119__block__120__res 0
                              POP __rhs
                              ASSIGN __main__bubbleSort__block__116__while__117__block__118__for__119__block__120__res __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           //---------------------------------------------
                           // If-Statement
                              // Condition
                                 // Equal
                                    // LHS
                                       // Identifier - res
                                          PUSH __main__bubbleSort__block__116__while__117__block__118__for__119__block__120__res
                                    // RHS
                                       // Identifier - WRONG_ORDER
                                          PUSH __main__bubbleSort__block__116__WRONG_ORDER
                                    POP __rhs
                                    POP __lhs
                                    EQUAL __res __lhs __rhs
                                    PUSH __res
                                 POP __cond
                                 CMP __cond 0
                                 JEQ __endif__121
                              // Body
                                 //---------------------------------------
                                 // Code Block
                                    // Assignment - '='
                                       // RHS
                                          // Method Call - Vector<:Element:>::get(int) -> Element
                                             // LHS
                                                // Identifier - arr
                                                   PUSH __main__bubbleSort__arr
                                             // RHS
                                             // Arguments
                                                // Subtraction
                                                   // LHS
                                                      // Identifier - i
                                                         PUSH __main__bubbleSort__block__116__while__117__block__118__for__119__i
                                                   // RHS
                                                      // Int Literal
                                                         PUSH 1
                                                   POP __rhs
                                                   POP __lhs
                                                   SUBTRACT __res __lhs __rhs
                                                   PUSH __res
                                                POP __arg0
                                             POP __obj
                                             // Pushing args in reverse order
                                             PUSH __arg0
                                             PUSH __obj
                                             CALL __method____main____Vector__Element____get__int
                                             POP __void
                                             // Remove args
                                             POP __void
                                             RESPONSE __retval
                                             PUSH __retval
                                       // LHS
                                          // Variable Declaration
                                             ASSIGN __main__bubbleSort__block__116__while__117__block__118__for__119__block__120__if__121__block__122__temp 0
                                       POP __rhs
                                       ASSIGN __main__bubbleSort__block__116__while__117__block__118__for__119__block__120__if__121__block__122__temp __rhs
                                       PUSH __rhs
                                    // Statement results can be ignored
                                    POP __void
                                    // Method Call - Vector<:Element:>::set(int, Element) -> void
                                       // LHS
                                          // Identifier - arr
                                             PUSH __main__bubbleSort__arr
                                       // RHS
                                       // Arguments
                                          // Subtraction
                                             // LHS
                                                // Identifier - i
                                                   PUSH __main__bubbleSort__block__116__while__117__block__118__for__119__i
                                             // RHS
                                                // Int Literal
                                                   PUSH 1
                                             POP __rhs
                                             POP __lhs
                                             SUBTRACT __res __lhs __rhs
                                             PUSH __res
                                          // Method Call - Vector<:Element:>::get(int) -> Element
                                             // LHS
                                                // Identifier - arr
                                                   PUSH __main__bubbleSort__arr
                                             // RHS
                                             // Arguments
                                                // Identifier - i
                                                   PUSH __main__bubbleSort__block__116__while__117__block__118__for__119__i
                                                POP __arg0
                                             POP __obj
                                             // Pushing args in reverse order
                                             PUSH __arg0
                                             PUSH __obj
                                             CALL __method____main____Vector__Element____get__int
                                             POP __void
                                             // Remove args
                                             POP __void
                                             RESPONSE __retval
                                             PUSH __retval
                                          POP __arg1
                                          POP __arg0
                                       POP __obj
                                       // Pushing args in reverse order
                                       PUSH __arg1
                                       PUSH __arg0
                                       PUSH __obj
                                       CALL __method____main____Vector__Element____set__int__Element
                                       POP __void
                                       // Remove args
                                       POP __void
                                       POP __void
                                       RESPONSE __retval
                                       PUSH __retval
                                    // Statement results can be ignored
                                    POP __void
                                    // Method Call - Vector<:Element:>::set(int, Element) -> void
                                       // LHS
                                          // Identifier - arr
                                             PUSH __main__bubbleSort__arr
                                       // RHS
                                       // Arguments
                                          // Identifier - i
                                             PUSH __main__bubbleSort__block__116__while__117__block__118__for__119__i
                                          // Identifier - temp
                                             PUSH __main__bubbleSort__block__116__while__117__block__118__for__119__block__120__if__121__block__122__temp
                                          POP __arg1
                                          POP __arg0
                                       POP __obj
                                       // Pushing args in reverse order
                                       PUSH __arg1
                                       PUSH __arg0
                                       PUSH __obj
                                       CALL __method____main____Vector__Element____set__int__Element
                                       POP __void
                                       // Remove args
                                       POP __void
                                       POP __void
                                       RESPONSE __retval
                                       PUSH __retval
                                    // Statement results can be ignored
                                    POP __void
                                    // Assignment - '='
                                       // RHS
                                          // Int Literal
                                             PUSH 1
                                       POP __rhs
                                       ASSIGN __main__bubbleSort__block__116__hasSwapped __rhs
                                       PUSH __rhs
                                    // Statement results can be ignored
                                    POP __void
                                 //---------------------------------------
                              JUMP __endif__121
                              // End of if
                              __endif__121:
                           //---------------------------------------------
                        //------------------------------------------------
                     // Repeat
                     JUMP __for__119
                     // End of For
                     __endfor__119:
                  //------------------------------------------------------
               //---------------------------------------------------------
            JUMP __while__117
            // End of While
            __endwhile__117:
         //---------------------------------------------------------------
      //------------------------------------------------------------------
   RETURN 0
__end____main____bubbleSort__Vector__tparam0__Element:
// End Function Declaration - __main____bubbleSort__Vector__tparam0__Element
//========================================================================

// Function Call - bubbleSort(Vector<:Element:>) -> void
   // Arguments
      // Identifier - elements
         PUSH __main__elements
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** bubbleSort
   CALL __main____bubbleSort__Vector__tparam0__Element
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Assignment - '='
   // RHS
      // Int Literal
         PUSH 0
   // LHS
      // Variable Declaration
         ASSIGN __main__divider2i 0
   POP __rhs
   ASSIGN __main__divider2i __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Assignment - '='
   // RHS
      // Int Literal
         PUSH 0
   // LHS
      // Variable Declaration
         ASSIGN __main__divider6i 0
   POP __rhs
   ASSIGN __main__divider6i __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
//------------------------------------------------------------------------
// For-Loop
// Init
   // Assignment - '='
      // RHS
         // Int Literal
            PUSH 0
      // LHS
         // Variable Declaration
            ASSIGN __main__for__123__i 0
      POP __rhs
      ASSIGN __main__for__123__i __rhs
      PUSH __rhs
JUMP __forcond__123
__for__123:
   // Update
      // Pre-Increment
         // RHS
            // Identifier - i
               PUSH __main__for__123__i
         POP __rhs
         ADD __main__for__123__i __main__for__123__i 1
         ASSIGN __res __main__for__123__i
         PUSH __res
   __forcond__123:
   // Condition
      // Less Than
         // LHS
            // Identifier - i
               PUSH __main__for__123__i
         // RHS
            // Member Accessor
               // LHS
                  // Identifier - elements
                     PUSH __main__elements
               // RHS
                  PUSH __field____main____Vector__Element____size
               POP __child
               POP __parent
               PUSH __parent[__child]
         POP __rhs
         POP __lhs
         LT __res __lhs __rhs
         PUSH __res
      POP __cond
      CMP __cond 0
      JEQ __endfor__123
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Equal
                  // LHS
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // Identifier - elements
                                    PUSH __main__elements
                              // RHS
                                 PUSH __field____main____Vector__Element____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Identifier - i
                              PUSH __main__for__123__i
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                  // RHS
                     // Identifier - divider2
                        PUSH __main__divider2
                  POP __rhs
                  POP __lhs
                  EQUAL __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__125
            // Body
               // Assignment - '='
                  // RHS
                     // Addition
                        // LHS
                           // Identifier - i
                              PUSH __main__for__123__i
                        // RHS
                           // Int Literal
                              PUSH 1
                        POP __rhs
                        POP __lhs
                        ADD __res __lhs __rhs
                        PUSH __res
                  POP __rhs
                  ASSIGN __main__divider2i __rhs
                  PUSH __rhs
               // Statement results can be ignored
               POP __void
            JUMP __endif__125
            // End of if
            __endif__125:
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Equal
                  // LHS
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // Identifier - elements
                                    PUSH __main__elements
                              // RHS
                                 PUSH __field____main____Vector__Element____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Identifier - i
                              PUSH __main__for__123__i
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                  // RHS
                     // Identifier - divider6
                        PUSH __main__divider6
                  POP __rhs
                  POP __lhs
                  EQUAL __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__126
            // Body
               // Assignment - '='
                  // RHS
                     // Addition
                        // LHS
                           // Identifier - i
                              PUSH __main__for__123__i
                        // RHS
                           // Int Literal
                              PUSH 1
                        POP __rhs
                        POP __lhs
                        ADD __res __lhs __rhs
                        PUSH __res
                  POP __rhs
                  ASSIGN __main__divider6i __rhs
                  PUSH __rhs
               // Statement results can be ignored
               POP __void
            JUMP __endif__126
            // End of if
            __endif__126:
         //---------------------------------------------------------------
      //------------------------------------------------------------------
   // Repeat
   JUMP __for__123
   // End of For
   __endfor__123:
//------------------------------------------------------------------------
// Function Call - println(int) -> void
   // Arguments
      // Multiplication
         // LHS
            // Identifier - divider2i
               PUSH __main__divider2i
         // RHS
            // Identifier - divider6i
               PUSH __main__divider6i
         POP __rhs
         POP __lhs
         MULTIPLY __res __lhs __rhs
         PUSH __res
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL __builtin__println__int
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
//========================================================================
//### END OF CODE ########################################################
//========================================================================

