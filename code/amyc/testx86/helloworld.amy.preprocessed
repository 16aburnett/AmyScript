// AmyScript compiled to x86-64 test 

// test integer arithmetic + local variables
{
    int x = (-17 + 42 * (2 + 2) + 1) * -1 % 3;
    int y = x * 23;
    println (y / x);
}

// test chars 
{
    char c0 = '\101'; // octal for 'A' ;)
    char c1 = 'm';
    char c2 = 'y';
    char c3 = '\n';
    print (c0); print (c1); print (c2); print (c3);
}

// test strings
{
    char[] string0 = "\110ello, "; // \110 is octal for 'H' ;)
    char[] string1 = "World!";
    print (string0); print (string1); print ("\n");
}

// test conditionals 

{
    int x = 1; 
    int y = ~x;
    int z = x+y && ++y && --x && !x++;
    print (x); print (' '); print (y); print (' '); println (z);
    if (x == 1)
    {
        println ('A');
    }
    elif (y != -1) println ('B');
    else println ('C');

    print ("x: "); println (x);
    print (" x <  0 -> "); println (x < 0);
    print (" x <= 0 -> "); println (x <= 0);
    print (" x == 0 -> "); println (x == 0);
    print (" x >= 0 -> "); println (x >= 0);
    print (" x >  0 -> "); println (x > 0);

    if (y < 0)
        println ("y < 0");
    elif (y == 0)
        println ("y == 0");
    elif (y > 0)
        println ("y > 0");

    if (z <= 0)
        if (z < 0)
            println ("z < 0");
        else 
            println ("z == 0");
    elif (z > 0)
        println ("z > 0");

}

// test loops
{
    for (int i = 0; i < 10; ++i)
    {
        print (i);
        print (' ');
    }
    println();

    // test break
    for (int i = 10; i > -5; --i)
    {
        print (i);
        print (' ');
        if (i <= 0)
            break;
    }
    println ();

    // test while 
    int j = 1;
    while (j < 100)
    {  
        print (j*j);
        print (' ');
        ++j;
        if (j < 10) 
            continue;
        else
            break;
        --j; // dead code
    }
    println ();

    // for-else??
}

// test functions

{
    function int mul2 (int a)
    {
        return a * 2;
    }

    println (mul2 (mul2 (mul2 (16))));

    function int add (int a, int b, int c)
    {
        int d = a + b + c;
        return d; 
    }

    print ("add (7, 4, 21) -> ");
    println (add (7, 4, 21));

    int x = 10;

    function int mulx (int a)
    {
        return a * x;
    }

    print ("x = "); print (x); print ("; mulx (7) -> "); println (mulx(7));

}

// test conversions
println ("=== Testing Conversions ===");
{
    // string to int 
    print  ("stringToInt (\"-47\") - 2 = "); 
    println (stringToInt ( "-47 ") - 2);

    // string to float
    print  ("stringToFloat (\"31415e-4\") = "); 
    println (stringToFloat ( "31415e-4"));

}

// test integer arithmetic
println ("=== Testing Integer Arithmetic ===");
{
    // negate 
    print ("-(7) = "); println (-(7));
    print ("-(-(7)) = "); println (-(-(7)));

    // addition
    print ("7 + 14 = "); println (7 + 14);
    print ("-43 + 3 + -7 + 3 = "); println (-43 + 3 + -7 + 3);
    
    // subtraction
    print (" 7 -  14 = "); println ( 7 -  14);
    print ("-7 - -14 = "); println (-7 - -14);
    print (" 7 - -14 = "); println ( 7 - -14);
    print ("-7 -  14 = "); println (-7 -  14);
    print ("-7 -  14 - 21 + -14 + 7 = "); println (-7 -  14 - 21 - -14 + 7 );
    
    // multiplication
    print (" 7 *  14 = "); println ( 7 *  14);
    print ("-7 * -14 = "); println (-7 * -14);
    print (" 7 * -14 = "); println ( 7 * -14);
    print ("-7 *  14 = "); println (-7 *  14);

    // division 
    print ("10 / 2 = "); println (10 / 2);
    print ("10 / 3 = "); println (10 / 3);
    print (" 1 / 2 = "); println (1 / 2);

    // mod 
    print ("10 % 3 = "); println (10 % 3);
    print ("10 % 2 = "); println (10 % 2);
    print ("4526 % 645 = "); println (4526 % 645);
    print ("-10 % 3 = "); println (-10 % 3);
    print (" 1 % 2 = "); println (1 % 2);

    // all together now
    print ("((7 - 49) / 2 * -1 + 3 * 3) % (3 + 4) == 2 = "); println (((7 - 49) / 2 * -1 + 3 * 3) % (3 + 4) == 2);

}

// test floating point arithmetic 
println ("=== Testing Floating Point Arithmetic ===");
{
    // addition 
    float x = 3.14;
    float y = 0.0015;
    print ("3.14 + 0.0015 = "); println (x + y);
    print ("64.0 + 8.123 + 0.63001 = "); println (64.0 + 8.123 + 0.63001 );

    // negate 
    print ("-(3.14) = "); println (-(3.14));

    // subtraction 
    print ("3.14159 - 1.234 = "); println (3.14159 - 1.234);

    // multiplication 
    print ("1.5943 * 2.0 = "); println (1.5943 * 2.0);
    print ("0.000043 * 1.0e5 = "); println (0.000043 * 1.0e5);

    // division 
    print ("42.5 / 2.0 = "); println (42.5 / 2.0);
    print ("12.5 / 0.125 = "); println (12.5 / 0.125);

    // all together now 
}

exit (0);

// test input
{
    // read a line
    print ("Enter a phrase => ");
    char[] line = input();
    // then output that line that we read
    print (line);
    // ** need to free line

    // get an integer
    print ("Enter integer ==> ");
    line = input();
    int x = stringToInt (line);
    // ** need to free line
    print ("x * x => "); println (x*x);

    // get a float
    print ("Enter float ==> ");
    line = input();
    // ** need to free line
    float y = stringToFloat (line);
    print ("y => "); println (y);

}







exit (0);
