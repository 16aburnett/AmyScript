// AmyAssembly compiled from AmyScript
//========================================================================

//========================================================================
//### LIBRARY CODE #######################################################
//========================================================================

// AmyScript Built-in library
// Author: Amy Burnett
//========================================================================
// Global Builtin Variables

    assign __null 0

//========================================================================
// dont execute library functions 

jump __endOfLibrary

//========================================================================
// Prints a given string to the screen
// void print (char[] stringToPrint);
print__char__1:
    // grab string
    stackget __str 0
    sizeof __size __str
    // print each char
    // init
    assign __i 0
__print__char__1__loop:
    // cond
    cmp __i __size
    jge __print__char__1__endloop
    // Body
    print __str[__i]
    // update
    add __i __i 1
    // repeat
    jump __print__char__1__loop
__print__char__1__endloop:
    return 0

//========================================================================
// Prints an int to the screen
// void print (int intToPrint);
print__int:
    stackget __str 0
    print __str
    return 0

//========================================================================
// Prints a float to the screen
// void print (float floatToPrint);
print__float:
    stackget __str 0
    print __str
    return 0

//========================================================================
// Prints a char to the screen
// void print (char charToPrint);
print__char:
    // grab string
    stackget __char 0
    print __char
    return 0

//========================================================================
// Prints an enum's integer value 
// void print (Enum e);
print__Enum:
    stackget __e 0
    print __e
    return 0

//========================================================================
// Prints a given string to the screen with a newline at the end
// void println (char[] stringToPrint);
println__char__1:
    // grab string
    stackget __str 0
    sizeof __size __str
    // print each char
    // init
    assign __i 0
__println__char__1__loop:
    // cond
    cmp __i __size
    jge __println__char__1__endloop
    // Body
    print __str[__i]
    // update
    add __i __i 1
    // repeat
    jump __println__char__1__loop
__println__char__1__endloop:
    println
    return 0

//========================================================================
// Prints an int to the screen with a newline
// void print (int intToPrint);
println__int:
    stackget __str 0
    println __str
    return 0

//========================================================================
// Prints a float to the screen with a newline
// void println (float floatToPrint);
println__float:
    stackget __str 0
    println __str
    return 0

//========================================================================
// Prints a char to the screen with a newline
// void println (char charToPrint);
println__char:
    // grab string
    stackget __char 0
    println __char
    return 0

//========================================================================
// Prints an enum's integer value with a newline
// void println (Enum e);
println__Enum:
    stackget __e 0
    println __e
    return 0

//========================================================================
// Prints a newline to the console
// void println ();
println:
    println 
    return 0

//========================================================================
// grabs input from the console 
// char[] input ();
input:
    input __line
    return __line

//========================================================================
// exits/stops the program 
exit:
    halt

//========================================================================

// Exits the program with the given exit code 
// void exit(int exit_code)
// - exit_code : 
exit__int:
    // ** not implemented for amyasm
    halt 

//========================================================================
// returns default float value
// float float ();
float:
    return 0.0

//========================================================================
// converts int to float
// float intToFloat (int);
intToFloat__int:
    stackget val 0
    itof res val
    return res

//========================================================================
// parses a float from a given char[]
// float stringToFloat (char[]);
stringToFloat__char__1:
    stackget val 0
    stof res val
    return res

//========================================================================
// returns default int value
// int int ();
int:
    return 0

//========================================================================
// returns default char value
// char char ();
char:
    return '0'

//========================================================================
// converts float to int
// int floatToInt (float);
floatToInt__float:
    stackget val 0
    ftoi res val
    return res

//========================================================================
// parses an int from a given char[]
// int stringToInt (char[]);
stringToInt__char__1:
    stackget val 0
    stoi res val
    return res

//========================================================================
// parses an int from a given char
// int charToInt (char);
charToInt__char:
    stackget val 0
    ctoi res val
    return res

//========================================================================
// converts int to string
// char[] string (int);
string__int:
    stackget val 0
    string res val
    return res

//========================================================================
// converts float to string
// char[] string (float);
string__float:
    stackget val 0
    string res val
    return res

//========================================================================

// returns default value for array and object (null)
// null null ();
null:
    return __null

//========================================================================

__endOfLibrary:
    //push prompt
    //call print

    //call input
    //response name

    //push name
    //call println

//========================================================================
//### COMPILED CODE ######################################################
//========================================================================

//========================================================================
// Class Declaration - __main____IntArray inherits __main__Object
   // Creating Dispatch Table
      MALLOC __dtable____main____IntArray 4
      // Populate Dispatch Table
      ASSIGN __dtable____main____IntArray[0] __method____main____IntArray____pushBack__int
      ASSIGN __dtable____main____IntArray[1] __method____main____IntArray____popBack
      ASSIGN __dtable____main____IntArray[2] __method____main____IntArray____get__int
      ASSIGN __dtable____main____IntArray[3] __method____main____IntArray____set__int__int
   //---------------------------------------------------------------------
   // Field - int[] IntArray::data
   ASSIGN __field____main____IntArray____data 1
   //---------------------------------------------------------------------
   //---------------------------------------------------------------------
   // Field - int IntArray::size
   ASSIGN __field____main____IntArray____size 2
   //---------------------------------------------------------------------
   //---------------------------------------------------------------------
   // Field - int IntArray::capacity
   ASSIGN __field____main____IntArray____capacity 3
   //---------------------------------------------------------------------
// skip over class methods
JUMP __endclass____main____IntArray
   //---------------------------------------------------------------------
   // Constructor Declaration - IntArray::IntArray() -> IntArray
   JUMP __end__ctor____main____IntArray____IntArray
   __ctor____main____IntArray____IntArray:
      // Creating Class Instance
         MALLOC __this 4
         // Add Dispatch Table
         ASSIGN __this[0] __dtable____main____IntArray
      // Parameters
      // Body
         //---------------------------------------------------------------
         // Code Block
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 10
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____IntArray____capacity
                     POP __child
                     POP __parent
                     POP __rhs
               ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____IntArray____size
                     POP __child
                     POP __parent
                     POP __rhs
               ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
            // Assignment - '='
               // RHS
                  // Array Allocator
                     // Member Accessor
                        // LHS
                           // This keyword
                              PUSH __this
                        // RHS
                           PUSH __field____main____IntArray____capacity
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                     POP __size
                     MALLOC __ptr __size
                     PUSH __ptr
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____IntArray____data
                     POP __child
                     POP __parent
                     POP __rhs
               ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
         //---------------------------------------------------------------
      RETURN __this
   __end__ctor____main____IntArray____IntArray:
   // End Constructor Declaration - __ctor____main____IntArray____IntArray
   //---------------------------------------------------------------------

   //---------------------------------------------------------------------
   // Method Declaration - IntArray::pushBack(int) -> void
   JUMP __end__method____main____IntArray____pushBack__int
   __method____main____IntArray____pushBack__int:
      // Class Instance
         STACKGET __this 0
      // Parameters
         // Param: val
         STACKGET __main____IntArray__pushBack__val 1
      // Body
         //---------------------------------------------------------------
         // Code Block
            //------------------------------------------------------------
            // If-Statement
               // Condition
                  // Greater Than or Equal to
                     // LHS
                        // Addition
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____IntArray____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              // Int Literal
                                 PUSH 1
                           POP __rhs
                           POP __lhs
                           ADD __res __lhs __rhs
                           PUSH __res
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____IntArray____capacity
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     POP __rhs
                     POP __lhs
                     GE __res __lhs __rhs
                     PUSH __res
                  POP __cond
                  CMP __cond 0
                  JEQ __endif__2
               // Body
                  //------------------------------------------------------
                  // Code Block
                     // Assignment - '='
                        // RHS
                           // Multiplication
                              // LHS
                                 // Member Accessor
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____IntArray____capacity
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              // RHS
                                 // Int Literal
                                    PUSH 2
                              POP __rhs
                              POP __lhs
                              MULTIPLY __res __lhs __rhs
                              PUSH __res
                        // LHS
                           // Member Accessor Assignment
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____IntArray____capacity
                              POP __child
                              POP __parent
                              POP __rhs
                        ASSIGN __parent[__child] __rhs
                        PUSH __rhs
                     // Statement results can be ignored
                     POP __void
                     // Assignment - '='
                        // RHS
                           // Array Allocator
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____IntArray____capacity
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                              POP __size
                              MALLOC __ptr __size
                              PUSH __ptr
                        // LHS
                           // Variable Declaration
                              ASSIGN __main____IntArray__pushBack__block__1__if__2__block__3__nData 0
                        POP __rhs
                        ASSIGN __main____IntArray__pushBack__block__1__if__2__block__3__nData __rhs
                        PUSH __rhs
                     // Statement results can be ignored
                     POP __void
                     //---------------------------------------------------
                     // For-Loop
                     // Init
                        // Assignment - '='
                           // RHS
                              // Int Literal
                                 PUSH 0
                           // LHS
                              // Variable Declaration
                                 ASSIGN __main____IntArray__pushBack__block__1__if__2__block__3__for__4__i 0
                           POP __rhs
                           ASSIGN __main____IntArray__pushBack__block__1__if__2__block__3__for__4__i __rhs
                           PUSH __rhs
                     JUMP __forcond__4
                     __for__4:
                        // Update
                           // Pre-Increment
                              // RHS
                                 // Identifier - i
                                    PUSH __main____IntArray__pushBack__block__1__if__2__block__3__for__4__i
                              POP __rhs
                              ADD __main____IntArray__pushBack__block__1__if__2__block__3__for__4__i __main____IntArray__pushBack__block__1__if__2__block__3__for__4__i 1
                              ASSIGN __res __main____IntArray__pushBack__block__1__if__2__block__3__for__4__i
                              PUSH __res
                        __forcond__4:
                        // Condition
                           // Less Than
                              // LHS
                                 // Identifier - i
                                    PUSH __main____IntArray__pushBack__block__1__if__2__block__3__for__4__i
                              // RHS
                                 // Member Accessor
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____IntArray____size
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              POP __rhs
                              POP __lhs
                              LT __res __lhs __rhs
                              PUSH __res
                           POP __cond
                           CMP __cond 0
                           JEQ __endfor__4
                        // Body
                           //---------------------------------------------
                           // Code Block
                              // Assignment - '='
                                 // RHS
                                    // Subscript
                                       // LHS
                                          // Member Accessor
                                             // LHS
                                                // This keyword
                                                   PUSH __this
                                             // RHS
                                                PUSH __field____main____IntArray____data
                                             POP __child
                                             POP __parent
                                             PUSH __parent[__child]
                                       // OFFSET
                                          // Identifier - i
                                             PUSH __main____IntArray__pushBack__block__1__if__2__block__3__for__4__i
                                       POP __offset
                                       POP __pointer
                                       PUSH __pointer[__offset]
                                 // LHS
                                    // Subscript assignment
                                       // LHS
                                          // Identifier - nData
                                             PUSH __main____IntArray__pushBack__block__1__if__2__block__3__nData
                                       // OFFSET
                                          // Identifier - i
                                             PUSH __main____IntArray__pushBack__block__1__if__2__block__3__for__4__i
                                       POP __offset
                                       POP __pointer
                                 POP __rhs
                                 ASSIGN __pointer[__offset] __rhs
                                 PUSH __rhs
                              // Statement results can be ignored
                              POP __void
                           //---------------------------------------------
                        // Repeat
                        JUMP __for__4
                        // End of For
                        __endfor__4:
                     //---------------------------------------------------
                     // Free Operator
                        // RHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____IntArray____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // Free array
                        POP __array
                        FREE __array
                        PUSH __array
                     // Statement results can be ignored
                     POP __void
                     // Assignment - '='
                        // RHS
                           // Identifier - nData
                              PUSH __main____IntArray__pushBack__block__1__if__2__block__3__nData
                        // LHS
                           // Member Accessor Assignment
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____IntArray____data
                              POP __child
                              POP __parent
                              POP __rhs
                        ASSIGN __parent[__child] __rhs
                        PUSH __rhs
                     // Statement results can be ignored
                     POP __void
                  //------------------------------------------------------
               JUMP __endif__2
               // End of if
               __endif__2:
            //------------------------------------------------------------
            // Assignment - '='
               // RHS
                  // Identifier - val
                     PUSH __main____IntArray__pushBack__val
               // LHS
                  // Subscript assignment
                     // LHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____IntArray____data
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // OFFSET
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____IntArray____size
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     POP __offset
                     POP __pointer
               POP __rhs
               ASSIGN __pointer[__offset] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
            // Pre-Increment
               // RHS
                  // Member Accessor
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____IntArray____size
                     POP __child
                     POP __parent
                     PUSH __parent[__child]
               POP __rhs
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____IntArray____size
                     POP __child
                     POP __parent
                     ADD __parent[__child] __parent[__child] 1
                     ASSIGN __res __parent[__child]
               PUSH __res
            // Statement results can be ignored
            POP __void
         //---------------------------------------------------------------
      RETURN 0
   __end__method____main____IntArray____pushBack__int:
   // End Method Declaration - __method____main____IntArray____pushBack__int
   //---------------------------------------------------------------------

   //---------------------------------------------------------------------
   // Method Declaration - IntArray::popBack() -> int
   JUMP __end__method____main____IntArray____popBack
   __method____main____IntArray____popBack:
      // Class Instance
         STACKGET __this 0
      // Parameters
      // Body
         //---------------------------------------------------------------
         // Code Block
            // Assignment - '-='
               // RHS
                  // Int Literal
                     PUSH 1
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____IntArray____size
                     POP __child
                     POP __parent
                     POP __rhs
               SUBTRACT __parent[__child] __parent[__child] __rhs
               PUSH __parent[__child]
            // Statement results can be ignored
            POP __void
            // Return
               // Subscript
                  // LHS
                     // Member Accessor
                        // LHS
                           // This keyword
                              PUSH __this
                        // RHS
                           PUSH __field____main____IntArray____data
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                  // OFFSET
                     // Addition
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____IntArray____size
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // RHS
                           // Int Literal
                              PUSH 1
                        POP __rhs
                        POP __lhs
                        ADD __res __lhs __rhs
                        PUSH __res
                  POP __offset
                  POP __pointer
                  PUSH __pointer[__offset]
               POP __rVal
               RETURN __rVal
         //---------------------------------------------------------------
      RETURN 0
   __end__method____main____IntArray____popBack:
   // End Method Declaration - __method____main____IntArray____popBack
   //---------------------------------------------------------------------

   //---------------------------------------------------------------------
   // Method Declaration - IntArray::get(int) -> int
   JUMP __end__method____main____IntArray____get__int
   __method____main____IntArray____get__int:
      // Class Instance
         STACKGET __this 0
      // Parameters
         // Param: index
         STACKGET __main____IntArray__get__index 1
      // Body
         //---------------------------------------------------------------
         // Code Block
            // Return
               // Subscript
                  // LHS
                     // Member Accessor
                        // LHS
                           // This keyword
                              PUSH __this
                        // RHS
                           PUSH __field____main____IntArray____data
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                  // OFFSET
                     // Identifier - index
                        PUSH __main____IntArray__get__index
                  POP __offset
                  POP __pointer
                  PUSH __pointer[__offset]
               POP __rVal
               RETURN __rVal
         //---------------------------------------------------------------
      RETURN 0
   __end__method____main____IntArray____get__int:
   // End Method Declaration - __method____main____IntArray____get__int
   //---------------------------------------------------------------------

   //---------------------------------------------------------------------
   // Method Declaration - IntArray::set(int, int) -> void
   JUMP __end__method____main____IntArray____set__int__int
   __method____main____IntArray____set__int__int:
      // Class Instance
         STACKGET __this 0
      // Parameters
         // Param: index
         STACKGET __main____IntArray__set__index 1
         // Param: value
         STACKGET __main____IntArray__set__value 2
      // Body
         //---------------------------------------------------------------
         // Code Block
            // Assignment - '='
               // RHS
                  // Identifier - value
                     PUSH __main____IntArray__set__value
               // LHS
                  // Subscript assignment
                     // LHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____IntArray____data
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // OFFSET
                        // Identifier - index
                           PUSH __main____IntArray__set__index
                     POP __offset
                     POP __pointer
               POP __rhs
               ASSIGN __pointer[__offset] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
         //---------------------------------------------------------------
      RETURN 0
   __end__method____main____IntArray____set__int__int:
   // End Method Declaration - __method____main____IntArray____set__int__int
   //---------------------------------------------------------------------

__endclass____main____IntArray:
// End Class Declaration - __main____IntArray
//========================================================================

//========================================================================
// Function Declaration - print(IntArray) -> void
JUMP __end____main____print__IntArray
__main____print__IntArray:
   // Parameters
      // Param: arr
      STACKGET __main__print__arr 0
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Function Call - print(char) -> void
            // Arguments
               // Char Literal
                  PUSH '['
               POP __arg0
            // Pushing args in reverse order
            PUSH __arg0
            // *** print
            CALL print__char
            // Remove args
            POP __void
            RESPONSE __retval
            PUSH __retval
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Not Equal
                  // LHS
                     // Member Accessor
                        // LHS
                           // Identifier - arr
                              PUSH __main__print__arr
                        // RHS
                           PUSH __field____main____IntArray____size
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                  // RHS
                     // Int Literal
                        PUSH 0
                  POP __rhs
                  POP __lhs
                  NEQUAL __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__10
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Function Call - print(int) -> void
                     // Arguments
                        // Subscript
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // Identifier - arr
                                       PUSH __main__print__arr
                                 // RHS
                                    PUSH __field____main____IntArray____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // OFFSET
                              // Int Literal
                                 PUSH 0
                           POP __offset
                           POP __pointer
                           PUSH __pointer[__offset]
                        POP __arg0
                     // Pushing args in reverse order
                     PUSH __arg0
                     // *** print
                     CALL print__int
                     // Remove args
                     POP __void
                     RESPONSE __retval
                     PUSH __retval
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            JUMP __endif__10
            // End of if
            __endif__10:
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // For-Loop
         // Init
            // Assignment - '='
               // RHS
                  // Int Literal
                     PUSH 1
               // LHS
                  // Variable Declaration
                     ASSIGN __main__print__block__9__for__12__i 0
               POP __rhs
               ASSIGN __main__print__block__9__for__12__i __rhs
               PUSH __rhs
         JUMP __forcond__12
         __for__12:
            // Update
               // Pre-Increment
                  // RHS
                     // Identifier - i
                        PUSH __main__print__block__9__for__12__i
                  POP __rhs
                  ADD __main__print__block__9__for__12__i __main__print__block__9__for__12__i 1
                  ASSIGN __res __main__print__block__9__for__12__i
                  PUSH __res
            __forcond__12:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - i
                        PUSH __main__print__block__9__for__12__i
                  // RHS
                     // Member Accessor
                        // LHS
                           // Identifier - arr
                              PUSH __main__print__arr
                        // RHS
                           PUSH __field____main____IntArray____size
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endfor__12
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Function Call - print(char) -> void
                     // Arguments
                        // Char Literal
                           PUSH ','
                        POP __arg0
                     // Pushing args in reverse order
                     PUSH __arg0
                     // *** print
                     CALL print__char
                     // Remove args
                     POP __void
                     RESPONSE __retval
                     PUSH __retval
                  // Statement results can be ignored
                  POP __void
                  // Function Call - print(char) -> void
                     // Arguments
                        // Char Literal
                           PUSH ' '
                        POP __arg0
                     // Pushing args in reverse order
                     PUSH __arg0
                     // *** print
                     CALL print__char
                     // Remove args
                     POP __void
                     RESPONSE __retval
                     PUSH __retval
                  // Statement results can be ignored
                  POP __void
                  // Function Call - print(int) -> void
                     // Arguments
                        // Subscript
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // Identifier - arr
                                       PUSH __main__print__arr
                                 // RHS
                                    PUSH __field____main____IntArray____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // OFFSET
                              // Identifier - i
                                 PUSH __main__print__block__9__for__12__i
                           POP __offset
                           POP __pointer
                           PUSH __pointer[__offset]
                        POP __arg0
                     // Pushing args in reverse order
                     PUSH __arg0
                     // *** print
                     CALL print__int
                     // Remove args
                     POP __void
                     RESPONSE __retval
                     PUSH __retval
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            // Repeat
            JUMP __for__12
            // End of For
            __endfor__12:
         //---------------------------------------------------------------
         // Function Call - print(char) -> void
            // Arguments
               // Char Literal
                  PUSH ']'
               POP __arg0
            // Pushing args in reverse order
            PUSH __arg0
            // *** print
            CALL print__char
            // Remove args
            POP __void
            RESPONSE __retval
            PUSH __retval
         // Statement results can be ignored
         POP __void
      //------------------------------------------------------------------
   RETURN 0
__end____main____print__IntArray:
// End Function Declaration - __main____print__IntArray
//========================================================================

//========================================================================
// Function Declaration - println(IntArray) -> void
JUMP __end____main____println__IntArray
__main____println__IntArray:
   // Parameters
      // Param: arr
      STACKGET __main__println__arr 0
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Function Call - print(IntArray) -> void
            // Arguments
               // Identifier - arr
                  PUSH __main__println__arr
               POP __arg0
            // Pushing args in reverse order
            PUSH __arg0
            // *** print
            CALL __main____print__IntArray
            // Remove args
            POP __void
            RESPONSE __retval
            PUSH __retval
         // Statement results can be ignored
         POP __void
         // Function Call - println() -> void
            // Arguments
            // Pushing args in reverse order
            // *** println
            CALL println
            // Remove args
            RESPONSE __retval
            PUSH __retval
         // Statement results can be ignored
         POP __void
      //------------------------------------------------------------------
   RETURN 0
__end____main____println__IntArray:
// End Function Declaration - __main____println__IntArray
//========================================================================

// Assignment - '='
   // RHS
      // Constructor Call - IntArray::IntArray() -> IntArray
         // Arguments
         // Pushing args in reverse order
         CALL __ctor____main____IntArray____IntArray
         // Remove args
         RESPONSE __retval
         PUSH __retval
   // LHS
      // Variable Declaration
         ASSIGN __main__arr 0
   POP __rhs
   ASSIGN __main__arr __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Function Call - println(IntArray) -> void
   // Arguments
      // Identifier - arr
         PUSH __main__arr
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL __main____println__IntArray
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - IntArray::pushBack(int) -> void
   // LHS
      // Identifier - arr
         PUSH __main__arr
   // RHS
   // Arguments
      // Int Literal
         PUSH 10
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____IntArray____pushBack__int
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(IntArray) -> void
   // Arguments
      // Identifier - arr
         PUSH __main__arr
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL __main____println__IntArray
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
//------------------------------------------------------------------------
// For-Loop
// Init
   // Assignment - '='
      // RHS
         // Int Literal
            PUSH 0
      // LHS
         // Variable Declaration
            ASSIGN __main__for__15__i 0
      POP __rhs
      ASSIGN __main__for__15__i __rhs
      PUSH __rhs
JUMP __forcond__15
__for__15:
   // Update
      // Pre-Increment
         // RHS
            // Identifier - i
               PUSH __main__for__15__i
         POP __rhs
         ADD __main__for__15__i __main__for__15__i 1
         ASSIGN __res __main__for__15__i
         PUSH __res
   __forcond__15:
   // Condition
      // Less Than
         // LHS
            // Identifier - i
               PUSH __main__for__15__i
         // RHS
            // Int Literal
               PUSH 5
         POP __rhs
         POP __lhs
         LT __res __lhs __rhs
         PUSH __res
      POP __cond
      CMP __cond 0
      JEQ __endfor__15
   // Body
      // Method Call - IntArray::pushBack(int) -> void
         // LHS
            // Identifier - arr
               PUSH __main__arr
         // RHS
         // Arguments
            // Multiplication
               // LHS
                  // Identifier - i
                     PUSH __main__for__15__i
               // RHS
                  // Int Literal
                     PUSH 2
               POP __rhs
               POP __lhs
               MULTIPLY __res __lhs __rhs
               PUSH __res
            POP __arg0
         POP __obj
         // Pushing args in reverse order
         PUSH __arg0
         PUSH __obj
         CALL __method____main____IntArray____pushBack__int
         POP __void
         // Remove args
         POP __void
         RESPONSE __retval
         PUSH __retval
      // Statement results can be ignored
      POP __void
   // Repeat
   JUMP __for__15
   // End of For
   __endfor__15:
//------------------------------------------------------------------------
// Function Call - println(IntArray) -> void
   // Arguments
      // Identifier - arr
         PUSH __main__arr
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL __main____println__IntArray
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - IntArray::popBack() -> int
   // LHS
      // Identifier - arr
         PUSH __main__arr
   // RHS
   // Arguments
   POP __obj
   // Pushing args in reverse order
   PUSH __obj
   CALL __method____main____IntArray____popBack
   POP __void
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(IntArray) -> void
   // Arguments
      // Identifier - arr
         PUSH __main__arr
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL __main____println__IntArray
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
//========================================================================
//### END OF CODE ########################################################
//========================================================================

