// AmyAssembly compiled from AmyScript
//========================================================================

//========================================================================
//### LIBRARY CODE #######################################################
//========================================================================

// AmyScript Built-in library
// Author: Amy Burnett
//========================================================================
// Global Builtin Variables

    assign __null 0

//========================================================================
// dont execute library functions 

jump __endOfLibrary

//========================================================================
// Prints a given string to the screen
// void print (char[] stringToPrint);
print__char__1:
    // grab string
    stackget __str 0
    sizeof __size __str
    // print each char
    // init
    assign __i 0
__print__char__1__loop:
    // cond
    cmp __i __size
    jge __print__char__1__endloop
    // Body
    print __str[__i]
    // update
    add __i __i 1
    // repeat
    jump __print__char__1__loop
__print__char__1__endloop:
    return 0

//========================================================================
// Prints an int to the screen
// void print (int intToPrint);
print__int:
    stackget __str 0
    print __str
    return 0

//========================================================================
// Prints a float to the screen
// void print (float floatToPrint);
print__float:
    stackget __str 0
    print __str
    return 0

//========================================================================
// Prints a char to the screen
// void print (char charToPrint);
print__char:
    // grab string
    stackget __char 0
    print __char
    return 0

//========================================================================
// Prints an enum's integer value 
// void print (Enum e);
print__Enum:
    stackget __e 0
    print __e
    return 0

//========================================================================
// Prints a given string to the screen with a newline at the end
// void println (char[] stringToPrint);
println__char__1:
    // grab string
    stackget __str 0
    sizeof __size __str
    // print each char
    // init
    assign __i 0
__println__char__1__loop:
    // cond
    cmp __i __size
    jge __println__char__1__endloop
    // Body
    print __str[__i]
    // update
    add __i __i 1
    // repeat
    jump __println__char__1__loop
__println__char__1__endloop:
    println
    return 0

//========================================================================
// Prints an int to the screen with a newline
// void print (int intToPrint);
println__int:
    stackget __str 0
    println __str
    return 0

//========================================================================
// Prints a float to the screen with a newline
// void println (float floatToPrint);
println__float:
    stackget __str 0
    println __str
    return 0

//========================================================================
// Prints a char to the screen with a newline
// void println (char charToPrint);
println__char:
    // grab string
    stackget __char 0
    println __char
    return 0

//========================================================================
// Prints an enum's integer value with a newline
// void println (Enum e);
println__Enum:
    stackget __e 0
    println __e
    return 0

//========================================================================
// Prints a newline to the console
// void println ();
println:
    println 
    return 0

//========================================================================
// grabs input from the console 
// char[] input ();
input:
    input __line
    return __line

//========================================================================
// exits/stops the program 
exit:
    halt

//========================================================================
// returns default float value
// float float ();
float:
    return 0.0

//========================================================================
// converts int to float
// float intToFloat (int);
intToFloat__int:
    stackget val 0
    itof res val
    return res

//========================================================================
// parses a float from a given char[]
// float stringToFloat (char[]);
stringToFloat__char__1:
    stackget val 0
    stof res val
    return res

//========================================================================
// returns default int value
// int int ();
int:
    return 0

//========================================================================
// converts float to int
// int floatToInt (float);
floatToInt__float:
    stackget val 0
    ftoi res val
    return res

//========================================================================
// parses an int from a given char[]
// int stringToInt (char[]);
stringToInt__char__1:
    stackget val 0
    stoi res val
    return res

//========================================================================
// converts int to string
// char[] string (int);
string__int:
    stackget val 0
    string res val
    return res

//========================================================================
// converts float to string
// char[] string (float);
string__float:
    stackget val 0
    string res val
    return res

//========================================================================

// returns default value for array and object (null)
// null null ();
null:
    return __null

//========================================================================

__endOfLibrary:
    //push prompt
    //call print

    //call input
    //response name

    //push name
    //call println

//========================================================================
//### COMPILED CODE ######################################################
//========================================================================

//========================================================================
// Class Template - 
   // Instances:
      //==================================================================
      // Class Declaration - __main____Node__int inherits __main__Object
         // Creating Dispatch Table
            MALLOC __dtable____main____Node__int 0
            // Populate Dispatch Table
         //---------------------------------------------------------------
         // Field - int Node<:int:>::data
         ASSIGN __field____main____Node__int____data 1
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - Node<:int:> Node<:int:>::prev
         ASSIGN __field____main____Node__int____prev 2
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - Node<:int:> Node<:int:>::next
         ASSIGN __field____main____Node__int____next 3
         //---------------------------------------------------------------
      // skip over class methods
      JUMP __endclass____main____Node__int
         //---------------------------------------------------------------
         // Constructor Declaration - Node<:int:>::Node(int, Node<:int:>, Node<:int:>) -> Node<:int:>
         JUMP __end__ctor____main____Node__int____Node__int__Node__Node
         __ctor____main____Node__int____Node__int__Node__Node:
            // Creating Class Instance
               MALLOC __this 4
               // Add Dispatch Table
               ASSIGN __this[0] __dtable____main____Node__int
            // Parameters
               // Param: data
               STACKGET __main____Node__int__Node__data 0
               // Param: prev
               STACKGET __main____Node__int__Node__prev 1
               // Param: next
               STACKGET __main____Node__int__Node__next 2
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment
                     // RHS
                        // Identifier - data
                           PUSH __main____Node__int__Node__data
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Node__int____data
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Identifier - prev
                           PUSH __main____Node__int__Node__prev
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Node__int____prev
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Identifier - next
                           PUSH __main____Node__int__Node__next
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Node__int____next
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN __this
         __end__ctor____main____Node__int____Node__int__Node__Node:
         // End Constructor Declaration - __ctor____main____Node__int____Node__int__Node__Node
         //---------------------------------------------------------------

      __endclass____main____Node__int:
      // End Class Declaration - __main____Node__int
      //==================================================================

      //==================================================================
      // Class Declaration - __main____Node__float inherits __main__Object
         // Creating Dispatch Table
            MALLOC __dtable____main____Node__float 0
            // Populate Dispatch Table
         //---------------------------------------------------------------
         // Field - float Node<:float:>::data
         ASSIGN __field____main____Node__float____data 1
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - Node<:float:> Node<:float:>::prev
         ASSIGN __field____main____Node__float____prev 2
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - Node<:float:> Node<:float:>::next
         ASSIGN __field____main____Node__float____next 3
         //---------------------------------------------------------------
      // skip over class methods
      JUMP __endclass____main____Node__float
         //---------------------------------------------------------------
         // Constructor Declaration - Node<:float:>::Node(float, Node<:float:>, Node<:float:>) -> Node<:float:>
         JUMP __end__ctor____main____Node__float____Node__float__Node__Node
         __ctor____main____Node__float____Node__float__Node__Node:
            // Creating Class Instance
               MALLOC __this 4
               // Add Dispatch Table
               ASSIGN __this[0] __dtable____main____Node__float
            // Parameters
               // Param: data
               STACKGET __main____Node__float__Node__data 0
               // Param: prev
               STACKGET __main____Node__float__Node__prev 1
               // Param: next
               STACKGET __main____Node__float__Node__next 2
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment
                     // RHS
                        // Identifier - data
                           PUSH __main____Node__float__Node__data
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Node__float____data
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Identifier - prev
                           PUSH __main____Node__float__Node__prev
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Node__float____prev
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Identifier - next
                           PUSH __main____Node__float__Node__next
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Node__float____next
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN __this
         __end__ctor____main____Node__float____Node__float__Node__Node:
         // End Constructor Declaration - __ctor____main____Node__float____Node__float__Node__Node
         //---------------------------------------------------------------

      __endclass____main____Node__float:
      // End Class Declaration - __main____Node__float
      //==================================================================

      //==================================================================
      // Class Declaration - __main____Node__char__1 inherits __main__Object
         // Creating Dispatch Table
            MALLOC __dtable____main____Node__char__1 0
            // Populate Dispatch Table
         //---------------------------------------------------------------
         // Field - char[] Node<:char[]:>::data
         ASSIGN __field____main____Node__char__1____data 1
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - Node<:char[]:> Node<:char[]:>::prev
         ASSIGN __field____main____Node__char__1____prev 2
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - Node<:char[]:> Node<:char[]:>::next
         ASSIGN __field____main____Node__char__1____next 3
         //---------------------------------------------------------------
      // skip over class methods
      JUMP __endclass____main____Node__char__1
         //---------------------------------------------------------------
         // Constructor Declaration - Node<:char[]:>::Node(char[], Node<:char[]:>, Node<:char[]:>) -> Node<:char[]:>
         JUMP __end__ctor____main____Node__char__1____Node__char__1__Node__Node
         __ctor____main____Node__char__1____Node__char__1__Node__Node:
            // Creating Class Instance
               MALLOC __this 4
               // Add Dispatch Table
               ASSIGN __this[0] __dtable____main____Node__char__1
            // Parameters
               // Param: data
               STACKGET __main____Node__char__1__Node__data 0
               // Param: prev
               STACKGET __main____Node__char__1__Node__prev 1
               // Param: next
               STACKGET __main____Node__char__1__Node__next 2
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment
                     // RHS
                        // Identifier - data
                           PUSH __main____Node__char__1__Node__data
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Node__char__1____data
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Identifier - prev
                           PUSH __main____Node__char__1__Node__prev
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Node__char__1____prev
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Identifier - next
                           PUSH __main____Node__char__1__Node__next
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Node__char__1____next
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN __this
         __end__ctor____main____Node__char__1____Node__char__1__Node__Node:
         // End Constructor Declaration - __ctor____main____Node__char__1____Node__char__1__Node__Node
         //---------------------------------------------------------------

      __endclass____main____Node__char__1:
      // End Class Declaration - __main____Node__char__1
      //==================================================================

      //==================================================================
      // Class Declaration - __main____Node__String inherits __main__Object
         // Creating Dispatch Table
            MALLOC __dtable____main____Node__String 0
            // Populate Dispatch Table
         //---------------------------------------------------------------
         // Field - String Node<:String:>::data
         ASSIGN __field____main____Node__String____data 1
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - Node<:String:> Node<:String:>::prev
         ASSIGN __field____main____Node__String____prev 2
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - Node<:String:> Node<:String:>::next
         ASSIGN __field____main____Node__String____next 3
         //---------------------------------------------------------------
      // skip over class methods
      JUMP __endclass____main____Node__String
         //---------------------------------------------------------------
         // Constructor Declaration - Node<:String:>::Node(String, Node<:String:>, Node<:String:>) -> Node<:String:>
         JUMP __end__ctor____main____Node__String____Node__String__Node__Node
         __ctor____main____Node__String____Node__String__Node__Node:
            // Creating Class Instance
               MALLOC __this 4
               // Add Dispatch Table
               ASSIGN __this[0] __dtable____main____Node__String
            // Parameters
               // Param: data
               STACKGET __main____Node__String__Node__data 0
               // Param: prev
               STACKGET __main____Node__String__Node__prev 1
               // Param: next
               STACKGET __main____Node__String__Node__next 2
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment
                     // RHS
                        // Identifier - data
                           PUSH __main____Node__String__Node__data
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Node__String____data
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Identifier - prev
                           PUSH __main____Node__String__Node__prev
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Node__String____prev
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Identifier - next
                           PUSH __main____Node__String__Node__next
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Node__String____next
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN __this
         __end__ctor____main____Node__String____Node__String__Node__Node:
         // End Constructor Declaration - __ctor____main____Node__String____Node__String__Node__Node
         //---------------------------------------------------------------

      __endclass____main____Node__String:
      // End Class Declaration - __main____Node__String
      //==================================================================

// End Class Template - 
//========================================================================

//========================================================================
// Class Template - 
   // Instances:
      //==================================================================
      // Class Declaration - __main____LinkedList__int inherits __main__Object
         // Creating Dispatch Table
            MALLOC __dtable____main____LinkedList__int 8
            // Populate Dispatch Table
            ASSIGN __dtable____main____LinkedList__int[0] __method____main____LinkedList__int____pushBack__int
            ASSIGN __dtable____main____LinkedList__int[1] __method____main____LinkedList__int____pushFront__int
            ASSIGN __dtable____main____LinkedList__int[2] __method____main____LinkedList__int____popBack
            ASSIGN __dtable____main____LinkedList__int[3] __method____main____LinkedList__int____popFront
            ASSIGN __dtable____main____LinkedList__int[4] __method____main____LinkedList__int____begin
            ASSIGN __dtable____main____LinkedList__int[5] __method____main____LinkedList__int____end
            ASSIGN __dtable____main____LinkedList__int[6] __method____main____LinkedList__int____rbegin
            ASSIGN __dtable____main____LinkedList__int[7] __method____main____LinkedList__int____rend
         //---------------------------------------------------------------
         // Field - Node<:int:> LinkedList<:int:>::header
         ASSIGN __field____main____LinkedList__int____header 1
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - int LinkedList<:int:>::size
         ASSIGN __field____main____LinkedList__int____size 2
         //---------------------------------------------------------------
      // skip over class methods
      JUMP __endclass____main____LinkedList__int
         //---------------------------------------------------------------
         // Constructor Declaration - LinkedList<:int:>::LinkedList() -> LinkedList<:int:>
         JUMP __end__ctor____main____LinkedList__int____LinkedList
         __ctor____main____LinkedList__int____LinkedList:
            // Creating Class Instance
               MALLOC __this 3
               // Add Dispatch Table
               ASSIGN __this[0] __dtable____main____LinkedList__int
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment
                     // RHS
                        // Constructor Call - Node<:int:>::Node(int, Node<:int:>, Node<:int:>) -> Node<:int:>
                           // Arguments
                              // Function Call - int() -> int
                                 // Arguments
                                 // Pushing args in reverse order
                                 // *** int
                                 CALL int
                                 // Remove args
                                 RESPONSE __retval
                                 PUSH __retval
                              // Null Literal
                                 ASSIGN __null 0
                                 PUSH __null
                              // Null Literal
                                 ASSIGN __null 0
                                 PUSH __null
                              POP __arg2
                              POP __arg1
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg2
                           PUSH __arg1
                           PUSH __arg0
                           CALL __ctor____main____Node__int____Node__int__Node__Node
                           // Remove args
                           POP __void
                           POP __void
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__int____header
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__int____header
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__int____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__int____next
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__int____header
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__int____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__int____prev
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Int Literal
                           PUSH 0
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__int____size
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN __this
         __end__ctor____main____LinkedList__int____LinkedList:
         // End Constructor Declaration - __ctor____main____LinkedList__int____LinkedList
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:int:>::pushBack(int) -> void
         JUMP __end__method____main____LinkedList__int____pushBack__int
         __method____main____LinkedList__int____pushBack__int:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: val
               STACKGET __main____LinkedList__int__pushBack__val 1
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__int____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__int____prev
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Variable Declaration
                           ASSIGN __main____LinkedList__int__pushBack__block__5__tail 0
                     POP __rhs
                     ASSIGN __main____LinkedList__int__pushBack__block__5__tail __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Constructor Call - Node<:int:>::Node(int, Node<:int:>, Node<:int:>) -> Node<:int:>
                           // Arguments
                              // Identifier - val
                                 PUSH __main____LinkedList__int__pushBack__val
                              // Identifier - tail
                                 PUSH __main____LinkedList__int__pushBack__block__5__tail
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__int____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                              POP __arg2
                              POP __arg1
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg2
                           PUSH __arg1
                           PUSH __arg0
                           CALL __ctor____main____Node__int____Node__int__Node__Node
                           // Remove args
                           POP __void
                           POP __void
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                     // LHS
                        // Variable Declaration
                           ASSIGN __main____LinkedList__int__pushBack__block__5__node 0
                     POP __rhs
                     ASSIGN __main____LinkedList__int__pushBack__block__5__node __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Identifier - node
                           PUSH __main____LinkedList__int__pushBack__block__5__node
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Identifier - tail
                                 PUSH __main____LinkedList__int__pushBack__block__5__tail
                           // RHS
                              PUSH __field____main____Node__int____next
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Identifier - node
                           PUSH __main____LinkedList__int__pushBack__block__5__node
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__int____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__int____prev
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Pre-Increment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__int____size
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     POP __rhs
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__int____size
                           POP __child
                           POP __parent
                           ADD __parent[__child] __parent[__child] 1
                           ASSIGN __res __parent[__child]
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__int____pushBack__int:
         // End Method Declaration - __method____main____LinkedList__int____pushBack__int
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:int:>::pushFront(int) -> void
         JUMP __end__method____main____LinkedList__int____pushFront__int
         __method____main____LinkedList__int____pushFront__int:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: val
               STACKGET __main____LinkedList__int__pushFront__val 1
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__int____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__int____next
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Variable Declaration
                           ASSIGN __main____LinkedList__int__pushFront__block__6__head 0
                     POP __rhs
                     ASSIGN __main____LinkedList__int__pushFront__block__6__head __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Constructor Call - Node<:int:>::Node(int, Node<:int:>, Node<:int:>) -> Node<:int:>
                           // Arguments
                              // Identifier - val
                                 PUSH __main____LinkedList__int__pushFront__val
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__int____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                              // Identifier - head
                                 PUSH __main____LinkedList__int__pushFront__block__6__head
                              POP __arg2
                              POP __arg1
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg2
                           PUSH __arg1
                           PUSH __arg0
                           CALL __ctor____main____Node__int____Node__int__Node__Node
                           // Remove args
                           POP __void
                           POP __void
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                     // LHS
                        // Variable Declaration
                           ASSIGN __main____LinkedList__int__pushFront__block__6__node 0
                     POP __rhs
                     ASSIGN __main____LinkedList__int__pushFront__block__6__node __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Identifier - node
                           PUSH __main____LinkedList__int__pushFront__block__6__node
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Identifier - head
                                 PUSH __main____LinkedList__int__pushFront__block__6__head
                           // RHS
                              PUSH __field____main____Node__int____prev
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Identifier - node
                           PUSH __main____LinkedList__int__pushFront__block__6__node
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__int____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__int____next
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Pre-Increment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__int____size
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     POP __rhs
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__int____size
                           POP __child
                           POP __parent
                           ADD __parent[__child] __parent[__child] 1
                           ASSIGN __res __parent[__child]
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__int____pushFront__int:
         // End Method Declaration - __method____main____LinkedList__int____pushFront__int
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:int:>::popBack() -> int
         JUMP __end__method____main____LinkedList__int____popBack
         __method____main____LinkedList__int____popBack:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Less Than or Equal to
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__int____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              // Int Literal
                                 PUSH 0
                           POP __rhs
                           POP __lhs
                           LE __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__8
                     // Body
                        // Return
                           // Function Call - int() -> int
                              // Arguments
                              // Pushing args in reverse order
                              // *** int
                              CALL int
                              // Remove args
                              RESPONSE __retval
                              PUSH __retval
                           POP __rVal
                           RETURN __rVal
                     JUMP __endif__8
                     // End of if
                     __endif__8:
                  //------------------------------------------------------
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__int____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__int____prev
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Variable Declaration
                           ASSIGN __main____LinkedList__int__popBack__block__7__tail 0
                     POP __rhs
                     ASSIGN __main____LinkedList__int__popBack__block__7__tail __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__int____header
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // Identifier - tail
                                       PUSH __main____LinkedList__int__popBack__block__7__tail
                                 // RHS
                                    PUSH __field____main____Node__int____prev
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__int____next
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // Identifier - tail
                                 PUSH __main____LinkedList__int__popBack__block__7__tail
                           // RHS
                              PUSH __field____main____Node__int____prev
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__int____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__int____prev
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Pre-Decrement
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__int____size
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     POP __rhs
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__int____size
                           POP __child
                           POP __parent
                           SUBTRACT __parent[__child] __parent[__child] 1
                           ASSIGN __res __parent[__child]
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
                  // Return
                     // Member Accessor
                        // LHS
                           // Identifier - tail
                              PUSH __main____LinkedList__int__popBack__block__7__tail
                        // RHS
                           PUSH __field____main____Node__int____data
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__int____popBack:
         // End Method Declaration - __method____main____LinkedList__int____popBack
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:int:>::popFront() -> int
         JUMP __end__method____main____LinkedList__int____popFront
         __method____main____LinkedList__int____popFront:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Less Than or Equal to
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__int____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              // Int Literal
                                 PUSH 0
                           POP __rhs
                           POP __lhs
                           LE __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__10
                     // Body
                        // Return
                           // Function Call - int() -> int
                              // Arguments
                              // Pushing args in reverse order
                              // *** int
                              CALL int
                              // Remove args
                              RESPONSE __retval
                              PUSH __retval
                           POP __rVal
                           RETURN __rVal
                     JUMP __endif__10
                     // End of if
                     __endif__10:
                  //------------------------------------------------------
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__int____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__int____next
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Variable Declaration
                           ASSIGN __main____LinkedList__int__popFront__block__9__head 0
                     POP __rhs
                     ASSIGN __main____LinkedList__int__popFront__block__9__head __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__int____header
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // Identifier - head
                                       PUSH __main____LinkedList__int__popFront__block__9__head
                                 // RHS
                                    PUSH __field____main____Node__int____next
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__int____prev
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // Identifier - head
                                 PUSH __main____LinkedList__int__popFront__block__9__head
                           // RHS
                              PUSH __field____main____Node__int____next
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__int____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__int____next
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Pre-Decrement
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__int____size
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     POP __rhs
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__int____size
                           POP __child
                           POP __parent
                           SUBTRACT __parent[__child] __parent[__child] 1
                           ASSIGN __res __parent[__child]
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
                  // Return
                     // Member Accessor
                        // LHS
                           // Identifier - head
                              PUSH __main____LinkedList__int__popFront__block__9__head
                        // RHS
                           PUSH __field____main____Node__int____data
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__int____popFront:
         // End Method Declaration - __method____main____LinkedList__int____popFront
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:int:>::begin() -> Node<:int:>
         JUMP __end__method____main____LinkedList__int____begin
         __method____main____LinkedList__int____begin:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Member Accessor
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____LinkedList__int____header
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // RHS
                           PUSH __field____main____Node__int____next
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__int____begin:
         // End Method Declaration - __method____main____LinkedList__int____begin
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:int:>::end() -> Node<:int:>
         JUMP __end__method____main____LinkedList__int____end
         __method____main____LinkedList__int____end:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Member Accessor
                        // LHS
                           // This keyword
                              PUSH __this
                        // RHS
                           PUSH __field____main____LinkedList__int____header
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__int____end:
         // End Method Declaration - __method____main____LinkedList__int____end
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:int:>::rbegin() -> Node<:int:>
         JUMP __end__method____main____LinkedList__int____rbegin
         __method____main____LinkedList__int____rbegin:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Member Accessor
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____LinkedList__int____header
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // RHS
                           PUSH __field____main____Node__int____prev
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__int____rbegin:
         // End Method Declaration - __method____main____LinkedList__int____rbegin
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:int:>::rend() -> Node<:int:>
         JUMP __end__method____main____LinkedList__int____rend
         __method____main____LinkedList__int____rend:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Member Accessor
                        // LHS
                           // This keyword
                              PUSH __this
                        // RHS
                           PUSH __field____main____LinkedList__int____header
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__int____rend:
         // End Method Declaration - __method____main____LinkedList__int____rend
         //---------------------------------------------------------------

      __endclass____main____LinkedList__int:
      // End Class Declaration - __main____LinkedList__int
      //==================================================================

      //==================================================================
      // Class Declaration - __main____LinkedList__float inherits __main__Object
         // Creating Dispatch Table
            MALLOC __dtable____main____LinkedList__float 8
            // Populate Dispatch Table
            ASSIGN __dtable____main____LinkedList__float[0] __method____main____LinkedList__float____pushBack__float
            ASSIGN __dtable____main____LinkedList__float[1] __method____main____LinkedList__float____pushFront__float
            ASSIGN __dtable____main____LinkedList__float[2] __method____main____LinkedList__float____popBack
            ASSIGN __dtable____main____LinkedList__float[3] __method____main____LinkedList__float____popFront
            ASSIGN __dtable____main____LinkedList__float[4] __method____main____LinkedList__float____begin
            ASSIGN __dtable____main____LinkedList__float[5] __method____main____LinkedList__float____end
            ASSIGN __dtable____main____LinkedList__float[6] __method____main____LinkedList__float____rbegin
            ASSIGN __dtable____main____LinkedList__float[7] __method____main____LinkedList__float____rend
         //---------------------------------------------------------------
         // Field - Node<:float:> LinkedList<:float:>::header
         ASSIGN __field____main____LinkedList__float____header 1
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - int LinkedList<:float:>::size
         ASSIGN __field____main____LinkedList__float____size 2
         //---------------------------------------------------------------
      // skip over class methods
      JUMP __endclass____main____LinkedList__float
         //---------------------------------------------------------------
         // Constructor Declaration - LinkedList<:float:>::LinkedList() -> LinkedList<:float:>
         JUMP __end__ctor____main____LinkedList__float____LinkedList
         __ctor____main____LinkedList__float____LinkedList:
            // Creating Class Instance
               MALLOC __this 3
               // Add Dispatch Table
               ASSIGN __this[0] __dtable____main____LinkedList__float
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment
                     // RHS
                        // Constructor Call - Node<:float:>::Node(float, Node<:float:>, Node<:float:>) -> Node<:float:>
                           // Arguments
                              // Function Call - float() -> float
                                 // Arguments
                                 // Pushing args in reverse order
                                 // *** float
                                 CALL float
                                 // Remove args
                                 RESPONSE __retval
                                 PUSH __retval
                              // Null Literal
                                 ASSIGN __null 0
                                 PUSH __null
                              // Null Literal
                                 ASSIGN __null 0
                                 PUSH __null
                              POP __arg2
                              POP __arg1
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg2
                           PUSH __arg1
                           PUSH __arg0
                           CALL __ctor____main____Node__float____Node__float__Node__Node
                           // Remove args
                           POP __void
                           POP __void
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__float____header
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__float____header
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__float____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__float____next
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__float____header
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__float____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__float____prev
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Int Literal
                           PUSH 0
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__float____size
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN __this
         __end__ctor____main____LinkedList__float____LinkedList:
         // End Constructor Declaration - __ctor____main____LinkedList__float____LinkedList
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:float:>::pushBack(float) -> void
         JUMP __end__method____main____LinkedList__float____pushBack__float
         __method____main____LinkedList__float____pushBack__float:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: val
               STACKGET __main____LinkedList__float__pushBack__val 1
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__float____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__float____prev
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Variable Declaration
                           ASSIGN __main____LinkedList__float__pushBack__block__16__tail 0
                     POP __rhs
                     ASSIGN __main____LinkedList__float__pushBack__block__16__tail __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Constructor Call - Node<:float:>::Node(float, Node<:float:>, Node<:float:>) -> Node<:float:>
                           // Arguments
                              // Identifier - val
                                 PUSH __main____LinkedList__float__pushBack__val
                              // Identifier - tail
                                 PUSH __main____LinkedList__float__pushBack__block__16__tail
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__float____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                              POP __arg2
                              POP __arg1
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg2
                           PUSH __arg1
                           PUSH __arg0
                           CALL __ctor____main____Node__float____Node__float__Node__Node
                           // Remove args
                           POP __void
                           POP __void
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                     // LHS
                        // Variable Declaration
                           ASSIGN __main____LinkedList__float__pushBack__block__16__node 0
                     POP __rhs
                     ASSIGN __main____LinkedList__float__pushBack__block__16__node __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Identifier - node
                           PUSH __main____LinkedList__float__pushBack__block__16__node
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Identifier - tail
                                 PUSH __main____LinkedList__float__pushBack__block__16__tail
                           // RHS
                              PUSH __field____main____Node__float____next
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Identifier - node
                           PUSH __main____LinkedList__float__pushBack__block__16__node
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__float____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__float____prev
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Pre-Increment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__float____size
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     POP __rhs
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__float____size
                           POP __child
                           POP __parent
                           ADD __parent[__child] __parent[__child] 1
                           ASSIGN __res __parent[__child]
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__float____pushBack__float:
         // End Method Declaration - __method____main____LinkedList__float____pushBack__float
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:float:>::pushFront(float) -> void
         JUMP __end__method____main____LinkedList__float____pushFront__float
         __method____main____LinkedList__float____pushFront__float:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: val
               STACKGET __main____LinkedList__float__pushFront__val 1
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__float____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__float____next
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Variable Declaration
                           ASSIGN __main____LinkedList__float__pushFront__block__17__head 0
                     POP __rhs
                     ASSIGN __main____LinkedList__float__pushFront__block__17__head __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Constructor Call - Node<:float:>::Node(float, Node<:float:>, Node<:float:>) -> Node<:float:>
                           // Arguments
                              // Identifier - val
                                 PUSH __main____LinkedList__float__pushFront__val
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__float____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                              // Identifier - head
                                 PUSH __main____LinkedList__float__pushFront__block__17__head
                              POP __arg2
                              POP __arg1
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg2
                           PUSH __arg1
                           PUSH __arg0
                           CALL __ctor____main____Node__float____Node__float__Node__Node
                           // Remove args
                           POP __void
                           POP __void
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                     // LHS
                        // Variable Declaration
                           ASSIGN __main____LinkedList__float__pushFront__block__17__node 0
                     POP __rhs
                     ASSIGN __main____LinkedList__float__pushFront__block__17__node __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Identifier - node
                           PUSH __main____LinkedList__float__pushFront__block__17__node
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Identifier - head
                                 PUSH __main____LinkedList__float__pushFront__block__17__head
                           // RHS
                              PUSH __field____main____Node__float____prev
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Identifier - node
                           PUSH __main____LinkedList__float__pushFront__block__17__node
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__float____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__float____next
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Pre-Increment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__float____size
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     POP __rhs
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__float____size
                           POP __child
                           POP __parent
                           ADD __parent[__child] __parent[__child] 1
                           ASSIGN __res __parent[__child]
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__float____pushFront__float:
         // End Method Declaration - __method____main____LinkedList__float____pushFront__float
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:float:>::popBack() -> float
         JUMP __end__method____main____LinkedList__float____popBack
         __method____main____LinkedList__float____popBack:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Less Than or Equal to
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__float____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              // Int Literal
                                 PUSH 0
                           POP __rhs
                           POP __lhs
                           LE __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__19
                     // Body
                        // Return
                           // Function Call - float() -> float
                              // Arguments
                              // Pushing args in reverse order
                              // *** float
                              CALL float
                              // Remove args
                              RESPONSE __retval
                              PUSH __retval
                           POP __rVal
                           RETURN __rVal
                     JUMP __endif__19
                     // End of if
                     __endif__19:
                  //------------------------------------------------------
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__float____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__float____prev
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Variable Declaration
                           ASSIGN __main____LinkedList__float__popBack__block__18__tail 0
                     POP __rhs
                     ASSIGN __main____LinkedList__float__popBack__block__18__tail __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__float____header
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // Identifier - tail
                                       PUSH __main____LinkedList__float__popBack__block__18__tail
                                 // RHS
                                    PUSH __field____main____Node__float____prev
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__float____next
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // Identifier - tail
                                 PUSH __main____LinkedList__float__popBack__block__18__tail
                           // RHS
                              PUSH __field____main____Node__float____prev
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__float____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__float____prev
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Pre-Decrement
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__float____size
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     POP __rhs
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__float____size
                           POP __child
                           POP __parent
                           SUBTRACT __parent[__child] __parent[__child] 1
                           ASSIGN __res __parent[__child]
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
                  // Return
                     // Member Accessor
                        // LHS
                           // Identifier - tail
                              PUSH __main____LinkedList__float__popBack__block__18__tail
                        // RHS
                           PUSH __field____main____Node__float____data
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__float____popBack:
         // End Method Declaration - __method____main____LinkedList__float____popBack
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:float:>::popFront() -> float
         JUMP __end__method____main____LinkedList__float____popFront
         __method____main____LinkedList__float____popFront:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Less Than or Equal to
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__float____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              // Int Literal
                                 PUSH 0
                           POP __rhs
                           POP __lhs
                           LE __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__21
                     // Body
                        // Return
                           // Function Call - float() -> float
                              // Arguments
                              // Pushing args in reverse order
                              // *** float
                              CALL float
                              // Remove args
                              RESPONSE __retval
                              PUSH __retval
                           POP __rVal
                           RETURN __rVal
                     JUMP __endif__21
                     // End of if
                     __endif__21:
                  //------------------------------------------------------
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__float____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__float____next
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Variable Declaration
                           ASSIGN __main____LinkedList__float__popFront__block__20__head 0
                     POP __rhs
                     ASSIGN __main____LinkedList__float__popFront__block__20__head __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__float____header
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // Identifier - head
                                       PUSH __main____LinkedList__float__popFront__block__20__head
                                 // RHS
                                    PUSH __field____main____Node__float____next
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__float____prev
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // Identifier - head
                                 PUSH __main____LinkedList__float__popFront__block__20__head
                           // RHS
                              PUSH __field____main____Node__float____next
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__float____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__float____next
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Pre-Decrement
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__float____size
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     POP __rhs
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__float____size
                           POP __child
                           POP __parent
                           SUBTRACT __parent[__child] __parent[__child] 1
                           ASSIGN __res __parent[__child]
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
                  // Return
                     // Member Accessor
                        // LHS
                           // Identifier - head
                              PUSH __main____LinkedList__float__popFront__block__20__head
                        // RHS
                           PUSH __field____main____Node__float____data
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__float____popFront:
         // End Method Declaration - __method____main____LinkedList__float____popFront
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:float:>::begin() -> Node<:float:>
         JUMP __end__method____main____LinkedList__float____begin
         __method____main____LinkedList__float____begin:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Member Accessor
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____LinkedList__float____header
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // RHS
                           PUSH __field____main____Node__float____next
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__float____begin:
         // End Method Declaration - __method____main____LinkedList__float____begin
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:float:>::end() -> Node<:float:>
         JUMP __end__method____main____LinkedList__float____end
         __method____main____LinkedList__float____end:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Member Accessor
                        // LHS
                           // This keyword
                              PUSH __this
                        // RHS
                           PUSH __field____main____LinkedList__float____header
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__float____end:
         // End Method Declaration - __method____main____LinkedList__float____end
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:float:>::rbegin() -> Node<:float:>
         JUMP __end__method____main____LinkedList__float____rbegin
         __method____main____LinkedList__float____rbegin:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Member Accessor
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____LinkedList__float____header
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // RHS
                           PUSH __field____main____Node__float____prev
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__float____rbegin:
         // End Method Declaration - __method____main____LinkedList__float____rbegin
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:float:>::rend() -> Node<:float:>
         JUMP __end__method____main____LinkedList__float____rend
         __method____main____LinkedList__float____rend:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Member Accessor
                        // LHS
                           // This keyword
                              PUSH __this
                        // RHS
                           PUSH __field____main____LinkedList__float____header
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__float____rend:
         // End Method Declaration - __method____main____LinkedList__float____rend
         //---------------------------------------------------------------

      __endclass____main____LinkedList__float:
      // End Class Declaration - __main____LinkedList__float
      //==================================================================

      //==================================================================
      // Class Declaration - __main____LinkedList__char__1 inherits __main__Object
         // Creating Dispatch Table
            MALLOC __dtable____main____LinkedList__char__1 8
            // Populate Dispatch Table
            ASSIGN __dtable____main____LinkedList__char__1[0] __method____main____LinkedList__char__1____pushBack__char__1
            ASSIGN __dtable____main____LinkedList__char__1[1] __method____main____LinkedList__char__1____pushFront__char__1
            ASSIGN __dtable____main____LinkedList__char__1[2] __method____main____LinkedList__char__1____popBack
            ASSIGN __dtable____main____LinkedList__char__1[3] __method____main____LinkedList__char__1____popFront
            ASSIGN __dtable____main____LinkedList__char__1[4] __method____main____LinkedList__char__1____begin
            ASSIGN __dtable____main____LinkedList__char__1[5] __method____main____LinkedList__char__1____end
            ASSIGN __dtable____main____LinkedList__char__1[6] __method____main____LinkedList__char__1____rbegin
            ASSIGN __dtable____main____LinkedList__char__1[7] __method____main____LinkedList__char__1____rend
         //---------------------------------------------------------------
         // Field - Node<:char[]:> LinkedList<:char[]:>::header
         ASSIGN __field____main____LinkedList__char__1____header 1
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - int LinkedList<:char[]:>::size
         ASSIGN __field____main____LinkedList__char__1____size 2
         //---------------------------------------------------------------
      // skip over class methods
      JUMP __endclass____main____LinkedList__char__1
         //---------------------------------------------------------------
         // Constructor Declaration - LinkedList<:char[]:>::LinkedList() -> LinkedList<:char[]:>
         JUMP __end__ctor____main____LinkedList__char__1____LinkedList
         __ctor____main____LinkedList__char__1____LinkedList:
            // Creating Class Instance
               MALLOC __this 3
               // Add Dispatch Table
               ASSIGN __this[0] __dtable____main____LinkedList__char__1
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment
                     // RHS
                        // Constructor Call - Node<:char[]:>::Node(char[], Node<:char[]:>, Node<:char[]:>) -> Node<:char[]:>
                           // Arguments
                              // Function Call - null() -> null
                                 // Arguments
                                 // Pushing args in reverse order
                                 // *** null
                                 CALL null
                                 // Remove args
                                 RESPONSE __retval
                                 PUSH __retval
                              // Null Literal
                                 ASSIGN __null 0
                                 PUSH __null
                              // Null Literal
                                 ASSIGN __null 0
                                 PUSH __null
                              POP __arg2
                              POP __arg1
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg2
                           PUSH __arg1
                           PUSH __arg0
                           CALL __ctor____main____Node__char__1____Node__char__1__Node__Node
                           // Remove args
                           POP __void
                           POP __void
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__char__1____header
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__char__1____header
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__char__1____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__char__1____next
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__char__1____header
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__char__1____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__char__1____prev
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Int Literal
                           PUSH 0
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__char__1____size
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN __this
         __end__ctor____main____LinkedList__char__1____LinkedList:
         // End Constructor Declaration - __ctor____main____LinkedList__char__1____LinkedList
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:char[]:>::pushBack(char[]) -> void
         JUMP __end__method____main____LinkedList__char__1____pushBack__char__1
         __method____main____LinkedList__char__1____pushBack__char__1:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: val
               STACKGET __main____LinkedList__char__1__pushBack__val 1
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__char__1____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__char__1____prev
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Variable Declaration
                           ASSIGN __main____LinkedList__char__1__pushBack__block__27__tail 0
                     POP __rhs
                     ASSIGN __main____LinkedList__char__1__pushBack__block__27__tail __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Constructor Call - Node<:char[]:>::Node(char[], Node<:char[]:>, Node<:char[]:>) -> Node<:char[]:>
                           // Arguments
                              // Identifier - val
                                 PUSH __main____LinkedList__char__1__pushBack__val
                              // Identifier - tail
                                 PUSH __main____LinkedList__char__1__pushBack__block__27__tail
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__char__1____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                              POP __arg2
                              POP __arg1
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg2
                           PUSH __arg1
                           PUSH __arg0
                           CALL __ctor____main____Node__char__1____Node__char__1__Node__Node
                           // Remove args
                           POP __void
                           POP __void
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                     // LHS
                        // Variable Declaration
                           ASSIGN __main____LinkedList__char__1__pushBack__block__27__node 0
                     POP __rhs
                     ASSIGN __main____LinkedList__char__1__pushBack__block__27__node __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Identifier - node
                           PUSH __main____LinkedList__char__1__pushBack__block__27__node
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Identifier - tail
                                 PUSH __main____LinkedList__char__1__pushBack__block__27__tail
                           // RHS
                              PUSH __field____main____Node__char__1____next
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Identifier - node
                           PUSH __main____LinkedList__char__1__pushBack__block__27__node
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__char__1____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__char__1____prev
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Pre-Increment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__char__1____size
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     POP __rhs
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__char__1____size
                           POP __child
                           POP __parent
                           ADD __parent[__child] __parent[__child] 1
                           ASSIGN __res __parent[__child]
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__char__1____pushBack__char__1:
         // End Method Declaration - __method____main____LinkedList__char__1____pushBack__char__1
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:char[]:>::pushFront(char[]) -> void
         JUMP __end__method____main____LinkedList__char__1____pushFront__char__1
         __method____main____LinkedList__char__1____pushFront__char__1:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: val
               STACKGET __main____LinkedList__char__1__pushFront__val 1
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__char__1____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__char__1____next
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Variable Declaration
                           ASSIGN __main____LinkedList__char__1__pushFront__block__28__head 0
                     POP __rhs
                     ASSIGN __main____LinkedList__char__1__pushFront__block__28__head __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Constructor Call - Node<:char[]:>::Node(char[], Node<:char[]:>, Node<:char[]:>) -> Node<:char[]:>
                           // Arguments
                              // Identifier - val
                                 PUSH __main____LinkedList__char__1__pushFront__val
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__char__1____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                              // Identifier - head
                                 PUSH __main____LinkedList__char__1__pushFront__block__28__head
                              POP __arg2
                              POP __arg1
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg2
                           PUSH __arg1
                           PUSH __arg0
                           CALL __ctor____main____Node__char__1____Node__char__1__Node__Node
                           // Remove args
                           POP __void
                           POP __void
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                     // LHS
                        // Variable Declaration
                           ASSIGN __main____LinkedList__char__1__pushFront__block__28__node 0
                     POP __rhs
                     ASSIGN __main____LinkedList__char__1__pushFront__block__28__node __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Identifier - node
                           PUSH __main____LinkedList__char__1__pushFront__block__28__node
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Identifier - head
                                 PUSH __main____LinkedList__char__1__pushFront__block__28__head
                           // RHS
                              PUSH __field____main____Node__char__1____prev
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Identifier - node
                           PUSH __main____LinkedList__char__1__pushFront__block__28__node
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__char__1____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__char__1____next
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Pre-Increment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__char__1____size
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     POP __rhs
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__char__1____size
                           POP __child
                           POP __parent
                           ADD __parent[__child] __parent[__child] 1
                           ASSIGN __res __parent[__child]
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__char__1____pushFront__char__1:
         // End Method Declaration - __method____main____LinkedList__char__1____pushFront__char__1
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:char[]:>::popBack() -> char[]
         JUMP __end__method____main____LinkedList__char__1____popBack
         __method____main____LinkedList__char__1____popBack:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Less Than or Equal to
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__char__1____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              // Int Literal
                                 PUSH 0
                           POP __rhs
                           POP __lhs
                           LE __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__30
                     // Body
                        // Return
                           // Function Call - null() -> null
                              // Arguments
                              // Pushing args in reverse order
                              // *** null
                              CALL null
                              // Remove args
                              RESPONSE __retval
                              PUSH __retval
                           POP __rVal
                           RETURN __rVal
                     JUMP __endif__30
                     // End of if
                     __endif__30:
                  //------------------------------------------------------
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__char__1____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__char__1____prev
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Variable Declaration
                           ASSIGN __main____LinkedList__char__1__popBack__block__29__tail 0
                     POP __rhs
                     ASSIGN __main____LinkedList__char__1__popBack__block__29__tail __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__char__1____header
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // Identifier - tail
                                       PUSH __main____LinkedList__char__1__popBack__block__29__tail
                                 // RHS
                                    PUSH __field____main____Node__char__1____prev
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__char__1____next
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // Identifier - tail
                                 PUSH __main____LinkedList__char__1__popBack__block__29__tail
                           // RHS
                              PUSH __field____main____Node__char__1____prev
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__char__1____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__char__1____prev
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Pre-Decrement
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__char__1____size
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     POP __rhs
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__char__1____size
                           POP __child
                           POP __parent
                           SUBTRACT __parent[__child] __parent[__child] 1
                           ASSIGN __res __parent[__child]
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
                  // Return
                     // Member Accessor
                        // LHS
                           // Identifier - tail
                              PUSH __main____LinkedList__char__1__popBack__block__29__tail
                        // RHS
                           PUSH __field____main____Node__char__1____data
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__char__1____popBack:
         // End Method Declaration - __method____main____LinkedList__char__1____popBack
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:char[]:>::popFront() -> char[]
         JUMP __end__method____main____LinkedList__char__1____popFront
         __method____main____LinkedList__char__1____popFront:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Less Than or Equal to
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__char__1____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              // Int Literal
                                 PUSH 0
                           POP __rhs
                           POP __lhs
                           LE __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__32
                     // Body
                        // Return
                           // Function Call - null() -> null
                              // Arguments
                              // Pushing args in reverse order
                              // *** null
                              CALL null
                              // Remove args
                              RESPONSE __retval
                              PUSH __retval
                           POP __rVal
                           RETURN __rVal
                     JUMP __endif__32
                     // End of if
                     __endif__32:
                  //------------------------------------------------------
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__char__1____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__char__1____next
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Variable Declaration
                           ASSIGN __main____LinkedList__char__1__popFront__block__31__head 0
                     POP __rhs
                     ASSIGN __main____LinkedList__char__1__popFront__block__31__head __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__char__1____header
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // Identifier - head
                                       PUSH __main____LinkedList__char__1__popFront__block__31__head
                                 // RHS
                                    PUSH __field____main____Node__char__1____next
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__char__1____prev
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // Identifier - head
                                 PUSH __main____LinkedList__char__1__popFront__block__31__head
                           // RHS
                              PUSH __field____main____Node__char__1____next
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__char__1____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__char__1____next
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Pre-Decrement
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__char__1____size
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     POP __rhs
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__char__1____size
                           POP __child
                           POP __parent
                           SUBTRACT __parent[__child] __parent[__child] 1
                           ASSIGN __res __parent[__child]
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
                  // Return
                     // Member Accessor
                        // LHS
                           // Identifier - head
                              PUSH __main____LinkedList__char__1__popFront__block__31__head
                        // RHS
                           PUSH __field____main____Node__char__1____data
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__char__1____popFront:
         // End Method Declaration - __method____main____LinkedList__char__1____popFront
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:char[]:>::begin() -> Node<:char[]:>
         JUMP __end__method____main____LinkedList__char__1____begin
         __method____main____LinkedList__char__1____begin:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Member Accessor
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____LinkedList__char__1____header
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // RHS
                           PUSH __field____main____Node__char__1____next
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__char__1____begin:
         // End Method Declaration - __method____main____LinkedList__char__1____begin
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:char[]:>::end() -> Node<:char[]:>
         JUMP __end__method____main____LinkedList__char__1____end
         __method____main____LinkedList__char__1____end:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Member Accessor
                        // LHS
                           // This keyword
                              PUSH __this
                        // RHS
                           PUSH __field____main____LinkedList__char__1____header
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__char__1____end:
         // End Method Declaration - __method____main____LinkedList__char__1____end
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:char[]:>::rbegin() -> Node<:char[]:>
         JUMP __end__method____main____LinkedList__char__1____rbegin
         __method____main____LinkedList__char__1____rbegin:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Member Accessor
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____LinkedList__char__1____header
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // RHS
                           PUSH __field____main____Node__char__1____prev
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__char__1____rbegin:
         // End Method Declaration - __method____main____LinkedList__char__1____rbegin
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:char[]:>::rend() -> Node<:char[]:>
         JUMP __end__method____main____LinkedList__char__1____rend
         __method____main____LinkedList__char__1____rend:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Member Accessor
                        // LHS
                           // This keyword
                              PUSH __this
                        // RHS
                           PUSH __field____main____LinkedList__char__1____header
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__char__1____rend:
         // End Method Declaration - __method____main____LinkedList__char__1____rend
         //---------------------------------------------------------------

      __endclass____main____LinkedList__char__1:
      // End Class Declaration - __main____LinkedList__char__1
      //==================================================================

      //==================================================================
      // Class Declaration - __main____LinkedList__String inherits __main__Object
         // Creating Dispatch Table
            MALLOC __dtable____main____LinkedList__String 8
            // Populate Dispatch Table
            ASSIGN __dtable____main____LinkedList__String[0] __method____main____LinkedList__String____pushBack__String
            ASSIGN __dtable____main____LinkedList__String[1] __method____main____LinkedList__String____pushFront__String
            ASSIGN __dtable____main____LinkedList__String[2] __method____main____LinkedList__String____popBack
            ASSIGN __dtable____main____LinkedList__String[3] __method____main____LinkedList__String____popFront
            ASSIGN __dtable____main____LinkedList__String[4] __method____main____LinkedList__String____begin
            ASSIGN __dtable____main____LinkedList__String[5] __method____main____LinkedList__String____end
            ASSIGN __dtable____main____LinkedList__String[6] __method____main____LinkedList__String____rbegin
            ASSIGN __dtable____main____LinkedList__String[7] __method____main____LinkedList__String____rend
         //---------------------------------------------------------------
         // Field - Node<:String:> LinkedList<:String:>::header
         ASSIGN __field____main____LinkedList__String____header 1
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - int LinkedList<:String:>::size
         ASSIGN __field____main____LinkedList__String____size 2
         //---------------------------------------------------------------
      // skip over class methods
      JUMP __endclass____main____LinkedList__String
         //---------------------------------------------------------------
         // Constructor Declaration - LinkedList<:String:>::LinkedList() -> LinkedList<:String:>
         JUMP __end__ctor____main____LinkedList__String____LinkedList
         __ctor____main____LinkedList__String____LinkedList:
            // Creating Class Instance
               MALLOC __this 3
               // Add Dispatch Table
               ASSIGN __this[0] __dtable____main____LinkedList__String
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment
                     // RHS
                        // Constructor Call - Node<:String:>::Node(String, Node<:String:>, Node<:String:>) -> Node<:String:>
                           // Arguments
                              // Function Call - String::String() -> String
                                 // Arguments
                                 // Pushing args in reverse order
                                 // *** String::String
                                 CALL __ctor____main____String____String
                                 // Remove args
                                 RESPONSE __retval
                                 PUSH __retval
                              // Null Literal
                                 ASSIGN __null 0
                                 PUSH __null
                              // Null Literal
                                 ASSIGN __null 0
                                 PUSH __null
                              POP __arg2
                              POP __arg1
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg2
                           PUSH __arg1
                           PUSH __arg0
                           CALL __ctor____main____Node__String____Node__String__Node__Node
                           // Remove args
                           POP __void
                           POP __void
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__String____header
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__String____header
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__String____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__String____next
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__String____header
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__String____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__String____prev
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Int Literal
                           PUSH 0
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__String____size
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN __this
         __end__ctor____main____LinkedList__String____LinkedList:
         // End Constructor Declaration - __ctor____main____LinkedList__String____LinkedList
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:String:>::pushBack(String) -> void
         JUMP __end__method____main____LinkedList__String____pushBack__String
         __method____main____LinkedList__String____pushBack__String:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: val
               STACKGET __main____LinkedList__String__pushBack__val 1
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__String____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__String____prev
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Variable Declaration
                           ASSIGN __main____LinkedList__String__pushBack__block__38__tail 0
                     POP __rhs
                     ASSIGN __main____LinkedList__String__pushBack__block__38__tail __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Constructor Call - Node<:String:>::Node(String, Node<:String:>, Node<:String:>) -> Node<:String:>
                           // Arguments
                              // Identifier - val
                                 PUSH __main____LinkedList__String__pushBack__val
                              // Identifier - tail
                                 PUSH __main____LinkedList__String__pushBack__block__38__tail
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__String____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                              POP __arg2
                              POP __arg1
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg2
                           PUSH __arg1
                           PUSH __arg0
                           CALL __ctor____main____Node__String____Node__String__Node__Node
                           // Remove args
                           POP __void
                           POP __void
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                     // LHS
                        // Variable Declaration
                           ASSIGN __main____LinkedList__String__pushBack__block__38__node 0
                     POP __rhs
                     ASSIGN __main____LinkedList__String__pushBack__block__38__node __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Identifier - node
                           PUSH __main____LinkedList__String__pushBack__block__38__node
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Identifier - tail
                                 PUSH __main____LinkedList__String__pushBack__block__38__tail
                           // RHS
                              PUSH __field____main____Node__String____next
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Identifier - node
                           PUSH __main____LinkedList__String__pushBack__block__38__node
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__String____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__String____prev
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Pre-Increment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__String____size
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     POP __rhs
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__String____size
                           POP __child
                           POP __parent
                           ADD __parent[__child] __parent[__child] 1
                           ASSIGN __res __parent[__child]
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__String____pushBack__String:
         // End Method Declaration - __method____main____LinkedList__String____pushBack__String
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:String:>::pushFront(String) -> void
         JUMP __end__method____main____LinkedList__String____pushFront__String
         __method____main____LinkedList__String____pushFront__String:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: val
               STACKGET __main____LinkedList__String__pushFront__val 1
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__String____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__String____next
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Variable Declaration
                           ASSIGN __main____LinkedList__String__pushFront__block__39__head 0
                     POP __rhs
                     ASSIGN __main____LinkedList__String__pushFront__block__39__head __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Constructor Call - Node<:String:>::Node(String, Node<:String:>, Node<:String:>) -> Node<:String:>
                           // Arguments
                              // Identifier - val
                                 PUSH __main____LinkedList__String__pushFront__val
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__String____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                              // Identifier - head
                                 PUSH __main____LinkedList__String__pushFront__block__39__head
                              POP __arg2
                              POP __arg1
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg2
                           PUSH __arg1
                           PUSH __arg0
                           CALL __ctor____main____Node__String____Node__String__Node__Node
                           // Remove args
                           POP __void
                           POP __void
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                     // LHS
                        // Variable Declaration
                           ASSIGN __main____LinkedList__String__pushFront__block__39__node 0
                     POP __rhs
                     ASSIGN __main____LinkedList__String__pushFront__block__39__node __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Identifier - node
                           PUSH __main____LinkedList__String__pushFront__block__39__node
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Identifier - head
                                 PUSH __main____LinkedList__String__pushFront__block__39__head
                           // RHS
                              PUSH __field____main____Node__String____prev
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Identifier - node
                           PUSH __main____LinkedList__String__pushFront__block__39__node
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__String____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__String____next
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Pre-Increment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__String____size
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     POP __rhs
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__String____size
                           POP __child
                           POP __parent
                           ADD __parent[__child] __parent[__child] 1
                           ASSIGN __res __parent[__child]
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__String____pushFront__String:
         // End Method Declaration - __method____main____LinkedList__String____pushFront__String
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:String:>::popBack() -> String
         JUMP __end__method____main____LinkedList__String____popBack
         __method____main____LinkedList__String____popBack:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Less Than or Equal to
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__String____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              // Int Literal
                                 PUSH 0
                           POP __rhs
                           POP __lhs
                           LE __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__41
                     // Body
                        // Return
                           // Function Call - String::String() -> String
                              // Arguments
                              // Pushing args in reverse order
                              // *** String::String
                              CALL __ctor____main____String____String
                              // Remove args
                              RESPONSE __retval
                              PUSH __retval
                           POP __rVal
                           RETURN __rVal
                     JUMP __endif__41
                     // End of if
                     __endif__41:
                  //------------------------------------------------------
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__String____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__String____prev
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Variable Declaration
                           ASSIGN __main____LinkedList__String__popBack__block__40__tail 0
                     POP __rhs
                     ASSIGN __main____LinkedList__String__popBack__block__40__tail __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__String____header
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // Identifier - tail
                                       PUSH __main____LinkedList__String__popBack__block__40__tail
                                 // RHS
                                    PUSH __field____main____Node__String____prev
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__String____next
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // Identifier - tail
                                 PUSH __main____LinkedList__String__popBack__block__40__tail
                           // RHS
                              PUSH __field____main____Node__String____prev
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__String____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__String____prev
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Pre-Decrement
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__String____size
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     POP __rhs
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__String____size
                           POP __child
                           POP __parent
                           SUBTRACT __parent[__child] __parent[__child] 1
                           ASSIGN __res __parent[__child]
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
                  // Return
                     // Member Accessor
                        // LHS
                           // Identifier - tail
                              PUSH __main____LinkedList__String__popBack__block__40__tail
                        // RHS
                           PUSH __field____main____Node__String____data
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__String____popBack:
         // End Method Declaration - __method____main____LinkedList__String____popBack
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:String:>::popFront() -> String
         JUMP __end__method____main____LinkedList__String____popFront
         __method____main____LinkedList__String____popFront:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Less Than or Equal to
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__String____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              // Int Literal
                                 PUSH 0
                           POP __rhs
                           POP __lhs
                           LE __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__43
                     // Body
                        // Return
                           // Function Call - String::String() -> String
                              // Arguments
                              // Pushing args in reverse order
                              // *** String::String
                              CALL __ctor____main____String____String
                              // Remove args
                              RESPONSE __retval
                              PUSH __retval
                           POP __rVal
                           RETURN __rVal
                     JUMP __endif__43
                     // End of if
                     __endif__43:
                  //------------------------------------------------------
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__String____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__String____next
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Variable Declaration
                           ASSIGN __main____LinkedList__String__popFront__block__42__head 0
                     POP __rhs
                     ASSIGN __main____LinkedList__String__popFront__block__42__head __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__String____header
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // Identifier - head
                                       PUSH __main____LinkedList__String__popFront__block__42__head
                                 // RHS
                                    PUSH __field____main____Node__String____next
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__String____prev
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Member Accessor
                           // LHS
                              // Identifier - head
                                 PUSH __main____LinkedList__String__popFront__block__42__head
                           // RHS
                              PUSH __field____main____Node__String____next
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____LinkedList__String____header
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              PUSH __field____main____Node__String____next
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Pre-Decrement
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__String____size
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     POP __rhs
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____LinkedList__String____size
                           POP __child
                           POP __parent
                           SUBTRACT __parent[__child] __parent[__child] 1
                           ASSIGN __res __parent[__child]
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
                  // Return
                     // Member Accessor
                        // LHS
                           // Identifier - head
                              PUSH __main____LinkedList__String__popFront__block__42__head
                        // RHS
                           PUSH __field____main____Node__String____data
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__String____popFront:
         // End Method Declaration - __method____main____LinkedList__String____popFront
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:String:>::begin() -> Node<:String:>
         JUMP __end__method____main____LinkedList__String____begin
         __method____main____LinkedList__String____begin:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Member Accessor
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____LinkedList__String____header
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // RHS
                           PUSH __field____main____Node__String____next
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__String____begin:
         // End Method Declaration - __method____main____LinkedList__String____begin
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:String:>::end() -> Node<:String:>
         JUMP __end__method____main____LinkedList__String____end
         __method____main____LinkedList__String____end:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Member Accessor
                        // LHS
                           // This keyword
                              PUSH __this
                        // RHS
                           PUSH __field____main____LinkedList__String____header
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__String____end:
         // End Method Declaration - __method____main____LinkedList__String____end
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:String:>::rbegin() -> Node<:String:>
         JUMP __end__method____main____LinkedList__String____rbegin
         __method____main____LinkedList__String____rbegin:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Member Accessor
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____LinkedList__String____header
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // RHS
                           PUSH __field____main____Node__String____prev
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__String____rbegin:
         // End Method Declaration - __method____main____LinkedList__String____rbegin
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - LinkedList<:String:>::rend() -> Node<:String:>
         JUMP __end__method____main____LinkedList__String____rend
         __method____main____LinkedList__String____rend:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Member Accessor
                        // LHS
                           // This keyword
                              PUSH __this
                        // RHS
                           PUSH __field____main____LinkedList__String____header
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____LinkedList__String____rend:
         // End Method Declaration - __method____main____LinkedList__String____rend
         //---------------------------------------------------------------

      __endclass____main____LinkedList__String:
      // End Class Declaration - __main____LinkedList__String
      //==================================================================

// End Class Template - 
//========================================================================

//========================================================================
// Function Template - 
   // Instances:
      //==================================================================
      // Function Declaration - printForwards<:int:>(LinkedList<:int:>) -> void
      JUMP __end____main____printForwards__int____LinkedList__tparam0__int
      __main____printForwards__int____LinkedList__tparam0__int:
         // Parameters
            // Param: list
            STACKGET __main__printForwards__list 0
         // Body
            //------------------------------------------------------------
            // Code Block
               // Function Call - print(char[]) -> void
                  // Arguments
                     // String Literal
                        MALLOC __str 13
                        ASSIGN __str[0] ' '
                        ASSIGN __str[1] ' '
                        ASSIGN __str[2] ' '
                        ASSIGN __str[3] 'F'
                        ASSIGN __str[4] 'o'
                        ASSIGN __str[5] 'r'
                        ASSIGN __str[6] 'w'
                        ASSIGN __str[7] 'a'
                        ASSIGN __str[8] 'r'
                        ASSIGN __str[9] 'd'
                        ASSIGN __str[10] 's'
                        ASSIGN __str[11] ':'
                        ASSIGN __str[12] ' '
                        PUSH __str
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** print
                  CALL print__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
               // Statement results can be ignored
               POP __void
               //---------------------------------------------------------
               // For-Loop
               // Init
                  // Assignment
                     // RHS
                        // Method Call - LinkedList<:int:>::begin() -> Node<:int:>
                           // LHS
                              // Identifier - list
                                 PUSH __main__printForwards__list
                           // RHS
                           // Arguments
                           POP __obj
                           // Pushing args in reverse order
                           PUSH __obj
                           CALL __method____main____LinkedList__int____begin
                           POP __void
                           // Remove args
                           RESPONSE __retval
                           PUSH __retval
                     // LHS
                        // Variable Declaration
                           ASSIGN __main__printForwards__block__48__for__49__iter 0
                     POP __rhs
                     ASSIGN __main__printForwards__block__48__for__49__iter __rhs
                     PUSH __rhs
               JUMP __forcond__49
               __for__49:
                  // Update
                     // Assignment
                        // RHS
                           // Member Accessor
                              // LHS
                                 // Identifier - iter
                                    PUSH __main__printForwards__block__48__for__49__iter
                              // RHS
                                 PUSH __field____main____Node__int____next
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        POP __rhs
                        ASSIGN __main__printForwards__block__48__for__49__iter __rhs
                        PUSH __rhs
                  __forcond__49:
                  // Condition
                     // Not Equal
                        // LHS
                           // Identifier - iter
                              PUSH __main__printForwards__block__48__for__49__iter
                        // RHS
                           // Method Call - LinkedList<:int:>::end() -> Node<:int:>
                              // LHS
                                 // Identifier - list
                                    PUSH __main__printForwards__list
                              // RHS
                              // Arguments
                              POP __obj
                              // Pushing args in reverse order
                              PUSH __obj
                              CALL __method____main____LinkedList__int____end
                              POP __void
                              // Remove args
                              RESPONSE __retval
                              PUSH __retval
                        POP __rhs
                        POP __lhs
                        NEQUAL __res __lhs __rhs
                        PUSH __res
                     POP __cond
                     CMP __cond 0
                     JEQ __endfor__49
                  // Body
                     //---------------------------------------------------
                     // Code Block
                        // Function Call - print(int) -> void
                           // Arguments
                              // Member Accessor
                                 // LHS
                                    // Identifier - iter
                                       PUSH __main__printForwards__block__48__for__49__iter
                                 // RHS
                                    PUSH __field____main____Node__int____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg0
                           // *** print
                           CALL print__int
                           // Remove args
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                        // Statement results can be ignored
                        POP __void
                        // Function Call - print(char[]) -> void
                           // Arguments
                              // String Literal
                                 MALLOC __str 4
                                 ASSIGN __str[0] ' '
                                 ASSIGN __str[1] '-'
                                 ASSIGN __str[2] '>'
                                 ASSIGN __str[3] ' '
                                 PUSH __str
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg0
                           // *** print
                           CALL print__char__1
                           // Remove args
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                        // Statement results can be ignored
                        POP __void
                     //---------------------------------------------------
                  // Repeat
                  JUMP __for__49
                  // End of For
                  __endfor__49:
               //---------------------------------------------------------
               // Function Call - println(char[]) -> void
                  // Arguments
                     // String Literal
                        MALLOC __str 0
                        PUSH __str
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** println
                  CALL println__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
               // Statement results can be ignored
               POP __void
            //------------------------------------------------------------
         RETURN 0
      __end____main____printForwards__int____LinkedList__tparam0__int:
      // End Function Declaration - __main____printForwards__int____LinkedList__tparam0__int
      //==================================================================

      //==================================================================
      // Function Declaration - printForwards<:float:>(LinkedList<:float:>) -> void
      JUMP __end____main____printForwards__float____LinkedList__tparam0__float
      __main____printForwards__float____LinkedList__tparam0__float:
         // Parameters
            // Param: list
            STACKGET __main__printForwards__list 0
         // Body
            //------------------------------------------------------------
            // Code Block
               // Function Call - print(char[]) -> void
                  // Arguments
                     // String Literal
                        MALLOC __str 13
                        ASSIGN __str[0] ' '
                        ASSIGN __str[1] ' '
                        ASSIGN __str[2] ' '
                        ASSIGN __str[3] 'F'
                        ASSIGN __str[4] 'o'
                        ASSIGN __str[5] 'r'
                        ASSIGN __str[6] 'w'
                        ASSIGN __str[7] 'a'
                        ASSIGN __str[8] 'r'
                        ASSIGN __str[9] 'd'
                        ASSIGN __str[10] 's'
                        ASSIGN __str[11] ':'
                        ASSIGN __str[12] ' '
                        PUSH __str
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** print
                  CALL print__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
               // Statement results can be ignored
               POP __void
               //---------------------------------------------------------
               // For-Loop
               // Init
                  // Assignment
                     // RHS
                        // Method Call - LinkedList<:float:>::begin() -> Node<:float:>
                           // LHS
                              // Identifier - list
                                 PUSH __main__printForwards__list
                           // RHS
                           // Arguments
                           POP __obj
                           // Pushing args in reverse order
                           PUSH __obj
                           CALL __method____main____LinkedList__float____begin
                           POP __void
                           // Remove args
                           RESPONSE __retval
                           PUSH __retval
                     // LHS
                        // Variable Declaration
                           ASSIGN __main__printForwards__block__51__for__52__iter 0
                     POP __rhs
                     ASSIGN __main__printForwards__block__51__for__52__iter __rhs
                     PUSH __rhs
               JUMP __forcond__52
               __for__52:
                  // Update
                     // Assignment
                        // RHS
                           // Member Accessor
                              // LHS
                                 // Identifier - iter
                                    PUSH __main__printForwards__block__51__for__52__iter
                              // RHS
                                 PUSH __field____main____Node__float____next
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        POP __rhs
                        ASSIGN __main__printForwards__block__51__for__52__iter __rhs
                        PUSH __rhs
                  __forcond__52:
                  // Condition
                     // Not Equal
                        // LHS
                           // Identifier - iter
                              PUSH __main__printForwards__block__51__for__52__iter
                        // RHS
                           // Method Call - LinkedList<:float:>::end() -> Node<:float:>
                              // LHS
                                 // Identifier - list
                                    PUSH __main__printForwards__list
                              // RHS
                              // Arguments
                              POP __obj
                              // Pushing args in reverse order
                              PUSH __obj
                              CALL __method____main____LinkedList__float____end
                              POP __void
                              // Remove args
                              RESPONSE __retval
                              PUSH __retval
                        POP __rhs
                        POP __lhs
                        NEQUAL __res __lhs __rhs
                        PUSH __res
                     POP __cond
                     CMP __cond 0
                     JEQ __endfor__52
                  // Body
                     //---------------------------------------------------
                     // Code Block
                        // Function Call - print(float) -> void
                           // Arguments
                              // Member Accessor
                                 // LHS
                                    // Identifier - iter
                                       PUSH __main__printForwards__block__51__for__52__iter
                                 // RHS
                                    PUSH __field____main____Node__float____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg0
                           // *** print
                           CALL print__float
                           // Remove args
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                        // Statement results can be ignored
                        POP __void
                        // Function Call - print(char[]) -> void
                           // Arguments
                              // String Literal
                                 MALLOC __str 4
                                 ASSIGN __str[0] ' '
                                 ASSIGN __str[1] '-'
                                 ASSIGN __str[2] '>'
                                 ASSIGN __str[3] ' '
                                 PUSH __str
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg0
                           // *** print
                           CALL print__char__1
                           // Remove args
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                        // Statement results can be ignored
                        POP __void
                     //---------------------------------------------------
                  // Repeat
                  JUMP __for__52
                  // End of For
                  __endfor__52:
               //---------------------------------------------------------
               // Function Call - println(char[]) -> void
                  // Arguments
                     // String Literal
                        MALLOC __str 0
                        PUSH __str
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** println
                  CALL println__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
               // Statement results can be ignored
               POP __void
            //------------------------------------------------------------
         RETURN 0
      __end____main____printForwards__float____LinkedList__tparam0__float:
      // End Function Declaration - __main____printForwards__float____LinkedList__tparam0__float
      //==================================================================

      //==================================================================
      // Function Declaration - printForwards<:char[]:>(LinkedList<:char[]:>) -> void
      JUMP __end____main____printForwards__char__1____LinkedList__tparam0__char
      __main____printForwards__char__1____LinkedList__tparam0__char:
         // Parameters
            // Param: list
            STACKGET __main__printForwards__list 0
         // Body
            //------------------------------------------------------------
            // Code Block
               // Function Call - print(char[]) -> void
                  // Arguments
                     // String Literal
                        MALLOC __str 13
                        ASSIGN __str[0] ' '
                        ASSIGN __str[1] ' '
                        ASSIGN __str[2] ' '
                        ASSIGN __str[3] 'F'
                        ASSIGN __str[4] 'o'
                        ASSIGN __str[5] 'r'
                        ASSIGN __str[6] 'w'
                        ASSIGN __str[7] 'a'
                        ASSIGN __str[8] 'r'
                        ASSIGN __str[9] 'd'
                        ASSIGN __str[10] 's'
                        ASSIGN __str[11] ':'
                        ASSIGN __str[12] ' '
                        PUSH __str
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** print
                  CALL print__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
               // Statement results can be ignored
               POP __void
               //---------------------------------------------------------
               // For-Loop
               // Init
                  // Assignment
                     // RHS
                        // Method Call - LinkedList<:char[]:>::begin() -> Node<:char[]:>
                           // LHS
                              // Identifier - list
                                 PUSH __main__printForwards__list
                           // RHS
                           // Arguments
                           POP __obj
                           // Pushing args in reverse order
                           PUSH __obj
                           CALL __method____main____LinkedList__char__1____begin
                           POP __void
                           // Remove args
                           RESPONSE __retval
                           PUSH __retval
                     // LHS
                        // Variable Declaration
                           ASSIGN __main__printForwards__block__54__for__55__iter 0
                     POP __rhs
                     ASSIGN __main__printForwards__block__54__for__55__iter __rhs
                     PUSH __rhs
               JUMP __forcond__55
               __for__55:
                  // Update
                     // Assignment
                        // RHS
                           // Member Accessor
                              // LHS
                                 // Identifier - iter
                                    PUSH __main__printForwards__block__54__for__55__iter
                              // RHS
                                 PUSH __field____main____Node__char__1____next
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        POP __rhs
                        ASSIGN __main__printForwards__block__54__for__55__iter __rhs
                        PUSH __rhs
                  __forcond__55:
                  // Condition
                     // Not Equal
                        // LHS
                           // Identifier - iter
                              PUSH __main__printForwards__block__54__for__55__iter
                        // RHS
                           // Method Call - LinkedList<:char[]:>::end() -> Node<:char[]:>
                              // LHS
                                 // Identifier - list
                                    PUSH __main__printForwards__list
                              // RHS
                              // Arguments
                              POP __obj
                              // Pushing args in reverse order
                              PUSH __obj
                              CALL __method____main____LinkedList__char__1____end
                              POP __void
                              // Remove args
                              RESPONSE __retval
                              PUSH __retval
                        POP __rhs
                        POP __lhs
                        NEQUAL __res __lhs __rhs
                        PUSH __res
                     POP __cond
                     CMP __cond 0
                     JEQ __endfor__55
                  // Body
                     //---------------------------------------------------
                     // Code Block
                        // Function Call - print(char[]) -> void
                           // Arguments
                              // Member Accessor
                                 // LHS
                                    // Identifier - iter
                                       PUSH __main__printForwards__block__54__for__55__iter
                                 // RHS
                                    PUSH __field____main____Node__char__1____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg0
                           // *** print
                           CALL print__char__1
                           // Remove args
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                        // Statement results can be ignored
                        POP __void
                        // Function Call - print(char[]) -> void
                           // Arguments
                              // String Literal
                                 MALLOC __str 4
                                 ASSIGN __str[0] ' '
                                 ASSIGN __str[1] '-'
                                 ASSIGN __str[2] '>'
                                 ASSIGN __str[3] ' '
                                 PUSH __str
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg0
                           // *** print
                           CALL print__char__1
                           // Remove args
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                        // Statement results can be ignored
                        POP __void
                     //---------------------------------------------------
                  // Repeat
                  JUMP __for__55
                  // End of For
                  __endfor__55:
               //---------------------------------------------------------
               // Function Call - println(char[]) -> void
                  // Arguments
                     // String Literal
                        MALLOC __str 0
                        PUSH __str
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** println
                  CALL println__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
               // Statement results can be ignored
               POP __void
            //------------------------------------------------------------
         RETURN 0
      __end____main____printForwards__char__1____LinkedList__tparam0__char:
      // End Function Declaration - __main____printForwards__char__1____LinkedList__tparam0__char
      //==================================================================

      //==================================================================
      // Function Declaration - printForwards<:String:>(LinkedList<:String:>) -> void
      JUMP __end____main____printForwards__String____LinkedList__tparam0__String
      __main____printForwards__String____LinkedList__tparam0__String:
         // Parameters
            // Param: list
            STACKGET __main__printForwards__list 0
         // Body
            //------------------------------------------------------------
            // Code Block
               // Function Call - print(char[]) -> void
                  // Arguments
                     // String Literal
                        MALLOC __str 13
                        ASSIGN __str[0] ' '
                        ASSIGN __str[1] ' '
                        ASSIGN __str[2] ' '
                        ASSIGN __str[3] 'F'
                        ASSIGN __str[4] 'o'
                        ASSIGN __str[5] 'r'
                        ASSIGN __str[6] 'w'
                        ASSIGN __str[7] 'a'
                        ASSIGN __str[8] 'r'
                        ASSIGN __str[9] 'd'
                        ASSIGN __str[10] 's'
                        ASSIGN __str[11] ':'
                        ASSIGN __str[12] ' '
                        PUSH __str
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** print
                  CALL print__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
               // Statement results can be ignored
               POP __void
               //---------------------------------------------------------
               // For-Loop
               // Init
                  // Assignment
                     // RHS
                        // Method Call - LinkedList<:String:>::begin() -> Node<:String:>
                           // LHS
                              // Identifier - list
                                 PUSH __main__printForwards__list
                           // RHS
                           // Arguments
                           POP __obj
                           // Pushing args in reverse order
                           PUSH __obj
                           CALL __method____main____LinkedList__String____begin
                           POP __void
                           // Remove args
                           RESPONSE __retval
                           PUSH __retval
                     // LHS
                        // Variable Declaration
                           ASSIGN __main__printForwards__block__57__for__58__iter 0
                     POP __rhs
                     ASSIGN __main__printForwards__block__57__for__58__iter __rhs
                     PUSH __rhs
               JUMP __forcond__58
               __for__58:
                  // Update
                     // Assignment
                        // RHS
                           // Member Accessor
                              // LHS
                                 // Identifier - iter
                                    PUSH __main__printForwards__block__57__for__58__iter
                              // RHS
                                 PUSH __field____main____Node__String____next
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        POP __rhs
                        ASSIGN __main__printForwards__block__57__for__58__iter __rhs
                        PUSH __rhs
                  __forcond__58:
                  // Condition
                     // Not Equal
                        // LHS
                           // Identifier - iter
                              PUSH __main__printForwards__block__57__for__58__iter
                        // RHS
                           // Method Call - LinkedList<:String:>::end() -> Node<:String:>
                              // LHS
                                 // Identifier - list
                                    PUSH __main__printForwards__list
                              // RHS
                              // Arguments
                              POP __obj
                              // Pushing args in reverse order
                              PUSH __obj
                              CALL __method____main____LinkedList__String____end
                              POP __void
                              // Remove args
                              RESPONSE __retval
                              PUSH __retval
                        POP __rhs
                        POP __lhs
                        NEQUAL __res __lhs __rhs
                        PUSH __res
                     POP __cond
                     CMP __cond 0
                     JEQ __endfor__58
                  // Body
                     //---------------------------------------------------
                     // Code Block
                        // Function Call - print(String) -> void
                           // Arguments
                              // Member Accessor
                                 // LHS
                                    // Identifier - iter
                                       PUSH __main__printForwards__block__57__for__58__iter
                                 // RHS
                                    PUSH __field____main____Node__String____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg0
                           // *** print
                           CALL __main____print__String
                           // Remove args
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                        // Statement results can be ignored
                        POP __void
                        // Function Call - print(char[]) -> void
                           // Arguments
                              // String Literal
                                 MALLOC __str 4
                                 ASSIGN __str[0] ' '
                                 ASSIGN __str[1] '-'
                                 ASSIGN __str[2] '>'
                                 ASSIGN __str[3] ' '
                                 PUSH __str
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg0
                           // *** print
                           CALL print__char__1
                           // Remove args
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                        // Statement results can be ignored
                        POP __void
                     //---------------------------------------------------
                  // Repeat
                  JUMP __for__58
                  // End of For
                  __endfor__58:
               //---------------------------------------------------------
               // Function Call - println(char[]) -> void
                  // Arguments
                     // String Literal
                        MALLOC __str 0
                        PUSH __str
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** println
                  CALL println__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
               // Statement results can be ignored
               POP __void
            //------------------------------------------------------------
         RETURN 0
      __end____main____printForwards__String____LinkedList__tparam0__String:
      // End Function Declaration - __main____printForwards__String____LinkedList__tparam0__String
      //==================================================================

// End Function Template - 
//========================================================================

//========================================================================
// Function Template - 
   // Instances:
      //==================================================================
      // Function Declaration - printBackwards<:int:>(LinkedList<:int:>) -> void
      JUMP __end____main____printBackwards__int____LinkedList__tparam0__int
      __main____printBackwards__int____LinkedList__tparam0__int:
         // Parameters
            // Param: list
            STACKGET __main__printBackwards__list 0
         // Body
            //------------------------------------------------------------
            // Code Block
               // Function Call - print(char[]) -> void
                  // Arguments
                     // String Literal
                        MALLOC __str 14
                        ASSIGN __str[0] ' '
                        ASSIGN __str[1] ' '
                        ASSIGN __str[2] ' '
                        ASSIGN __str[3] 'B'
                        ASSIGN __str[4] 'a'
                        ASSIGN __str[5] 'c'
                        ASSIGN __str[6] 'k'
                        ASSIGN __str[7] 'w'
                        ASSIGN __str[8] 'a'
                        ASSIGN __str[9] 'r'
                        ASSIGN __str[10] 'd'
                        ASSIGN __str[11] 's'
                        ASSIGN __str[12] ':'
                        ASSIGN __str[13] ' '
                        PUSH __str
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** print
                  CALL print__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
               // Statement results can be ignored
               POP __void
               //---------------------------------------------------------
               // For-Loop
               // Init
                  // Assignment
                     // RHS
                        // Method Call - LinkedList<:int:>::rbegin() -> Node<:int:>
                           // LHS
                              // Identifier - list
                                 PUSH __main__printBackwards__list
                           // RHS
                           // Arguments
                           POP __obj
                           // Pushing args in reverse order
                           PUSH __obj
                           CALL __method____main____LinkedList__int____rbegin
                           POP __void
                           // Remove args
                           RESPONSE __retval
                           PUSH __retval
                     // LHS
                        // Variable Declaration
                           ASSIGN __main__printBackwards__block__60__for__61__iter 0
                     POP __rhs
                     ASSIGN __main__printBackwards__block__60__for__61__iter __rhs
                     PUSH __rhs
               JUMP __forcond__61
               __for__61:
                  // Update
                     // Assignment
                        // RHS
                           // Member Accessor
                              // LHS
                                 // Identifier - iter
                                    PUSH __main__printBackwards__block__60__for__61__iter
                              // RHS
                                 PUSH __field____main____Node__int____prev
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        POP __rhs
                        ASSIGN __main__printBackwards__block__60__for__61__iter __rhs
                        PUSH __rhs
                  __forcond__61:
                  // Condition
                     // Not Equal
                        // LHS
                           // Identifier - iter
                              PUSH __main__printBackwards__block__60__for__61__iter
                        // RHS
                           // Method Call - LinkedList<:int:>::rend() -> Node<:int:>
                              // LHS
                                 // Identifier - list
                                    PUSH __main__printBackwards__list
                              // RHS
                              // Arguments
                              POP __obj
                              // Pushing args in reverse order
                              PUSH __obj
                              CALL __method____main____LinkedList__int____rend
                              POP __void
                              // Remove args
                              RESPONSE __retval
                              PUSH __retval
                        POP __rhs
                        POP __lhs
                        NEQUAL __res __lhs __rhs
                        PUSH __res
                     POP __cond
                     CMP __cond 0
                     JEQ __endfor__61
                  // Body
                     //---------------------------------------------------
                     // Code Block
                        // Function Call - print(int) -> void
                           // Arguments
                              // Member Accessor
                                 // LHS
                                    // Identifier - iter
                                       PUSH __main__printBackwards__block__60__for__61__iter
                                 // RHS
                                    PUSH __field____main____Node__int____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg0
                           // *** print
                           CALL print__int
                           // Remove args
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                        // Statement results can be ignored
                        POP __void
                        // Function Call - print(char[]) -> void
                           // Arguments
                              // String Literal
                                 MALLOC __str 4
                                 ASSIGN __str[0] ' '
                                 ASSIGN __str[1] '<'
                                 ASSIGN __str[2] '-'
                                 ASSIGN __str[3] ' '
                                 PUSH __str
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg0
                           // *** print
                           CALL print__char__1
                           // Remove args
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                        // Statement results can be ignored
                        POP __void
                     //---------------------------------------------------
                  // Repeat
                  JUMP __for__61
                  // End of For
                  __endfor__61:
               //---------------------------------------------------------
               // Function Call - println(char[]) -> void
                  // Arguments
                     // String Literal
                        MALLOC __str 0
                        PUSH __str
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** println
                  CALL println__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
               // Statement results can be ignored
               POP __void
            //------------------------------------------------------------
         RETURN 0
      __end____main____printBackwards__int____LinkedList__tparam0__int:
      // End Function Declaration - __main____printBackwards__int____LinkedList__tparam0__int
      //==================================================================

      //==================================================================
      // Function Declaration - printBackwards<:float:>(LinkedList<:float:>) -> void
      JUMP __end____main____printBackwards__float____LinkedList__tparam0__float
      __main____printBackwards__float____LinkedList__tparam0__float:
         // Parameters
            // Param: list
            STACKGET __main__printBackwards__list 0
         // Body
            //------------------------------------------------------------
            // Code Block
               // Function Call - print(char[]) -> void
                  // Arguments
                     // String Literal
                        MALLOC __str 14
                        ASSIGN __str[0] ' '
                        ASSIGN __str[1] ' '
                        ASSIGN __str[2] ' '
                        ASSIGN __str[3] 'B'
                        ASSIGN __str[4] 'a'
                        ASSIGN __str[5] 'c'
                        ASSIGN __str[6] 'k'
                        ASSIGN __str[7] 'w'
                        ASSIGN __str[8] 'a'
                        ASSIGN __str[9] 'r'
                        ASSIGN __str[10] 'd'
                        ASSIGN __str[11] 's'
                        ASSIGN __str[12] ':'
                        ASSIGN __str[13] ' '
                        PUSH __str
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** print
                  CALL print__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
               // Statement results can be ignored
               POP __void
               //---------------------------------------------------------
               // For-Loop
               // Init
                  // Assignment
                     // RHS
                        // Method Call - LinkedList<:float:>::rbegin() -> Node<:float:>
                           // LHS
                              // Identifier - list
                                 PUSH __main__printBackwards__list
                           // RHS
                           // Arguments
                           POP __obj
                           // Pushing args in reverse order
                           PUSH __obj
                           CALL __method____main____LinkedList__float____rbegin
                           POP __void
                           // Remove args
                           RESPONSE __retval
                           PUSH __retval
                     // LHS
                        // Variable Declaration
                           ASSIGN __main__printBackwards__block__63__for__64__iter 0
                     POP __rhs
                     ASSIGN __main__printBackwards__block__63__for__64__iter __rhs
                     PUSH __rhs
               JUMP __forcond__64
               __for__64:
                  // Update
                     // Assignment
                        // RHS
                           // Member Accessor
                              // LHS
                                 // Identifier - iter
                                    PUSH __main__printBackwards__block__63__for__64__iter
                              // RHS
                                 PUSH __field____main____Node__float____prev
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        POP __rhs
                        ASSIGN __main__printBackwards__block__63__for__64__iter __rhs
                        PUSH __rhs
                  __forcond__64:
                  // Condition
                     // Not Equal
                        // LHS
                           // Identifier - iter
                              PUSH __main__printBackwards__block__63__for__64__iter
                        // RHS
                           // Method Call - LinkedList<:float:>::rend() -> Node<:float:>
                              // LHS
                                 // Identifier - list
                                    PUSH __main__printBackwards__list
                              // RHS
                              // Arguments
                              POP __obj
                              // Pushing args in reverse order
                              PUSH __obj
                              CALL __method____main____LinkedList__float____rend
                              POP __void
                              // Remove args
                              RESPONSE __retval
                              PUSH __retval
                        POP __rhs
                        POP __lhs
                        NEQUAL __res __lhs __rhs
                        PUSH __res
                     POP __cond
                     CMP __cond 0
                     JEQ __endfor__64
                  // Body
                     //---------------------------------------------------
                     // Code Block
                        // Function Call - print(float) -> void
                           // Arguments
                              // Member Accessor
                                 // LHS
                                    // Identifier - iter
                                       PUSH __main__printBackwards__block__63__for__64__iter
                                 // RHS
                                    PUSH __field____main____Node__float____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg0
                           // *** print
                           CALL print__float
                           // Remove args
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                        // Statement results can be ignored
                        POP __void
                        // Function Call - print(char[]) -> void
                           // Arguments
                              // String Literal
                                 MALLOC __str 4
                                 ASSIGN __str[0] ' '
                                 ASSIGN __str[1] '<'
                                 ASSIGN __str[2] '-'
                                 ASSIGN __str[3] ' '
                                 PUSH __str
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg0
                           // *** print
                           CALL print__char__1
                           // Remove args
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                        // Statement results can be ignored
                        POP __void
                     //---------------------------------------------------
                  // Repeat
                  JUMP __for__64
                  // End of For
                  __endfor__64:
               //---------------------------------------------------------
               // Function Call - println(char[]) -> void
                  // Arguments
                     // String Literal
                        MALLOC __str 0
                        PUSH __str
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** println
                  CALL println__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
               // Statement results can be ignored
               POP __void
            //------------------------------------------------------------
         RETURN 0
      __end____main____printBackwards__float____LinkedList__tparam0__float:
      // End Function Declaration - __main____printBackwards__float____LinkedList__tparam0__float
      //==================================================================

      //==================================================================
      // Function Declaration - printBackwards<:char[]:>(LinkedList<:char[]:>) -> void
      JUMP __end____main____printBackwards__char__1____LinkedList__tparam0__char
      __main____printBackwards__char__1____LinkedList__tparam0__char:
         // Parameters
            // Param: list
            STACKGET __main__printBackwards__list 0
         // Body
            //------------------------------------------------------------
            // Code Block
               // Function Call - print(char[]) -> void
                  // Arguments
                     // String Literal
                        MALLOC __str 14
                        ASSIGN __str[0] ' '
                        ASSIGN __str[1] ' '
                        ASSIGN __str[2] ' '
                        ASSIGN __str[3] 'B'
                        ASSIGN __str[4] 'a'
                        ASSIGN __str[5] 'c'
                        ASSIGN __str[6] 'k'
                        ASSIGN __str[7] 'w'
                        ASSIGN __str[8] 'a'
                        ASSIGN __str[9] 'r'
                        ASSIGN __str[10] 'd'
                        ASSIGN __str[11] 's'
                        ASSIGN __str[12] ':'
                        ASSIGN __str[13] ' '
                        PUSH __str
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** print
                  CALL print__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
               // Statement results can be ignored
               POP __void
               //---------------------------------------------------------
               // For-Loop
               // Init
                  // Assignment
                     // RHS
                        // Method Call - LinkedList<:char[]:>::rbegin() -> Node<:char[]:>
                           // LHS
                              // Identifier - list
                                 PUSH __main__printBackwards__list
                           // RHS
                           // Arguments
                           POP __obj
                           // Pushing args in reverse order
                           PUSH __obj
                           CALL __method____main____LinkedList__char__1____rbegin
                           POP __void
                           // Remove args
                           RESPONSE __retval
                           PUSH __retval
                     // LHS
                        // Variable Declaration
                           ASSIGN __main__printBackwards__block__66__for__67__iter 0
                     POP __rhs
                     ASSIGN __main__printBackwards__block__66__for__67__iter __rhs
                     PUSH __rhs
               JUMP __forcond__67
               __for__67:
                  // Update
                     // Assignment
                        // RHS
                           // Member Accessor
                              // LHS
                                 // Identifier - iter
                                    PUSH __main__printBackwards__block__66__for__67__iter
                              // RHS
                                 PUSH __field____main____Node__char__1____prev
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        POP __rhs
                        ASSIGN __main__printBackwards__block__66__for__67__iter __rhs
                        PUSH __rhs
                  __forcond__67:
                  // Condition
                     // Not Equal
                        // LHS
                           // Identifier - iter
                              PUSH __main__printBackwards__block__66__for__67__iter
                        // RHS
                           // Method Call - LinkedList<:char[]:>::rend() -> Node<:char[]:>
                              // LHS
                                 // Identifier - list
                                    PUSH __main__printBackwards__list
                              // RHS
                              // Arguments
                              POP __obj
                              // Pushing args in reverse order
                              PUSH __obj
                              CALL __method____main____LinkedList__char__1____rend
                              POP __void
                              // Remove args
                              RESPONSE __retval
                              PUSH __retval
                        POP __rhs
                        POP __lhs
                        NEQUAL __res __lhs __rhs
                        PUSH __res
                     POP __cond
                     CMP __cond 0
                     JEQ __endfor__67
                  // Body
                     //---------------------------------------------------
                     // Code Block
                        // Function Call - print(char[]) -> void
                           // Arguments
                              // Member Accessor
                                 // LHS
                                    // Identifier - iter
                                       PUSH __main__printBackwards__block__66__for__67__iter
                                 // RHS
                                    PUSH __field____main____Node__char__1____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg0
                           // *** print
                           CALL print__char__1
                           // Remove args
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                        // Statement results can be ignored
                        POP __void
                        // Function Call - print(char[]) -> void
                           // Arguments
                              // String Literal
                                 MALLOC __str 4
                                 ASSIGN __str[0] ' '
                                 ASSIGN __str[1] '<'
                                 ASSIGN __str[2] '-'
                                 ASSIGN __str[3] ' '
                                 PUSH __str
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg0
                           // *** print
                           CALL print__char__1
                           // Remove args
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                        // Statement results can be ignored
                        POP __void
                     //---------------------------------------------------
                  // Repeat
                  JUMP __for__67
                  // End of For
                  __endfor__67:
               //---------------------------------------------------------
               // Function Call - println(char[]) -> void
                  // Arguments
                     // String Literal
                        MALLOC __str 0
                        PUSH __str
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** println
                  CALL println__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
               // Statement results can be ignored
               POP __void
            //------------------------------------------------------------
         RETURN 0
      __end____main____printBackwards__char__1____LinkedList__tparam0__char:
      // End Function Declaration - __main____printBackwards__char__1____LinkedList__tparam0__char
      //==================================================================

      //==================================================================
      // Function Declaration - printBackwards<:String:>(LinkedList<:String:>) -> void
      JUMP __end____main____printBackwards__String____LinkedList__tparam0__String
      __main____printBackwards__String____LinkedList__tparam0__String:
         // Parameters
            // Param: list
            STACKGET __main__printBackwards__list 0
         // Body
            //------------------------------------------------------------
            // Code Block
               // Function Call - print(char[]) -> void
                  // Arguments
                     // String Literal
                        MALLOC __str 14
                        ASSIGN __str[0] ' '
                        ASSIGN __str[1] ' '
                        ASSIGN __str[2] ' '
                        ASSIGN __str[3] 'B'
                        ASSIGN __str[4] 'a'
                        ASSIGN __str[5] 'c'
                        ASSIGN __str[6] 'k'
                        ASSIGN __str[7] 'w'
                        ASSIGN __str[8] 'a'
                        ASSIGN __str[9] 'r'
                        ASSIGN __str[10] 'd'
                        ASSIGN __str[11] 's'
                        ASSIGN __str[12] ':'
                        ASSIGN __str[13] ' '
                        PUSH __str
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** print
                  CALL print__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
               // Statement results can be ignored
               POP __void
               //---------------------------------------------------------
               // For-Loop
               // Init
                  // Assignment
                     // RHS
                        // Method Call - LinkedList<:String:>::rbegin() -> Node<:String:>
                           // LHS
                              // Identifier - list
                                 PUSH __main__printBackwards__list
                           // RHS
                           // Arguments
                           POP __obj
                           // Pushing args in reverse order
                           PUSH __obj
                           CALL __method____main____LinkedList__String____rbegin
                           POP __void
                           // Remove args
                           RESPONSE __retval
                           PUSH __retval
                     // LHS
                        // Variable Declaration
                           ASSIGN __main__printBackwards__block__69__for__70__iter 0
                     POP __rhs
                     ASSIGN __main__printBackwards__block__69__for__70__iter __rhs
                     PUSH __rhs
               JUMP __forcond__70
               __for__70:
                  // Update
                     // Assignment
                        // RHS
                           // Member Accessor
                              // LHS
                                 // Identifier - iter
                                    PUSH __main__printBackwards__block__69__for__70__iter
                              // RHS
                                 PUSH __field____main____Node__String____prev
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        POP __rhs
                        ASSIGN __main__printBackwards__block__69__for__70__iter __rhs
                        PUSH __rhs
                  __forcond__70:
                  // Condition
                     // Not Equal
                        // LHS
                           // Identifier - iter
                              PUSH __main__printBackwards__block__69__for__70__iter
                        // RHS
                           // Method Call - LinkedList<:String:>::rend() -> Node<:String:>
                              // LHS
                                 // Identifier - list
                                    PUSH __main__printBackwards__list
                              // RHS
                              // Arguments
                              POP __obj
                              // Pushing args in reverse order
                              PUSH __obj
                              CALL __method____main____LinkedList__String____rend
                              POP __void
                              // Remove args
                              RESPONSE __retval
                              PUSH __retval
                        POP __rhs
                        POP __lhs
                        NEQUAL __res __lhs __rhs
                        PUSH __res
                     POP __cond
                     CMP __cond 0
                     JEQ __endfor__70
                  // Body
                     //---------------------------------------------------
                     // Code Block
                        // Function Call - print(String) -> void
                           // Arguments
                              // Member Accessor
                                 // LHS
                                    // Identifier - iter
                                       PUSH __main__printBackwards__block__69__for__70__iter
                                 // RHS
                                    PUSH __field____main____Node__String____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg0
                           // *** print
                           CALL __main____print__String
                           // Remove args
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                        // Statement results can be ignored
                        POP __void
                        // Function Call - print(char[]) -> void
                           // Arguments
                              // String Literal
                                 MALLOC __str 4
                                 ASSIGN __str[0] ' '
                                 ASSIGN __str[1] '<'
                                 ASSIGN __str[2] '-'
                                 ASSIGN __str[3] ' '
                                 PUSH __str
                              POP __arg0
                           // Pushing args in reverse order
                           PUSH __arg0
                           // *** print
                           CALL print__char__1
                           // Remove args
                           POP __void
                           RESPONSE __retval
                           PUSH __retval
                        // Statement results can be ignored
                        POP __void
                     //---------------------------------------------------
                  // Repeat
                  JUMP __for__70
                  // End of For
                  __endfor__70:
               //---------------------------------------------------------
               // Function Call - println(char[]) -> void
                  // Arguments
                     // String Literal
                        MALLOC __str 0
                        PUSH __str
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** println
                  CALL println__char__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
               // Statement results can be ignored
               POP __void
            //------------------------------------------------------------
         RETURN 0
      __end____main____printBackwards__String____LinkedList__tparam0__String:
      // End Function Declaration - __main____printBackwards__String____LinkedList__tparam0__String
      //==================================================================

// End Function Template - 
//========================================================================

// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 64
         ASSIGN __str[0] '='
         ASSIGN __str[1] '='
         ASSIGN __str[2] '='
         ASSIGN __str[3] ' '
         ASSIGN __str[4] 'T'
         ASSIGN __str[5] 'e'
         ASSIGN __str[6] 's'
         ASSIGN __str[7] 't'
         ASSIGN __str[8] 'i'
         ASSIGN __str[9] 'n'
         ASSIGN __str[10] 'g'
         ASSIGN __str[11] ' '
         ASSIGN __str[12] 'L'
         ASSIGN __str[13] 'i'
         ASSIGN __str[14] 'n'
         ASSIGN __str[15] 'k'
         ASSIGN __str[16] 'e'
         ASSIGN __str[17] 'd'
         ASSIGN __str[18] 'L'
         ASSIGN __str[19] 'i'
         ASSIGN __str[20] 's'
         ASSIGN __str[21] 't'
         ASSIGN __str[22] '<'
         ASSIGN __str[23] ':'
         ASSIGN __str[24] 'i'
         ASSIGN __str[25] 'n'
         ASSIGN __str[26] 't'
         ASSIGN __str[27] ':'
         ASSIGN __str[28] '>'
         ASSIGN __str[29] ' '
         ASSIGN __str[30] '='
         ASSIGN __str[31] '='
         ASSIGN __str[32] '='
         ASSIGN __str[33] '='
         ASSIGN __str[34] '='
         ASSIGN __str[35] '='
         ASSIGN __str[36] '='
         ASSIGN __str[37] '='
         ASSIGN __str[38] '='
         ASSIGN __str[39] '='
         ASSIGN __str[40] '='
         ASSIGN __str[41] '='
         ASSIGN __str[42] '='
         ASSIGN __str[43] '='
         ASSIGN __str[44] '='
         ASSIGN __str[45] '='
         ASSIGN __str[46] '='
         ASSIGN __str[47] '='
         ASSIGN __str[48] '='
         ASSIGN __str[49] '='
         ASSIGN __str[50] '='
         ASSIGN __str[51] '='
         ASSIGN __str[52] '='
         ASSIGN __str[53] '='
         ASSIGN __str[54] '='
         ASSIGN __str[55] '='
         ASSIGN __str[56] '='
         ASSIGN __str[57] '='
         ASSIGN __str[58] '='
         ASSIGN __str[59] '='
         ASSIGN __str[60] '='
         ASSIGN __str[61] '='
         ASSIGN __str[62] '='
         ASSIGN __str[63] '='
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Assignment
   // RHS
      // Constructor Call - LinkedList<:int:>::LinkedList() -> LinkedList<:int:>
         // Arguments
         // Pushing args in reverse order
         CALL __ctor____main____LinkedList__int____LinkedList
         // Remove args
         RESPONSE __retval
         PUSH __retval
   // LHS
      // Variable Declaration
         ASSIGN __main__list 0
   POP __rhs
   ASSIGN __main__list __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:int:>::pushBack(int) -> void
   // LHS
      // Identifier - list
         PUSH __main__list
   // RHS
   // Arguments
      // Int Literal
         PUSH 7
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__int____pushBack__int
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:int:>::pushBack(int) -> void
   // LHS
      // Identifier - list
         PUSH __main__list
   // RHS
   // Arguments
      // Int Literal
         PUSH 42
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__int____pushBack__int
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:int:>::pushBack(int) -> void
   // LHS
      // Identifier - list
         PUSH __main__list
   // RHS
   // Arguments
      // Int Literal
         PUSH 16
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__int____pushBack__int
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:int:>::pushBack(int) -> void
   // LHS
      // Identifier - list
         PUSH __main__list
   // RHS
   // Arguments
      // Int Literal
         PUSH 3
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__int____pushBack__int
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:int:>::pushFront(int) -> void
   // LHS
      // Identifier - list
         PUSH __main__list
   // RHS
   // Arguments
      // Int Literal
         PUSH 17
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__int____pushFront__int
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:int:>::pushFront(int) -> void
   // LHS
      // Identifier - list
         PUSH __main__list
   // RHS
   // Arguments
      // Int Literal
         PUSH 8
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__int____pushFront__int
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:int:>::popBack() -> int
   // LHS
      // Identifier - list
         PUSH __main__list
   // RHS
   // Arguments
   POP __obj
   // Pushing args in reverse order
   PUSH __obj
   CALL __method____main____LinkedList__int____popBack
   POP __void
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:int:>::popFront() -> int
   // LHS
      // Identifier - list
         PUSH __main__list
   // RHS
   // Arguments
   POP __obj
   // Pushing args in reverse order
   PUSH __obj
   CALL __method____main____LinkedList__int____popFront
   POP __void
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:int:>(LinkedList<:int:>) -> void
   // Arguments
      // Identifier - list
         PUSH __main__list
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__int____LinkedList__tparam0__int
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:int:>(LinkedList<:int:>) -> void
   // Arguments
      // Identifier - list
         PUSH __main__list
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__int____LinkedList__tparam0__int
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 9
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'o'
         ASSIGN __str[2] 'p'
         ASSIGN __str[3] ' '
         ASSIGN __str[4] 'F'
         ASSIGN __str[5] 'r'
         ASSIGN __str[6] 'o'
         ASSIGN __str[7] 'n'
         ASSIGN __str[8] 't'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:int:>::popFront() -> int
   // LHS
      // Identifier - list
         PUSH __main__list
   // RHS
   // Arguments
   POP __obj
   // Pushing args in reverse order
   PUSH __obj
   CALL __method____main____LinkedList__int____popFront
   POP __void
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:int:>(LinkedList<:int:>) -> void
   // Arguments
      // Identifier - list
         PUSH __main__list
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__int____LinkedList__tparam0__int
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:int:>(LinkedList<:int:>) -> void
   // Arguments
      // Identifier - list
         PUSH __main__list
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__int____LinkedList__tparam0__int
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 8
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'o'
         ASSIGN __str[2] 'p'
         ASSIGN __str[3] ' '
         ASSIGN __str[4] 'B'
         ASSIGN __str[5] 'a'
         ASSIGN __str[6] 'c'
         ASSIGN __str[7] 'k'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:int:>::popBack() -> int
   // LHS
      // Identifier - list
         PUSH __main__list
   // RHS
   // Arguments
   POP __obj
   // Pushing args in reverse order
   PUSH __obj
   CALL __method____main____LinkedList__int____popBack
   POP __void
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:int:>(LinkedList<:int:>) -> void
   // Arguments
      // Identifier - list
         PUSH __main__list
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__int____LinkedList__tparam0__int
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:int:>(LinkedList<:int:>) -> void
   // Arguments
      // Identifier - list
         PUSH __main__list
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__int____LinkedList__tparam0__int
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 9
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'o'
         ASSIGN __str[2] 'p'
         ASSIGN __str[3] ' '
         ASSIGN __str[4] 'F'
         ASSIGN __str[5] 'r'
         ASSIGN __str[6] 'o'
         ASSIGN __str[7] 'n'
         ASSIGN __str[8] 't'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:int:>::popFront() -> int
   // LHS
      // Identifier - list
         PUSH __main__list
   // RHS
   // Arguments
   POP __obj
   // Pushing args in reverse order
   PUSH __obj
   CALL __method____main____LinkedList__int____popFront
   POP __void
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:int:>(LinkedList<:int:>) -> void
   // Arguments
      // Identifier - list
         PUSH __main__list
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__int____LinkedList__tparam0__int
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:int:>(LinkedList<:int:>) -> void
   // Arguments
      // Identifier - list
         PUSH __main__list
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__int____LinkedList__tparam0__int
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 9
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'o'
         ASSIGN __str[2] 'p'
         ASSIGN __str[3] ' '
         ASSIGN __str[4] 'F'
         ASSIGN __str[5] 'r'
         ASSIGN __str[6] 'o'
         ASSIGN __str[7] 'n'
         ASSIGN __str[8] 't'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:int:>::popFront() -> int
   // LHS
      // Identifier - list
         PUSH __main__list
   // RHS
   // Arguments
   POP __obj
   // Pushing args in reverse order
   PUSH __obj
   CALL __method____main____LinkedList__int____popFront
   POP __void
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:int:>(LinkedList<:int:>) -> void
   // Arguments
      // Identifier - list
         PUSH __main__list
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__int____LinkedList__tparam0__int
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:int:>(LinkedList<:int:>) -> void
   // Arguments
      // Identifier - list
         PUSH __main__list
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__int____LinkedList__tparam0__int
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 9
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'o'
         ASSIGN __str[2] 'p'
         ASSIGN __str[3] ' '
         ASSIGN __str[4] 'F'
         ASSIGN __str[5] 'r'
         ASSIGN __str[6] 'o'
         ASSIGN __str[7] 'n'
         ASSIGN __str[8] 't'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:int:>::popFront() -> int
   // LHS
      // Identifier - list
         PUSH __main__list
   // RHS
   // Arguments
   POP __obj
   // Pushing args in reverse order
   PUSH __obj
   CALL __method____main____LinkedList__int____popFront
   POP __void
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:int:>(LinkedList<:int:>) -> void
   // Arguments
      // Identifier - list
         PUSH __main__list
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__int____LinkedList__tparam0__int
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:int:>(LinkedList<:int:>) -> void
   // Arguments
      // Identifier - list
         PUSH __main__list
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__int____LinkedList__tparam0__int
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 13
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'u'
         ASSIGN __str[2] 's'
         ASSIGN __str[3] 'h'
         ASSIGN __str[4] ' '
         ASSIGN __str[5] 'F'
         ASSIGN __str[6] 'r'
         ASSIGN __str[7] 'o'
         ASSIGN __str[8] 'n'
         ASSIGN __str[9] 't'
         ASSIGN __str[10] ' '
         ASSIGN __str[11] '1'
         ASSIGN __str[12] '5'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:int:>::pushFront(int) -> void
   // LHS
      // Identifier - list
         PUSH __main__list
   // RHS
   // Arguments
      // Int Literal
         PUSH 15
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__int____pushFront__int
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:int:>(LinkedList<:int:>) -> void
   // Arguments
      // Identifier - list
         PUSH __main__list
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__int____LinkedList__tparam0__int
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:int:>(LinkedList<:int:>) -> void
   // Arguments
      // Identifier - list
         PUSH __main__list
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__int____LinkedList__tparam0__int
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 11
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'u'
         ASSIGN __str[2] 's'
         ASSIGN __str[3] 'h'
         ASSIGN __str[4] ' '
         ASSIGN __str[5] 'B'
         ASSIGN __str[6] 'a'
         ASSIGN __str[7] 'c'
         ASSIGN __str[8] 'k'
         ASSIGN __str[9] ' '
         ASSIGN __str[10] '6'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:int:>::pushBack(int) -> void
   // LHS
      // Identifier - list
         PUSH __main__list
   // RHS
   // Arguments
      // Int Literal
         PUSH 6
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__int____pushBack__int
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:int:>(LinkedList<:int:>) -> void
   // Arguments
      // Identifier - list
         PUSH __main__list
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__int____LinkedList__tparam0__int
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:int:>(LinkedList<:int:>) -> void
   // Arguments
      // Identifier - list
         PUSH __main__list
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__int____LinkedList__tparam0__int
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 13
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'u'
         ASSIGN __str[2] 's'
         ASSIGN __str[3] 'h'
         ASSIGN __str[4] ' '
         ASSIGN __str[5] 'F'
         ASSIGN __str[6] 'r'
         ASSIGN __str[7] 'o'
         ASSIGN __str[8] 'n'
         ASSIGN __str[9] 't'
         ASSIGN __str[10] ' '
         ASSIGN __str[11] '4'
         ASSIGN __str[12] '7'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:int:>::pushFront(int) -> void
   // LHS
      // Identifier - list
         PUSH __main__list
   // RHS
   // Arguments
      // Int Literal
         PUSH 47
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__int____pushFront__int
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:int:>(LinkedList<:int:>) -> void
   // Arguments
      // Identifier - list
         PUSH __main__list
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__int____LinkedList__tparam0__int
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:int:>(LinkedList<:int:>) -> void
   // Arguments
      // Identifier - list
         PUSH __main__list
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__int____LinkedList__tparam0__int
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 64
         ASSIGN __str[0] '='
         ASSIGN __str[1] '='
         ASSIGN __str[2] '='
         ASSIGN __str[3] ' '
         ASSIGN __str[4] 'T'
         ASSIGN __str[5] 'e'
         ASSIGN __str[6] 's'
         ASSIGN __str[7] 't'
         ASSIGN __str[8] 'i'
         ASSIGN __str[9] 'n'
         ASSIGN __str[10] 'g'
         ASSIGN __str[11] ' '
         ASSIGN __str[12] 'L'
         ASSIGN __str[13] 'i'
         ASSIGN __str[14] 'n'
         ASSIGN __str[15] 'k'
         ASSIGN __str[16] 'e'
         ASSIGN __str[17] 'd'
         ASSIGN __str[18] 'L'
         ASSIGN __str[19] 'i'
         ASSIGN __str[20] 's'
         ASSIGN __str[21] 't'
         ASSIGN __str[22] '<'
         ASSIGN __str[23] ':'
         ASSIGN __str[24] 'f'
         ASSIGN __str[25] 'l'
         ASSIGN __str[26] 'o'
         ASSIGN __str[27] 'a'
         ASSIGN __str[28] 't'
         ASSIGN __str[29] ':'
         ASSIGN __str[30] '>'
         ASSIGN __str[31] ' '
         ASSIGN __str[32] '='
         ASSIGN __str[33] '='
         ASSIGN __str[34] '='
         ASSIGN __str[35] '='
         ASSIGN __str[36] '='
         ASSIGN __str[37] '='
         ASSIGN __str[38] '='
         ASSIGN __str[39] '='
         ASSIGN __str[40] '='
         ASSIGN __str[41] '='
         ASSIGN __str[42] '='
         ASSIGN __str[43] '='
         ASSIGN __str[44] '='
         ASSIGN __str[45] '='
         ASSIGN __str[46] '='
         ASSIGN __str[47] '='
         ASSIGN __str[48] '='
         ASSIGN __str[49] '='
         ASSIGN __str[50] '='
         ASSIGN __str[51] '='
         ASSIGN __str[52] '='
         ASSIGN __str[53] '='
         ASSIGN __str[54] '='
         ASSIGN __str[55] '='
         ASSIGN __str[56] '='
         ASSIGN __str[57] '='
         ASSIGN __str[58] '='
         ASSIGN __str[59] '='
         ASSIGN __str[60] '='
         ASSIGN __str[61] '='
         ASSIGN __str[62] '='
         ASSIGN __str[63] '='
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Assignment
   // RHS
      // Constructor Call - LinkedList<:float:>::LinkedList() -> LinkedList<:float:>
         // Arguments
         // Pushing args in reverse order
         CALL __ctor____main____LinkedList__float____LinkedList
         // Remove args
         RESPONSE __retval
         PUSH __retval
   // LHS
      // Variable Declaration
         ASSIGN __main__list2 0
   POP __rhs
   ASSIGN __main__list2 __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:float:>::pushBack(float) -> void
   // LHS
      // Identifier - list2
         PUSH __main__list2
   // RHS
   // Arguments
      // Float Literal
         PUSH 7.12
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__float____pushBack__float
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:float:>::pushBack(float) -> void
   // LHS
      // Identifier - list2
         PUSH __main__list2
   // RHS
   // Arguments
      // Float Literal
         PUSH 42.1443
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__float____pushBack__float
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:float:>::pushBack(float) -> void
   // LHS
      // Identifier - list2
         PUSH __main__list2
   // RHS
   // Arguments
      // Float Literal
         PUSH 16.542
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__float____pushBack__float
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:float:>::pushBack(float) -> void
   // LHS
      // Identifier - list2
         PUSH __main__list2
   // RHS
   // Arguments
      // Float Literal
         PUSH 3.14
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__float____pushBack__float
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:float:>::pushFront(float) -> void
   // LHS
      // Identifier - list2
         PUSH __main__list2
   // RHS
   // Arguments
      // Float Literal
         PUSH 17.52
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__float____pushFront__float
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:float:>::pushFront(float) -> void
   // LHS
      // Identifier - list2
         PUSH __main__list2
   // RHS
   // Arguments
      // Float Literal
         PUSH 8.23
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__float____pushFront__float
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:float:>::popBack() -> float
   // LHS
      // Identifier - list2
         PUSH __main__list2
   // RHS
   // Arguments
   POP __obj
   // Pushing args in reverse order
   PUSH __obj
   CALL __method____main____LinkedList__float____popBack
   POP __void
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:float:>::popFront() -> float
   // LHS
      // Identifier - list2
         PUSH __main__list2
   // RHS
   // Arguments
   POP __obj
   // Pushing args in reverse order
   PUSH __obj
   CALL __method____main____LinkedList__float____popFront
   POP __void
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:float:>(LinkedList<:float:>) -> void
   // Arguments
      // Identifier - list2
         PUSH __main__list2
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__float____LinkedList__tparam0__float
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:float:>(LinkedList<:float:>) -> void
   // Arguments
      // Identifier - list2
         PUSH __main__list2
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__float____LinkedList__tparam0__float
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 9
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'o'
         ASSIGN __str[2] 'p'
         ASSIGN __str[3] ' '
         ASSIGN __str[4] 'F'
         ASSIGN __str[5] 'r'
         ASSIGN __str[6] 'o'
         ASSIGN __str[7] 'n'
         ASSIGN __str[8] 't'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:float:>::popFront() -> float
   // LHS
      // Identifier - list2
         PUSH __main__list2
   // RHS
   // Arguments
   POP __obj
   // Pushing args in reverse order
   PUSH __obj
   CALL __method____main____LinkedList__float____popFront
   POP __void
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:float:>(LinkedList<:float:>) -> void
   // Arguments
      // Identifier - list2
         PUSH __main__list2
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__float____LinkedList__tparam0__float
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:float:>(LinkedList<:float:>) -> void
   // Arguments
      // Identifier - list2
         PUSH __main__list2
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__float____LinkedList__tparam0__float
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 8
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'o'
         ASSIGN __str[2] 'p'
         ASSIGN __str[3] ' '
         ASSIGN __str[4] 'B'
         ASSIGN __str[5] 'a'
         ASSIGN __str[6] 'c'
         ASSIGN __str[7] 'k'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:float:>::popBack() -> float
   // LHS
      // Identifier - list2
         PUSH __main__list2
   // RHS
   // Arguments
   POP __obj
   // Pushing args in reverse order
   PUSH __obj
   CALL __method____main____LinkedList__float____popBack
   POP __void
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:float:>(LinkedList<:float:>) -> void
   // Arguments
      // Identifier - list2
         PUSH __main__list2
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__float____LinkedList__tparam0__float
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:float:>(LinkedList<:float:>) -> void
   // Arguments
      // Identifier - list2
         PUSH __main__list2
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__float____LinkedList__tparam0__float
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 9
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'o'
         ASSIGN __str[2] 'p'
         ASSIGN __str[3] ' '
         ASSIGN __str[4] 'F'
         ASSIGN __str[5] 'r'
         ASSIGN __str[6] 'o'
         ASSIGN __str[7] 'n'
         ASSIGN __str[8] 't'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:float:>::popFront() -> float
   // LHS
      // Identifier - list2
         PUSH __main__list2
   // RHS
   // Arguments
   POP __obj
   // Pushing args in reverse order
   PUSH __obj
   CALL __method____main____LinkedList__float____popFront
   POP __void
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:float:>(LinkedList<:float:>) -> void
   // Arguments
      // Identifier - list2
         PUSH __main__list2
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__float____LinkedList__tparam0__float
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:float:>(LinkedList<:float:>) -> void
   // Arguments
      // Identifier - list2
         PUSH __main__list2
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__float____LinkedList__tparam0__float
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 9
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'o'
         ASSIGN __str[2] 'p'
         ASSIGN __str[3] ' '
         ASSIGN __str[4] 'F'
         ASSIGN __str[5] 'r'
         ASSIGN __str[6] 'o'
         ASSIGN __str[7] 'n'
         ASSIGN __str[8] 't'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:float:>::popFront() -> float
   // LHS
      // Identifier - list2
         PUSH __main__list2
   // RHS
   // Arguments
   POP __obj
   // Pushing args in reverse order
   PUSH __obj
   CALL __method____main____LinkedList__float____popFront
   POP __void
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:float:>(LinkedList<:float:>) -> void
   // Arguments
      // Identifier - list2
         PUSH __main__list2
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__float____LinkedList__tparam0__float
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:float:>(LinkedList<:float:>) -> void
   // Arguments
      // Identifier - list2
         PUSH __main__list2
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__float____LinkedList__tparam0__float
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 9
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'o'
         ASSIGN __str[2] 'p'
         ASSIGN __str[3] ' '
         ASSIGN __str[4] 'F'
         ASSIGN __str[5] 'r'
         ASSIGN __str[6] 'o'
         ASSIGN __str[7] 'n'
         ASSIGN __str[8] 't'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:float:>::popFront() -> float
   // LHS
      // Identifier - list2
         PUSH __main__list2
   // RHS
   // Arguments
   POP __obj
   // Pushing args in reverse order
   PUSH __obj
   CALL __method____main____LinkedList__float____popFront
   POP __void
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:float:>(LinkedList<:float:>) -> void
   // Arguments
      // Identifier - list2
         PUSH __main__list2
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__float____LinkedList__tparam0__float
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:float:>(LinkedList<:float:>) -> void
   // Arguments
      // Identifier - list2
         PUSH __main__list2
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__float____LinkedList__tparam0__float
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 16
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'u'
         ASSIGN __str[2] 's'
         ASSIGN __str[3] 'h'
         ASSIGN __str[4] ' '
         ASSIGN __str[5] 'F'
         ASSIGN __str[6] 'r'
         ASSIGN __str[7] 'o'
         ASSIGN __str[8] 'n'
         ASSIGN __str[9] 't'
         ASSIGN __str[10] ' '
         ASSIGN __str[11] '1'
         ASSIGN __str[12] '5'
         ASSIGN __str[13] '.'
         ASSIGN __str[14] '9'
         ASSIGN __str[15] '9'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:float:>::pushFront(float) -> void
   // LHS
      // Identifier - list2
         PUSH __main__list2
   // RHS
   // Arguments
      // Float Literal
         PUSH 15.99
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__float____pushFront__float
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:float:>(LinkedList<:float:>) -> void
   // Arguments
      // Identifier - list2
         PUSH __main__list2
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__float____LinkedList__tparam0__float
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:float:>(LinkedList<:float:>) -> void
   // Arguments
      // Identifier - list2
         PUSH __main__list2
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__float____LinkedList__tparam0__float
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 13
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'u'
         ASSIGN __str[2] 's'
         ASSIGN __str[3] 'h'
         ASSIGN __str[4] ' '
         ASSIGN __str[5] 'B'
         ASSIGN __str[6] 'a'
         ASSIGN __str[7] 'c'
         ASSIGN __str[8] 'k'
         ASSIGN __str[9] ' '
         ASSIGN __str[10] '6'
         ASSIGN __str[11] '.'
         ASSIGN __str[12] '7'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:float:>::pushBack(float) -> void
   // LHS
      // Identifier - list2
         PUSH __main__list2
   // RHS
   // Arguments
      // Float Literal
         PUSH 6.7
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__float____pushBack__float
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:float:>(LinkedList<:float:>) -> void
   // Arguments
      // Identifier - list2
         PUSH __main__list2
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__float____LinkedList__tparam0__float
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:float:>(LinkedList<:float:>) -> void
   // Arguments
      // Identifier - list2
         PUSH __main__list2
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__float____LinkedList__tparam0__float
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 15
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'u'
         ASSIGN __str[2] 's'
         ASSIGN __str[3] 'h'
         ASSIGN __str[4] ' '
         ASSIGN __str[5] 'F'
         ASSIGN __str[6] 'r'
         ASSIGN __str[7] 'o'
         ASSIGN __str[8] 'n'
         ASSIGN __str[9] 't'
         ASSIGN __str[10] ' '
         ASSIGN __str[11] '4'
         ASSIGN __str[12] '7'
         ASSIGN __str[13] '.'
         ASSIGN __str[14] '0'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:float:>::pushFront(float) -> void
   // LHS
      // Identifier - list2
         PUSH __main__list2
   // RHS
   // Arguments
      // Float Literal
         PUSH 47.0
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__float____pushFront__float
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:float:>(LinkedList<:float:>) -> void
   // Arguments
      // Identifier - list2
         PUSH __main__list2
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__float____LinkedList__tparam0__float
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:float:>(LinkedList<:float:>) -> void
   // Arguments
      // Identifier - list2
         PUSH __main__list2
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__float____LinkedList__tparam0__float
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 64
         ASSIGN __str[0] '='
         ASSIGN __str[1] '='
         ASSIGN __str[2] '='
         ASSIGN __str[3] ' '
         ASSIGN __str[4] 'T'
         ASSIGN __str[5] 'e'
         ASSIGN __str[6] 's'
         ASSIGN __str[7] 't'
         ASSIGN __str[8] 'i'
         ASSIGN __str[9] 'n'
         ASSIGN __str[10] 'g'
         ASSIGN __str[11] ' '
         ASSIGN __str[12] 'L'
         ASSIGN __str[13] 'i'
         ASSIGN __str[14] 'n'
         ASSIGN __str[15] 'k'
         ASSIGN __str[16] 'e'
         ASSIGN __str[17] 'd'
         ASSIGN __str[18] 'L'
         ASSIGN __str[19] 'i'
         ASSIGN __str[20] 's'
         ASSIGN __str[21] 't'
         ASSIGN __str[22] '<'
         ASSIGN __str[23] ':'
         ASSIGN __str[24] 'c'
         ASSIGN __str[25] 'h'
         ASSIGN __str[26] 'a'
         ASSIGN __str[27] 'r'
         ASSIGN __str[28] '['
         ASSIGN __str[29] ']'
         ASSIGN __str[30] ':'
         ASSIGN __str[31] '>'
         ASSIGN __str[32] ' '
         ASSIGN __str[33] '='
         ASSIGN __str[34] '='
         ASSIGN __str[35] '='
         ASSIGN __str[36] '='
         ASSIGN __str[37] '='
         ASSIGN __str[38] '='
         ASSIGN __str[39] '='
         ASSIGN __str[40] '='
         ASSIGN __str[41] '='
         ASSIGN __str[42] '='
         ASSIGN __str[43] '='
         ASSIGN __str[44] '='
         ASSIGN __str[45] '='
         ASSIGN __str[46] '='
         ASSIGN __str[47] '='
         ASSIGN __str[48] '='
         ASSIGN __str[49] '='
         ASSIGN __str[50] '='
         ASSIGN __str[51] '='
         ASSIGN __str[52] '='
         ASSIGN __str[53] '='
         ASSIGN __str[54] '='
         ASSIGN __str[55] '='
         ASSIGN __str[56] '='
         ASSIGN __str[57] '='
         ASSIGN __str[58] '='
         ASSIGN __str[59] '='
         ASSIGN __str[60] '='
         ASSIGN __str[61] '='
         ASSIGN __str[62] '='
         ASSIGN __str[63] '='
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Assignment
   // RHS
      // Constructor Call - LinkedList<:char[]:>::LinkedList() -> LinkedList<:char[]:>
         // Arguments
         // Pushing args in reverse order
         CALL __ctor____main____LinkedList__char__1____LinkedList
         // Remove args
         RESPONSE __retval
         PUSH __retval
   // LHS
      // Variable Declaration
         ASSIGN __main__list3 0
   POP __rhs
   ASSIGN __main__list3 __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:char[]:>::pushBack(char[]) -> void
   // LHS
      // Identifier - list3
         PUSH __main__list3
   // RHS
   // Arguments
      // String Literal
         MALLOC __str 5
         ASSIGN __str[0] 'a'
         ASSIGN __str[1] 'p'
         ASSIGN __str[2] 'p'
         ASSIGN __str[3] 'l'
         ASSIGN __str[4] 'e'
         PUSH __str
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__char__1____pushBack__char__1
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:char[]:>::pushBack(char[]) -> void
   // LHS
      // Identifier - list3
         PUSH __main__list3
   // RHS
   // Arguments
      // String Literal
         MALLOC __str 5
         ASSIGN __str[0] 'p'
         ASSIGN __str[1] 'i'
         ASSIGN __str[2] 'z'
         ASSIGN __str[3] 'z'
         ASSIGN __str[4] 'a'
         PUSH __str
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__char__1____pushBack__char__1
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:char[]:>::pushBack(char[]) -> void
   // LHS
      // Identifier - list3
         PUSH __main__list3
   // RHS
   // Arguments
      // String Literal
         MALLOC __str 6
         ASSIGN __str[0] 't'
         ASSIGN __str[1] 'o'
         ASSIGN __str[2] 'm'
         ASSIGN __str[3] 'a'
         ASSIGN __str[4] 't'
         ASSIGN __str[5] 'o'
         PUSH __str
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__char__1____pushBack__char__1
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:char[]:>::pushBack(char[]) -> void
   // LHS
      // Identifier - list3
         PUSH __main__list3
   // RHS
   // Arguments
      // String Literal
         MALLOC __str 7
         ASSIGN __str[0] 'l'
         ASSIGN __str[1] 'i'
         ASSIGN __str[2] 'z'
         ASSIGN __str[3] 'a'
         ASSIGN __str[4] 'r'
         ASSIGN __str[5] 'd'
         ASSIGN __str[6] '?'
         PUSH __str
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__char__1____pushBack__char__1
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:char[]:>::pushFront(char[]) -> void
   // LHS
      // Identifier - list3
         PUSH __main__list3
   // RHS
   // Arguments
      // String Literal
         MALLOC __str 11
         ASSIGN __str[0] 'k'
         ASSIGN __str[1] 'e'
         ASSIGN __str[2] 'v'
         ASSIGN __str[3] 'i'
         ASSIGN __str[4] 'n'
         ASSIGN __str[5] ' '
         ASSIGN __str[6] 'b'
         ASSIGN __str[7] 'a'
         ASSIGN __str[8] 'c'
         ASSIGN __str[9] 'o'
         ASSIGN __str[10] 'n'
         PUSH __str
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__char__1____pushFront__char__1
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:char[]:>::pushFront(char[]) -> void
   // LHS
      // Identifier - list3
         PUSH __main__list3
   // RHS
   // Arguments
      // String Literal
         MALLOC __str 12
         ASSIGN __str[0] 'f'
         ASSIGN __str[1] 'r'
         ASSIGN __str[2] 'e'
         ASSIGN __str[3] 'n'
         ASSIGN __str[4] 'c'
         ASSIGN __str[5] 'h'
         ASSIGN __str[6] ' '
         ASSIGN __str[7] 'f'
         ASSIGN __str[8] 'r'
         ASSIGN __str[9] 'i'
         ASSIGN __str[10] 'e'
         ASSIGN __str[11] 's'
         PUSH __str
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__char__1____pushFront__char__1
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:char[]:>::popBack() -> char[]
   // LHS
      // Identifier - list3
         PUSH __main__list3
   // RHS
   // Arguments
   POP __obj
   // Pushing args in reverse order
   PUSH __obj
   CALL __method____main____LinkedList__char__1____popBack
   POP __void
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:char[]:>::popFront() -> char[]
   // LHS
      // Identifier - list3
         PUSH __main__list3
   // RHS
   // Arguments
   POP __obj
   // Pushing args in reverse order
   PUSH __obj
   CALL __method____main____LinkedList__char__1____popFront
   POP __void
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:char[]:>(LinkedList<:char[]:>) -> void
   // Arguments
      // Identifier - list3
         PUSH __main__list3
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__char__1____LinkedList__tparam0__char
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:char[]:>(LinkedList<:char[]:>) -> void
   // Arguments
      // Identifier - list3
         PUSH __main__list3
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__char__1____LinkedList__tparam0__char
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 9
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'o'
         ASSIGN __str[2] 'p'
         ASSIGN __str[3] ' '
         ASSIGN __str[4] 'F'
         ASSIGN __str[5] 'r'
         ASSIGN __str[6] 'o'
         ASSIGN __str[7] 'n'
         ASSIGN __str[8] 't'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:char[]:>::popFront() -> char[]
   // LHS
      // Identifier - list3
         PUSH __main__list3
   // RHS
   // Arguments
   POP __obj
   // Pushing args in reverse order
   PUSH __obj
   CALL __method____main____LinkedList__char__1____popFront
   POP __void
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:char[]:>(LinkedList<:char[]:>) -> void
   // Arguments
      // Identifier - list3
         PUSH __main__list3
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__char__1____LinkedList__tparam0__char
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:char[]:>(LinkedList<:char[]:>) -> void
   // Arguments
      // Identifier - list3
         PUSH __main__list3
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__char__1____LinkedList__tparam0__char
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 8
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'o'
         ASSIGN __str[2] 'p'
         ASSIGN __str[3] ' '
         ASSIGN __str[4] 'B'
         ASSIGN __str[5] 'a'
         ASSIGN __str[6] 'c'
         ASSIGN __str[7] 'k'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:char[]:>::popBack() -> char[]
   // LHS
      // Identifier - list3
         PUSH __main__list3
   // RHS
   // Arguments
   POP __obj
   // Pushing args in reverse order
   PUSH __obj
   CALL __method____main____LinkedList__char__1____popBack
   POP __void
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:char[]:>(LinkedList<:char[]:>) -> void
   // Arguments
      // Identifier - list3
         PUSH __main__list3
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__char__1____LinkedList__tparam0__char
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:char[]:>(LinkedList<:char[]:>) -> void
   // Arguments
      // Identifier - list3
         PUSH __main__list3
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__char__1____LinkedList__tparam0__char
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 9
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'o'
         ASSIGN __str[2] 'p'
         ASSIGN __str[3] ' '
         ASSIGN __str[4] 'F'
         ASSIGN __str[5] 'r'
         ASSIGN __str[6] 'o'
         ASSIGN __str[7] 'n'
         ASSIGN __str[8] 't'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:char[]:>::popFront() -> char[]
   // LHS
      // Identifier - list3
         PUSH __main__list3
   // RHS
   // Arguments
   POP __obj
   // Pushing args in reverse order
   PUSH __obj
   CALL __method____main____LinkedList__char__1____popFront
   POP __void
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:char[]:>(LinkedList<:char[]:>) -> void
   // Arguments
      // Identifier - list3
         PUSH __main__list3
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__char__1____LinkedList__tparam0__char
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:char[]:>(LinkedList<:char[]:>) -> void
   // Arguments
      // Identifier - list3
         PUSH __main__list3
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__char__1____LinkedList__tparam0__char
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 9
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'o'
         ASSIGN __str[2] 'p'
         ASSIGN __str[3] ' '
         ASSIGN __str[4] 'F'
         ASSIGN __str[5] 'r'
         ASSIGN __str[6] 'o'
         ASSIGN __str[7] 'n'
         ASSIGN __str[8] 't'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:char[]:>::popFront() -> char[]
   // LHS
      // Identifier - list3
         PUSH __main__list3
   // RHS
   // Arguments
   POP __obj
   // Pushing args in reverse order
   PUSH __obj
   CALL __method____main____LinkedList__char__1____popFront
   POP __void
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:char[]:>(LinkedList<:char[]:>) -> void
   // Arguments
      // Identifier - list3
         PUSH __main__list3
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__char__1____LinkedList__tparam0__char
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:char[]:>(LinkedList<:char[]:>) -> void
   // Arguments
      // Identifier - list3
         PUSH __main__list3
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__char__1____LinkedList__tparam0__char
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 9
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'o'
         ASSIGN __str[2] 'p'
         ASSIGN __str[3] ' '
         ASSIGN __str[4] 'F'
         ASSIGN __str[5] 'r'
         ASSIGN __str[6] 'o'
         ASSIGN __str[7] 'n'
         ASSIGN __str[8] 't'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:char[]:>::popFront() -> char[]
   // LHS
      // Identifier - list3
         PUSH __main__list3
   // RHS
   // Arguments
   POP __obj
   // Pushing args in reverse order
   PUSH __obj
   CALL __method____main____LinkedList__char__1____popFront
   POP __void
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:char[]:>(LinkedList<:char[]:>) -> void
   // Arguments
      // Identifier - list3
         PUSH __main__list3
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__char__1____LinkedList__tparam0__char
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:char[]:>(LinkedList<:char[]:>) -> void
   // Arguments
      // Identifier - list3
         PUSH __main__list3
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__char__1____LinkedList__tparam0__char
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 16
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'u'
         ASSIGN __str[2] 's'
         ASSIGN __str[3] 'h'
         ASSIGN __str[4] ' '
         ASSIGN __str[5] 'F'
         ASSIGN __str[6] 'r'
         ASSIGN __str[7] 'o'
         ASSIGN __str[8] 'n'
         ASSIGN __str[9] 't'
         ASSIGN __str[10] ' '
         ASSIGN __str[11] 'p'
         ASSIGN __str[12] 'a'
         ASSIGN __str[13] 's'
         ASSIGN __str[14] 't'
         ASSIGN __str[15] 'a'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:char[]:>::pushFront(char[]) -> void
   // LHS
      // Identifier - list3
         PUSH __main__list3
   // RHS
   // Arguments
      // String Literal
         MALLOC __str 5
         ASSIGN __str[0] 'p'
         ASSIGN __str[1] 'a'
         ASSIGN __str[2] 's'
         ASSIGN __str[3] 't'
         ASSIGN __str[4] 'a'
         PUSH __str
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__char__1____pushFront__char__1
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:char[]:>(LinkedList<:char[]:>) -> void
   // Arguments
      // Identifier - list3
         PUSH __main__list3
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__char__1____LinkedList__tparam0__char
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:char[]:>(LinkedList<:char[]:>) -> void
   // Arguments
      // Identifier - list3
         PUSH __main__list3
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__char__1____LinkedList__tparam0__char
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 15
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'u'
         ASSIGN __str[2] 's'
         ASSIGN __str[3] 'h'
         ASSIGN __str[4] ' '
         ASSIGN __str[5] 'B'
         ASSIGN __str[6] 'a'
         ASSIGN __str[7] 'c'
         ASSIGN __str[8] 'k'
         ASSIGN __str[9] ' '
         ASSIGN __str[10] 'b'
         ASSIGN __str[11] 'r'
         ASSIGN __str[12] 'e'
         ASSIGN __str[13] 'a'
         ASSIGN __str[14] 'd'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:char[]:>::pushBack(char[]) -> void
   // LHS
      // Identifier - list3
         PUSH __main__list3
   // RHS
   // Arguments
      // String Literal
         MALLOC __str 5
         ASSIGN __str[0] 'b'
         ASSIGN __str[1] 'r'
         ASSIGN __str[2] 'e'
         ASSIGN __str[3] 'a'
         ASSIGN __str[4] 'd'
         PUSH __str
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__char__1____pushBack__char__1
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:char[]:>(LinkedList<:char[]:>) -> void
   // Arguments
      // Identifier - list3
         PUSH __main__list3
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__char__1____LinkedList__tparam0__char
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:char[]:>(LinkedList<:char[]:>) -> void
   // Arguments
      // Identifier - list3
         PUSH __main__list3
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__char__1____LinkedList__tparam0__char
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 21
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'u'
         ASSIGN __str[2] 's'
         ASSIGN __str[3] 'h'
         ASSIGN __str[4] ' '
         ASSIGN __str[5] 'F'
         ASSIGN __str[6] 'r'
         ASSIGN __str[7] 'o'
         ASSIGN __str[8] 'n'
         ASSIGN __str[9] 't'
         ASSIGN __str[10] ' '
         ASSIGN __str[11] 'w'
         ASSIGN __str[12] 'a'
         ASSIGN __str[13] 't'
         ASSIGN __str[14] 'e'
         ASSIGN __str[15] 'r'
         ASSIGN __str[16] 'm'
         ASSIGN __str[17] 'e'
         ASSIGN __str[18] 'l'
         ASSIGN __str[19] 'o'
         ASSIGN __str[20] 'n'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:char[]:>::pushFront(char[]) -> void
   // LHS
      // Identifier - list3
         PUSH __main__list3
   // RHS
   // Arguments
      // String Literal
         MALLOC __str 10
         ASSIGN __str[0] 'w'
         ASSIGN __str[1] 'a'
         ASSIGN __str[2] 't'
         ASSIGN __str[3] 'e'
         ASSIGN __str[4] 'r'
         ASSIGN __str[5] 'm'
         ASSIGN __str[6] 'e'
         ASSIGN __str[7] 'l'
         ASSIGN __str[8] 'o'
         ASSIGN __str[9] 'n'
         PUSH __str
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__char__1____pushFront__char__1
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:char[]:>(LinkedList<:char[]:>) -> void
   // Arguments
      // Identifier - list3
         PUSH __main__list3
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__char__1____LinkedList__tparam0__char
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:char[]:>(LinkedList<:char[]:>) -> void
   // Arguments
      // Identifier - list3
         PUSH __main__list3
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__char__1____LinkedList__tparam0__char
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
//========================================================================
// Class Declaration - __main____String inherits __main__Object
   // Creating Dispatch Table
      MALLOC __dtable____main____String 0
      // Populate Dispatch Table
   //---------------------------------------------------------------------
   // Field - char[] String::str
   ASSIGN __field____main____String____str 1
   //---------------------------------------------------------------------
   //---------------------------------------------------------------------
   // Field - int String::size
   ASSIGN __field____main____String____size 2
   //---------------------------------------------------------------------
// skip over class methods
JUMP __endclass____main____String
   //---------------------------------------------------------------------
   // Constructor Declaration - String::String() -> String
   JUMP __end__ctor____main____String____String
   __ctor____main____String____String:
      // Creating Class Instance
         MALLOC __this 3
         // Add Dispatch Table
         ASSIGN __this[0] __dtable____main____String
      // Parameters
      // Body
         //---------------------------------------------------------------
         // Code Block
            // Assignment
               // RHS
                  // String Literal
                     MALLOC __str 0
                     PUSH __str
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____String____str
                     POP __child
                     POP __parent
                     POP __rhs
                     ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
            // Assignment
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____String____size
                     POP __child
                     POP __parent
                     POP __rhs
                     ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
         //---------------------------------------------------------------
      RETURN __this
   __end__ctor____main____String____String:
   // End Constructor Declaration - __ctor____main____String____String
   //---------------------------------------------------------------------

   //---------------------------------------------------------------------
   // Constructor Declaration - String::String(char[]) -> String
   JUMP __end__ctor____main____String____String__char__1
   __ctor____main____String____String__char__1:
      // Creating Class Instance
         MALLOC __this 3
         // Add Dispatch Table
         ASSIGN __this[0] __dtable____main____String
      // Parameters
         // Param: str
         STACKGET __main____String__String__str 0
      // Body
         //---------------------------------------------------------------
         // Code Block
            // Assignment
               // RHS
                  // Identifier - str
                     PUSH __main____String__String__str
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____String____str
                     POP __child
                     POP __parent
                     POP __rhs
                     ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
            // Assignment
               // RHS
                  // Sizeof Operator
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____String____str
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     // Calculate array size
                     POP __array
                     SIZEOF __size __array
                     PUSH __size
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main____String____size
                     POP __child
                     POP __parent
                     POP __rhs
                     ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
         //---------------------------------------------------------------
      RETURN __this
   __end__ctor____main____String____String__char__1:
   // End Constructor Declaration - __ctor____main____String____String__char__1
   //---------------------------------------------------------------------

__endclass____main____String:
// End Class Declaration - __main____String
//========================================================================

//========================================================================
// Function Declaration - print(String) -> void
JUMP __end____main____print__String
__main____print__String:
   // Parameters
      // Param: str
      STACKGET __main__print__str 0
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Function Call - print(char[]) -> void
            // Arguments
               // Member Accessor
                  // LHS
                     // Identifier - str
                        PUSH __main__print__str
                  // RHS
                     PUSH __field____main____String____str
                  POP __child
                  POP __parent
                  PUSH __parent[__child]
               POP __arg0
            // Pushing args in reverse order
            PUSH __arg0
            // *** print
            CALL print__char__1
            // Remove args
            POP __void
            RESPONSE __retval
            PUSH __retval
         // Statement results can be ignored
         POP __void
      //------------------------------------------------------------------
   RETURN 0
__end____main____print__String:
// End Function Declaration - __main____print__String
//========================================================================

//========================================================================
// Function Declaration - println(String) -> void
JUMP __end____main____println__String
__main____println__String:
   // Parameters
      // Param: str
      STACKGET __main__println__str 0
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Function Call - println(char[]) -> void
            // Arguments
               // Member Accessor
                  // LHS
                     // Identifier - str
                        PUSH __main__println__str
                  // RHS
                     PUSH __field____main____String____str
                  POP __child
                  POP __parent
                  PUSH __parent[__child]
               POP __arg0
            // Pushing args in reverse order
            PUSH __arg0
            // *** println
            CALL println__char__1
            // Remove args
            POP __void
            RESPONSE __retval
            PUSH __retval
         // Statement results can be ignored
         POP __void
      //------------------------------------------------------------------
   RETURN 0
__end____main____println__String:
// End Function Declaration - __main____println__String
//========================================================================

// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 64
         ASSIGN __str[0] '='
         ASSIGN __str[1] '='
         ASSIGN __str[2] '='
         ASSIGN __str[3] ' '
         ASSIGN __str[4] 'T'
         ASSIGN __str[5] 'e'
         ASSIGN __str[6] 's'
         ASSIGN __str[7] 't'
         ASSIGN __str[8] 'i'
         ASSIGN __str[9] 'n'
         ASSIGN __str[10] 'g'
         ASSIGN __str[11] ' '
         ASSIGN __str[12] 'L'
         ASSIGN __str[13] 'i'
         ASSIGN __str[14] 'n'
         ASSIGN __str[15] 'k'
         ASSIGN __str[16] 'e'
         ASSIGN __str[17] 'd'
         ASSIGN __str[18] 'L'
         ASSIGN __str[19] 'i'
         ASSIGN __str[20] 's'
         ASSIGN __str[21] 't'
         ASSIGN __str[22] '<'
         ASSIGN __str[23] ':'
         ASSIGN __str[24] 'S'
         ASSIGN __str[25] 't'
         ASSIGN __str[26] 'r'
         ASSIGN __str[27] 'i'
         ASSIGN __str[28] 'n'
         ASSIGN __str[29] 'g'
         ASSIGN __str[30] ':'
         ASSIGN __str[31] '>'
         ASSIGN __str[32] ' '
         ASSIGN __str[33] '='
         ASSIGN __str[34] '='
         ASSIGN __str[35] '='
         ASSIGN __str[36] '='
         ASSIGN __str[37] '='
         ASSIGN __str[38] '='
         ASSIGN __str[39] '='
         ASSIGN __str[40] '='
         ASSIGN __str[41] '='
         ASSIGN __str[42] '='
         ASSIGN __str[43] '='
         ASSIGN __str[44] '='
         ASSIGN __str[45] '='
         ASSIGN __str[46] '='
         ASSIGN __str[47] '='
         ASSIGN __str[48] '='
         ASSIGN __str[49] '='
         ASSIGN __str[50] '='
         ASSIGN __str[51] '='
         ASSIGN __str[52] '='
         ASSIGN __str[53] '='
         ASSIGN __str[54] '='
         ASSIGN __str[55] '='
         ASSIGN __str[56] '='
         ASSIGN __str[57] '='
         ASSIGN __str[58] '='
         ASSIGN __str[59] '='
         ASSIGN __str[60] '='
         ASSIGN __str[61] '='
         ASSIGN __str[62] '='
         ASSIGN __str[63] '='
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Assignment
   // RHS
      // Constructor Call - LinkedList<:String:>::LinkedList() -> LinkedList<:String:>
         // Arguments
         // Pushing args in reverse order
         CALL __ctor____main____LinkedList__String____LinkedList
         // Remove args
         RESPONSE __retval
         PUSH __retval
   // LHS
      // Variable Declaration
         ASSIGN __main__list4 0
   POP __rhs
   ASSIGN __main__list4 __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:String:>::pushBack(String) -> void
   // LHS
      // Identifier - list4
         PUSH __main__list4
   // RHS
   // Arguments
      // Constructor Call - String::String(char[]) -> String
         // Arguments
            // String Literal
               MALLOC __str 5
               ASSIGN __str[0] 'a'
               ASSIGN __str[1] 'p'
               ASSIGN __str[2] 'p'
               ASSIGN __str[3] 'l'
               ASSIGN __str[4] 'e'
               PUSH __str
            POP __arg0
         // Pushing args in reverse order
         PUSH __arg0
         CALL __ctor____main____String____String__char__1
         // Remove args
         POP __void
         RESPONSE __retval
         PUSH __retval
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__String____pushBack__String
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:String:>::pushBack(String) -> void
   // LHS
      // Identifier - list4
         PUSH __main__list4
   // RHS
   // Arguments
      // Constructor Call - String::String(char[]) -> String
         // Arguments
            // String Literal
               MALLOC __str 5
               ASSIGN __str[0] 'p'
               ASSIGN __str[1] 'i'
               ASSIGN __str[2] 'z'
               ASSIGN __str[3] 'z'
               ASSIGN __str[4] 'a'
               PUSH __str
            POP __arg0
         // Pushing args in reverse order
         PUSH __arg0
         CALL __ctor____main____String____String__char__1
         // Remove args
         POP __void
         RESPONSE __retval
         PUSH __retval
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__String____pushBack__String
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:String:>::pushBack(String) -> void
   // LHS
      // Identifier - list4
         PUSH __main__list4
   // RHS
   // Arguments
      // Constructor Call - String::String(char[]) -> String
         // Arguments
            // String Literal
               MALLOC __str 6
               ASSIGN __str[0] 't'
               ASSIGN __str[1] 'o'
               ASSIGN __str[2] 'm'
               ASSIGN __str[3] 'a'
               ASSIGN __str[4] 't'
               ASSIGN __str[5] 'o'
               PUSH __str
            POP __arg0
         // Pushing args in reverse order
         PUSH __arg0
         CALL __ctor____main____String____String__char__1
         // Remove args
         POP __void
         RESPONSE __retval
         PUSH __retval
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__String____pushBack__String
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:String:>::pushBack(String) -> void
   // LHS
      // Identifier - list4
         PUSH __main__list4
   // RHS
   // Arguments
      // Constructor Call - String::String(char[]) -> String
         // Arguments
            // String Literal
               MALLOC __str 7
               ASSIGN __str[0] 'l'
               ASSIGN __str[1] 'i'
               ASSIGN __str[2] 'z'
               ASSIGN __str[3] 'a'
               ASSIGN __str[4] 'r'
               ASSIGN __str[5] 'd'
               ASSIGN __str[6] '?'
               PUSH __str
            POP __arg0
         // Pushing args in reverse order
         PUSH __arg0
         CALL __ctor____main____String____String__char__1
         // Remove args
         POP __void
         RESPONSE __retval
         PUSH __retval
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__String____pushBack__String
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:String:>::pushFront(String) -> void
   // LHS
      // Identifier - list4
         PUSH __main__list4
   // RHS
   // Arguments
      // Constructor Call - String::String(char[]) -> String
         // Arguments
            // String Literal
               MALLOC __str 11
               ASSIGN __str[0] 'k'
               ASSIGN __str[1] 'e'
               ASSIGN __str[2] 'v'
               ASSIGN __str[3] 'i'
               ASSIGN __str[4] 'n'
               ASSIGN __str[5] ' '
               ASSIGN __str[6] 'b'
               ASSIGN __str[7] 'a'
               ASSIGN __str[8] 'c'
               ASSIGN __str[9] 'o'
               ASSIGN __str[10] 'n'
               PUSH __str
            POP __arg0
         // Pushing args in reverse order
         PUSH __arg0
         CALL __ctor____main____String____String__char__1
         // Remove args
         POP __void
         RESPONSE __retval
         PUSH __retval
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__String____pushFront__String
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:String:>::pushFront(String) -> void
   // LHS
      // Identifier - list4
         PUSH __main__list4
   // RHS
   // Arguments
      // Constructor Call - String::String(char[]) -> String
         // Arguments
            // String Literal
               MALLOC __str 12
               ASSIGN __str[0] 'f'
               ASSIGN __str[1] 'r'
               ASSIGN __str[2] 'e'
               ASSIGN __str[3] 'n'
               ASSIGN __str[4] 'c'
               ASSIGN __str[5] 'h'
               ASSIGN __str[6] ' '
               ASSIGN __str[7] 'f'
               ASSIGN __str[8] 'r'
               ASSIGN __str[9] 'i'
               ASSIGN __str[10] 'e'
               ASSIGN __str[11] 's'
               PUSH __str
            POP __arg0
         // Pushing args in reverse order
         PUSH __arg0
         CALL __ctor____main____String____String__char__1
         // Remove args
         POP __void
         RESPONSE __retval
         PUSH __retval
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__String____pushFront__String
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:String:>::popBack() -> String
   // LHS
      // Identifier - list4
         PUSH __main__list4
   // RHS
   // Arguments
   POP __obj
   // Pushing args in reverse order
   PUSH __obj
   CALL __method____main____LinkedList__String____popBack
   POP __void
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:String:>::popFront() -> String
   // LHS
      // Identifier - list4
         PUSH __main__list4
   // RHS
   // Arguments
   POP __obj
   // Pushing args in reverse order
   PUSH __obj
   CALL __method____main____LinkedList__String____popFront
   POP __void
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:String:>(LinkedList<:String:>) -> void
   // Arguments
      // Identifier - list4
         PUSH __main__list4
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__String____LinkedList__tparam0__String
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:String:>(LinkedList<:String:>) -> void
   // Arguments
      // Identifier - list4
         PUSH __main__list4
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__String____LinkedList__tparam0__String
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 9
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'o'
         ASSIGN __str[2] 'p'
         ASSIGN __str[3] ' '
         ASSIGN __str[4] 'F'
         ASSIGN __str[5] 'r'
         ASSIGN __str[6] 'o'
         ASSIGN __str[7] 'n'
         ASSIGN __str[8] 't'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:String:>::popFront() -> String
   // LHS
      // Identifier - list4
         PUSH __main__list4
   // RHS
   // Arguments
   POP __obj
   // Pushing args in reverse order
   PUSH __obj
   CALL __method____main____LinkedList__String____popFront
   POP __void
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:String:>(LinkedList<:String:>) -> void
   // Arguments
      // Identifier - list4
         PUSH __main__list4
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__String____LinkedList__tparam0__String
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:String:>(LinkedList<:String:>) -> void
   // Arguments
      // Identifier - list4
         PUSH __main__list4
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__String____LinkedList__tparam0__String
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 8
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'o'
         ASSIGN __str[2] 'p'
         ASSIGN __str[3] ' '
         ASSIGN __str[4] 'B'
         ASSIGN __str[5] 'a'
         ASSIGN __str[6] 'c'
         ASSIGN __str[7] 'k'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:String:>::popBack() -> String
   // LHS
      // Identifier - list4
         PUSH __main__list4
   // RHS
   // Arguments
   POP __obj
   // Pushing args in reverse order
   PUSH __obj
   CALL __method____main____LinkedList__String____popBack
   POP __void
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:String:>(LinkedList<:String:>) -> void
   // Arguments
      // Identifier - list4
         PUSH __main__list4
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__String____LinkedList__tparam0__String
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:String:>(LinkedList<:String:>) -> void
   // Arguments
      // Identifier - list4
         PUSH __main__list4
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__String____LinkedList__tparam0__String
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 9
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'o'
         ASSIGN __str[2] 'p'
         ASSIGN __str[3] ' '
         ASSIGN __str[4] 'F'
         ASSIGN __str[5] 'r'
         ASSIGN __str[6] 'o'
         ASSIGN __str[7] 'n'
         ASSIGN __str[8] 't'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:String:>::popFront() -> String
   // LHS
      // Identifier - list4
         PUSH __main__list4
   // RHS
   // Arguments
   POP __obj
   // Pushing args in reverse order
   PUSH __obj
   CALL __method____main____LinkedList__String____popFront
   POP __void
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:String:>(LinkedList<:String:>) -> void
   // Arguments
      // Identifier - list4
         PUSH __main__list4
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__String____LinkedList__tparam0__String
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:String:>(LinkedList<:String:>) -> void
   // Arguments
      // Identifier - list4
         PUSH __main__list4
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__String____LinkedList__tparam0__String
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 9
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'o'
         ASSIGN __str[2] 'p'
         ASSIGN __str[3] ' '
         ASSIGN __str[4] 'F'
         ASSIGN __str[5] 'r'
         ASSIGN __str[6] 'o'
         ASSIGN __str[7] 'n'
         ASSIGN __str[8] 't'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:String:>::popFront() -> String
   // LHS
      // Identifier - list4
         PUSH __main__list4
   // RHS
   // Arguments
   POP __obj
   // Pushing args in reverse order
   PUSH __obj
   CALL __method____main____LinkedList__String____popFront
   POP __void
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:String:>(LinkedList<:String:>) -> void
   // Arguments
      // Identifier - list4
         PUSH __main__list4
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__String____LinkedList__tparam0__String
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:String:>(LinkedList<:String:>) -> void
   // Arguments
      // Identifier - list4
         PUSH __main__list4
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__String____LinkedList__tparam0__String
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 9
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'o'
         ASSIGN __str[2] 'p'
         ASSIGN __str[3] ' '
         ASSIGN __str[4] 'F'
         ASSIGN __str[5] 'r'
         ASSIGN __str[6] 'o'
         ASSIGN __str[7] 'n'
         ASSIGN __str[8] 't'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:String:>::popFront() -> String
   // LHS
      // Identifier - list4
         PUSH __main__list4
   // RHS
   // Arguments
   POP __obj
   // Pushing args in reverse order
   PUSH __obj
   CALL __method____main____LinkedList__String____popFront
   POP __void
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:String:>(LinkedList<:String:>) -> void
   // Arguments
      // Identifier - list4
         PUSH __main__list4
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__String____LinkedList__tparam0__String
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:String:>(LinkedList<:String:>) -> void
   // Arguments
      // Identifier - list4
         PUSH __main__list4
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__String____LinkedList__tparam0__String
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 16
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'u'
         ASSIGN __str[2] 's'
         ASSIGN __str[3] 'h'
         ASSIGN __str[4] ' '
         ASSIGN __str[5] 'F'
         ASSIGN __str[6] 'r'
         ASSIGN __str[7] 'o'
         ASSIGN __str[8] 'n'
         ASSIGN __str[9] 't'
         ASSIGN __str[10] ' '
         ASSIGN __str[11] 'p'
         ASSIGN __str[12] 'a'
         ASSIGN __str[13] 's'
         ASSIGN __str[14] 't'
         ASSIGN __str[15] 'a'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:String:>::pushFront(String) -> void
   // LHS
      // Identifier - list4
         PUSH __main__list4
   // RHS
   // Arguments
      // Constructor Call - String::String(char[]) -> String
         // Arguments
            // String Literal
               MALLOC __str 5
               ASSIGN __str[0] 'p'
               ASSIGN __str[1] 'a'
               ASSIGN __str[2] 's'
               ASSIGN __str[3] 't'
               ASSIGN __str[4] 'a'
               PUSH __str
            POP __arg0
         // Pushing args in reverse order
         PUSH __arg0
         CALL __ctor____main____String____String__char__1
         // Remove args
         POP __void
         RESPONSE __retval
         PUSH __retval
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__String____pushFront__String
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:String:>(LinkedList<:String:>) -> void
   // Arguments
      // Identifier - list4
         PUSH __main__list4
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__String____LinkedList__tparam0__String
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:String:>(LinkedList<:String:>) -> void
   // Arguments
      // Identifier - list4
         PUSH __main__list4
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__String____LinkedList__tparam0__String
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 15
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'u'
         ASSIGN __str[2] 's'
         ASSIGN __str[3] 'h'
         ASSIGN __str[4] ' '
         ASSIGN __str[5] 'B'
         ASSIGN __str[6] 'a'
         ASSIGN __str[7] 'c'
         ASSIGN __str[8] 'k'
         ASSIGN __str[9] ' '
         ASSIGN __str[10] 'b'
         ASSIGN __str[11] 'r'
         ASSIGN __str[12] 'e'
         ASSIGN __str[13] 'a'
         ASSIGN __str[14] 'd'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:String:>::pushBack(String) -> void
   // LHS
      // Identifier - list4
         PUSH __main__list4
   // RHS
   // Arguments
      // Constructor Call - String::String(char[]) -> String
         // Arguments
            // String Literal
               MALLOC __str 5
               ASSIGN __str[0] 'b'
               ASSIGN __str[1] 'r'
               ASSIGN __str[2] 'e'
               ASSIGN __str[3] 'a'
               ASSIGN __str[4] 'd'
               PUSH __str
            POP __arg0
         // Pushing args in reverse order
         PUSH __arg0
         CALL __ctor____main____String____String__char__1
         // Remove args
         POP __void
         RESPONSE __retval
         PUSH __retval
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__String____pushBack__String
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:String:>(LinkedList<:String:>) -> void
   // Arguments
      // Identifier - list4
         PUSH __main__list4
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__String____LinkedList__tparam0__String
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:String:>(LinkedList<:String:>) -> void
   // Arguments
      // Identifier - list4
         PUSH __main__list4
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__String____LinkedList__tparam0__String
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 21
         ASSIGN __str[0] 'P'
         ASSIGN __str[1] 'u'
         ASSIGN __str[2] 's'
         ASSIGN __str[3] 'h'
         ASSIGN __str[4] ' '
         ASSIGN __str[5] 'F'
         ASSIGN __str[6] 'r'
         ASSIGN __str[7] 'o'
         ASSIGN __str[8] 'n'
         ASSIGN __str[9] 't'
         ASSIGN __str[10] ' '
         ASSIGN __str[11] 'w'
         ASSIGN __str[12] 'a'
         ASSIGN __str[13] 't'
         ASSIGN __str[14] 'e'
         ASSIGN __str[15] 'r'
         ASSIGN __str[16] 'm'
         ASSIGN __str[17] 'e'
         ASSIGN __str[18] 'l'
         ASSIGN __str[19] 'o'
         ASSIGN __str[20] 'n'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Method Call - LinkedList<:String:>::pushFront(String) -> void
   // LHS
      // Identifier - list4
         PUSH __main__list4
   // RHS
   // Arguments
      // Constructor Call - String::String(char[]) -> String
         // Arguments
            // String Literal
               MALLOC __str 10
               ASSIGN __str[0] 'w'
               ASSIGN __str[1] 'a'
               ASSIGN __str[2] 't'
               ASSIGN __str[3] 'e'
               ASSIGN __str[4] 'r'
               ASSIGN __str[5] 'm'
               ASSIGN __str[6] 'e'
               ASSIGN __str[7] 'l'
               ASSIGN __str[8] 'o'
               ASSIGN __str[9] 'n'
               PUSH __str
            POP __arg0
         // Pushing args in reverse order
         PUSH __arg0
         CALL __ctor____main____String____String__char__1
         // Remove args
         POP __void
         RESPONSE __retval
         PUSH __retval
      POP __arg0
   POP __obj
   // Pushing args in reverse order
   PUSH __arg0
   PUSH __obj
   CALL __method____main____LinkedList__String____pushFront__String
   POP __void
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printForwards<:String:>(LinkedList<:String:>) -> void
   // Arguments
      // Identifier - list4
         PUSH __main__list4
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printForwards
   CALL __main____printForwards__String____LinkedList__tparam0__String
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - printBackwards<:String:>(LinkedList<:String:>) -> void
   // Arguments
      // Identifier - list4
         PUSH __main__list4
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** printBackwards
   CALL __main____printBackwards__String____LinkedList__tparam0__String
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
//========================================================================
// Function Declaration - testScope() -> void
JUMP __end____main____testScope
__main____testScope:
   // Parameters
   // Body
      //------------------------------------------------------------------
      // Code Block
         //===============================================================
         // Class Declaration - __main__testScope__block__76____String inherits __main__Object
            // Creating Dispatch Table
               MALLOC __dtable____main__testScope__block__76____String 0
               // Populate Dispatch Table
            //------------------------------------------------------------
            // Field - char[] String::str
            ASSIGN __field____main__testScope__block__76____String____str 1
            //------------------------------------------------------------
            //------------------------------------------------------------
            // Field - int String::size
            ASSIGN __field____main__testScope__block__76____String____size 2
            //------------------------------------------------------------
         // skip over class methods
         JUMP __endclass____main__testScope__block__76____String
            //------------------------------------------------------------
            // Constructor Declaration - String::String() -> String
            JUMP __end__ctor____main__testScope__block__76____String____String
            __ctor____main__testScope__block__76____String____String:
               // Creating Class Instance
                  MALLOC __this 3
                  // Add Dispatch Table
                  ASSIGN __this[0] __dtable____main__testScope__block__76____String
               // Parameters
               // Body
                  //------------------------------------------------------
                  // Code Block
                     // Assignment
                        // RHS
                           // String Literal
                              MALLOC __str 20
                              ASSIGN __str[0] 'I'
                              ASSIGN __str[1] ' '
                              ASSIGN __str[2] 'a'
                              ASSIGN __str[3] 'r'
                              ASSIGN __str[4] 'e'
                              ASSIGN __str[5] ' '
                              ASSIGN __str[6] 'd'
                              ASSIGN __str[7] 'e'
                              ASSIGN __str[8] 'f'
                              ASSIGN __str[9] 'a'
                              ASSIGN __str[10] 'u'
                              ASSIGN __str[11] 'l'
                              ASSIGN __str[12] 't'
                              ASSIGN __str[13] ' '
                              ASSIGN __str[14] 's'
                              ASSIGN __str[15] 't'
                              ASSIGN __str[16] 'r'
                              ASSIGN __str[17] 'i'
                              ASSIGN __str[18] 'n'
                              ASSIGN __str[19] 'g'
                              PUSH __str
                        // LHS
                           // Member Accessor Assignment
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main__testScope__block__76____String____str
                              POP __child
                              POP __parent
                              POP __rhs
                              ASSIGN __parent[__child] __rhs
                        PUSH __rhs
                     // Statement results can be ignored
                     POP __void
                     // Assignment
                        // RHS
                           // Sizeof Operator
                              // RHS
                                 // Member Accessor
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main__testScope__block__76____String____str
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              // Calculate array size
                              POP __array
                              SIZEOF __size __array
                              PUSH __size
                        // LHS
                           // Member Accessor Assignment
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main__testScope__block__76____String____size
                              POP __child
                              POP __parent
                              POP __rhs
                              ASSIGN __parent[__child] __rhs
                        PUSH __rhs
                     // Statement results can be ignored
                     POP __void
                  //------------------------------------------------------
               RETURN __this
            __end__ctor____main__testScope__block__76____String____String:
            // End Constructor Declaration - __ctor____main__testScope__block__76____String____String
            //------------------------------------------------------------

         __endclass____main__testScope__block__76____String:
         // End Class Declaration - __main__testScope__block__76____String
         //===============================================================

         // Assignment
            // RHS
               // Constructor Call - LinkedList<:String:>::LinkedList() -> LinkedList<:String:>
                  // Arguments
                  // Pushing args in reverse order
                  CALL __ctor____main____LinkedList__String____LinkedList
                  // Remove args
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__testScope__block__76__l 0
            POP __rhs
            ASSIGN __main__testScope__block__76__l __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Function Call - println(char[]) -> void
            // Arguments
               // Member Accessor
                  // LHS
                     // Member Accessor
                        // LHS
                           // Member Accessor
                              // LHS
                                 // Identifier - l
                                    PUSH __main__testScope__block__76__l
                              // RHS
                                 PUSH __field____main____LinkedList__String____header
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // RHS
                           PUSH __field____main____Node__String____data
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                  // RHS
                     PUSH __field____main__testScope__block__76____String____str
                  POP __child
                  POP __parent
                  PUSH __parent[__child]
               POP __arg0
            // Pushing args in reverse order
            PUSH __arg0
            // *** println
            CALL println__char__1
            // Remove args
            POP __void
            RESPONSE __retval
            PUSH __retval
         // Statement results can be ignored
         POP __void
         // Function Call - println(char[]) -> void
            // Arguments
               // String Literal
                  MALLOC __str 91
                  ASSIGN __str[0] 'S'
                  ASSIGN __str[1] 'a'
                  ASSIGN __str[2] 'd'
                  ASSIGN __str[3] 'l'
                  ASSIGN __str[4] 'y'
                  ASSIGN __str[5] ' '
                  ASSIGN __str[6] 's'
                  ASSIGN __str[7] 'h'
                  ASSIGN __str[8] 'a'
                  ASSIGN __str[9] 'd'
                  ASSIGN __str[10] 'o'
                  ASSIGN __str[11] 'w'
                  ASSIGN __str[12] 'i'
                  ASSIGN __str[13] 'n'
                  ASSIGN __str[14] 'g'
                  ASSIGN __str[15] ' '
                  ASSIGN __str[16] 'a'
                  ASSIGN __str[17] ' '
                  ASSIGN __str[18] 'c'
                  ASSIGN __str[19] 'l'
                  ASSIGN __str[20] 'a'
                  ASSIGN __str[21] 's'
                  ASSIGN __str[22] 's'
                  ASSIGN __str[23] ' '
                  ASSIGN __str[24] 'f'
                  ASSIGN __str[25] 'o'
                  ASSIGN __str[26] 'r'
                  ASSIGN __str[27] ' '
                  ASSIGN __str[28] 'a'
                  ASSIGN __str[29] ' '
                  ASSIGN __str[30] 't'
                  ASSIGN __str[31] 'e'
                  ASSIGN __str[32] 'm'
                  ASSIGN __str[33] 'p'
                  ASSIGN __str[34] 'l'
                  ASSIGN __str[35] 'a'
                  ASSIGN __str[36] 't'
                  ASSIGN __str[37] 'e'
                  ASSIGN __str[38] ' '
                  ASSIGN __str[39] 'p'
                  ASSIGN __str[40] 'a'
                  ASSIGN __str[41] 'r'
                  ASSIGN __str[42] 'a'
                  ASSIGN __str[43] 'm'
                  ASSIGN __str[44] ' '
                  ASSIGN __str[45] 'd'
                  ASSIGN __str[46] 'o'
                  ASSIGN __str[47] 'e'
                  ASSIGN __str[48] 's'
                  ASSIGN __str[49] ' '
                  ASSIGN __str[50] 'n'
                  ASSIGN __str[51] 'o'
                  ASSIGN __str[52] 't'
                  ASSIGN __str[53] ' '
                  ASSIGN __str[54] 'c'
                  ASSIGN __str[55] 'r'
                  ASSIGN __str[56] 'e'
                  ASSIGN __str[57] 'a'
                  ASSIGN __str[58] 't'
                  ASSIGN __str[59] 'e'
                  ASSIGN __str[60] ' '
                  ASSIGN __str[61] 'a'
                  ASSIGN __str[62] ' '
                  ASSIGN __str[63] 'n'
                  ASSIGN __str[64] 'e'
                  ASSIGN __str[65] 'w'
                  ASSIGN __str[66] ' '
                  ASSIGN __str[67] 't'
                  ASSIGN __str[68] 'e'
                  ASSIGN __str[69] 'm'
                  ASSIGN __str[70] 'p'
                  ASSIGN __str[71] 'l'
                  ASSIGN __str[72] 'a'
                  ASSIGN __str[73] 't'
                  ASSIGN __str[74] 'e'
                  ASSIGN __str[75] ' '
                  ASSIGN __str[76] 'i'
                  ASSIGN __str[77] 'n'
                  ASSIGN __str[78] 's'
                  ASSIGN __str[79] 't'
                  ASSIGN __str[80] 'a'
                  ASSIGN __str[81] 'n'
                  ASSIGN __str[82] 'c'
                  ASSIGN __str[83] 'e'
                  ASSIGN __str[84] '.'
                  ASSIGN __str[85] '.'
                  ASSIGN __str[86] '.'
                  ASSIGN __str[87] ' '
                  ASSIGN __str[88] 'y'
                  ASSIGN __str[89] 'e'
                  ASSIGN __str[90] 't'
                  PUSH __str
               POP __arg0
            // Pushing args in reverse order
            PUSH __arg0
            // *** println
            CALL println__char__1
            // Remove args
            POP __void
            RESPONSE __retval
            PUSH __retval
         // Statement results can be ignored
         POP __void
      //------------------------------------------------------------------
   RETURN 0
__end____main____testScope:
// End Function Declaration - __main____testScope
//========================================================================

// Function Call - testScope() -> void
   // Arguments
   // Pushing args in reverse order
   // *** testScope
   CALL __main____testScope
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
//========================================================================
//### END OF CODE ########################################################
//========================================================================

