// AmyAssembly compiled from AmyScript
//========================================================================

//========================================================================
//### LIBRARY CODE #######################################################
//========================================================================

// AmyScript Built-in library
// Author: Amy Burnett
//========================================================================

jump __endOfLibrary

//========================================================================
// Global Variables

    assign __null 0

//========================================================================
// Prints a given string to the screen
// void print (char[] stringToPrint);
print__char__1:
    // grab string
    stackget __str 0
    sizeof __size __str
    // print each char
    // init
    assign __i 0
__print__char__1__loop:
    // cond
    cmp __i __size
    jge __print__char__1__endloop
    // Body
    print __str[__i]
    // update
    add __i __i 1
    // repeat
    jump __print__char__1__loop
__print__char__1__endloop:
    return 0

//========================================================================
// Prints an int to the screen
// void print (int intToPrint);
print__int:
    stackget __str 0
    print __str
    return 0

//========================================================================
// Prints a float to the screen
// void print (float floatToPrint);
print__float:
    stackget __str 0
    print __str
    return 0

//========================================================================
// Prints a char to the screen
// void print (char charToPrint);
print__char:
    // grab string
    stackget __char 0
    print __char
    return 0

//========================================================================
// Prints an enum's integer value 
// void print (Enum e);
print__Enum:
    stackget __e 0
    print __e
    return 0

//========================================================================
// Prints a given string to the screen with a newline at the end
// void println (char[] stringToPrint);
println__char__1:
    // grab string
    stackget __str 0
    sizeof __size __str
    // print each char
    // init
    assign __i 0
__println__char__1__loop:
    // cond
    cmp __i __size
    jge __println__char__1__endloop
    // Body
    print __str[__i]
    // update
    add __i __i 1
    // repeat
    jump __println__char__1__loop
__println__char__1__endloop:
    println
    return 0

//========================================================================
// Prints an int to the screen with a newline
// void print (int intToPrint);
println__int:
    stackget __str 0
    println __str
    return 0

//========================================================================
// Prints a float to the screen with a newline
// void println (float floatToPrint);
println__float:
    stackget __str 0
    println __str
    return 0

//========================================================================
// Prints a char to the screen with a newline
// void println (char charToPrint);
println__char:
    // grab string
    stackget __char 0
    println __char
    return 0

//========================================================================
// Prints an enum's integer value with a newline
// void println (Enum e);
println__Enum:
    stackget __e 0
    println __e
    return 0

//========================================================================
// Prints a newline to the console
// void println ();
println:
    println 
    return 0

//========================================================================
// grabs input from the console 
// char[] input ();
input:
    input __line
    return __line

//========================================================================
// exits/stops the program 
exit:
    halt

//========================================================================
// converts int to float
// float intToFloat (int);
intToFloat__int:
    stackget val 0
    itof res val
    return res

//========================================================================
// parses a float from a given char[]
// float stringToFloat (char[]);
stringToFloat__char__1:
    stackget val 0
    stof res val
    return res

//========================================================================
// converts float to int
// int floatToInt (float);
floatToInt__float:
    stackget val 0
    ftoi res val
    return res

//========================================================================
// parses an int from a given char[]
// int stringToInt (char[]);
stringToInt__char__1:
    stackget val 0
    stoi res val
    return res

//========================================================================
// converts int to string
// char[] string (int);
string__int:
    stackget val 0
    string res val
    return res

//========================================================================
// converts float to string
// char[] string (float);
string__float:
    stackget val 0
    string res val
    return res

//========================================================================

__endOfLibrary:
    //push prompt
    //call print

    //call input
    //response name

    //push name
    //call println

//========================================================================
//### COMPILED CODE ######################################################
//========================================================================

//========================================================================
// Class Declaration - __main__Name inherits __main__Object
   // Creating Dispatch Table
      MALLOC __dtable____main__Name 0
      // Populate Dispatch Table
   //---------------------------------------------------------------------
   // Field - char[] Name::name
   ASSIGN __field____main__Name__name 1
   //---------------------------------------------------------------------
// skip over class methods
JUMP __endclass____main__Name
   //---------------------------------------------------------------------
   // Constructor Declaration - Name::Name(char[]) -> Name
   JUMP __end__ctor____main__Name____Name__char__1
   __ctor____main__Name____Name__char__1:
      // Creating Class Instance
         MALLOC __this 2
         // Add Dispatch Table
         ASSIGN __this[0] __dtable____main__Name
      // Parameters
         // Param: name
         STACKGET __main__Name__Name__name 0
      // Body
         //---------------------------------------------------------------
         // Code Block
            // Assignment
               // RHS
                  // Identifier - name
                     PUSH __main__Name__Name__name
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main__Name__name
                     POP __child
                     POP __parent
                     POP __rhs
                     ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
         //---------------------------------------------------------------
      RETURN __this
   __end__ctor____main__Name____Name__char__1:
   // End Constructor Declaration - __ctor____main__Name____Name__char__1
   //---------------------------------------------------------------------

__endclass____main__Name:
// End Class Declaration - __main__Name
//========================================================================

//========================================================================
// Class Declaration - __main__Person inherits __main__Object
   // Creating Dispatch Table
      MALLOC __dtable____main__Person 3
      // Populate Dispatch Table
      ASSIGN __dtable____main__Person[0] __method____main__Person____add__int__int
      ASSIGN __dtable____main__Person[1] __method____main__Person____add__float__float
      ASSIGN __dtable____main__Person[2] __method____main__Person____doThing__char__1
   //---------------------------------------------------------------------
   // Field - Name Person::name
   ASSIGN __field____main__Person__name 1
   //---------------------------------------------------------------------
   //---------------------------------------------------------------------
   // Field - int Person::age
   ASSIGN __field____main__Person__age 2
   //---------------------------------------------------------------------
   //---------------------------------------------------------------------
   // Field - float Person::gpa
   ASSIGN __field____main__Person__gpa 3
   //---------------------------------------------------------------------
// skip over class methods
JUMP __endclass____main__Person
   //---------------------------------------------------------------------
   // Constructor Declaration - Person::Person() -> Person
   JUMP __end__ctor____main__Person____Person
   __ctor____main__Person____Person:
      // Creating Class Instance
         MALLOC __this 4
         // Add Dispatch Table
         ASSIGN __this[0] __dtable____main__Person
      // Parameters
      // Body
         //---------------------------------------------------------------
         // Code Block
            // Assignment
               // RHS
                  // Constructor Call - Name::Name(char[]) -> Name
                     // Arguments
                        // String Literal
                           MALLOC __str 0
                           PUSH __str
                        POP __arg0
                     // Pushing args in reverse order
                     PUSH __arg0
                     CALL __ctor____main__Name____Name__char__1
                     // Remove args
                     POP __void
                     RESPONSE __retval
                     PUSH __retval
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main__Person__name
                     POP __child
                     POP __parent
                     POP __rhs
                     ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
            // Assignment
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main__Person__age
                     POP __child
                     POP __parent
                     POP __rhs
                     ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
            // Assignment
               // RHS
                  // Float Literal
                     PUSH 0.0
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main__Person__gpa
                     POP __child
                     POP __parent
                     POP __rhs
                     ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
         //---------------------------------------------------------------
      RETURN __this
   __end__ctor____main__Person____Person:
   // End Constructor Declaration - __ctor____main__Person____Person
   //---------------------------------------------------------------------

   //---------------------------------------------------------------------
   // Constructor Declaration - Person::Person(char[], int, float) -> Person
   JUMP __end__ctor____main__Person____Person__char__1__int__float
   __ctor____main__Person____Person__char__1__int__float:
      // Creating Class Instance
         MALLOC __this 4
         // Add Dispatch Table
         ASSIGN __this[0] __dtable____main__Person
      // Parameters
         // Param: name
         STACKGET __main__Person__Person__name 0
         // Param: age
         STACKGET __main__Person__Person__age 1
         // Param: gpa
         STACKGET __main__Person__Person__gpa 2
      // Body
         //---------------------------------------------------------------
         // Code Block
            // Assignment
               // RHS
                  // Constructor Call - Name::Name(char[]) -> Name
                     // Arguments
                        // Identifier - name
                           PUSH __main__Person__Person__name
                        POP __arg0
                     // Pushing args in reverse order
                     PUSH __arg0
                     CALL __ctor____main__Name____Name__char__1
                     // Remove args
                     POP __void
                     RESPONSE __retval
                     PUSH __retval
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main__Person__name
                     POP __child
                     POP __parent
                     POP __rhs
                     ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
            // Assignment
               // RHS
                  // Identifier - age
                     PUSH __main__Person__Person__age
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main__Person__age
                     POP __child
                     POP __parent
                     POP __rhs
                     ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
            // Assignment
               // RHS
                  // Identifier - gpa
                     PUSH __main__Person__Person__gpa
               // LHS
                  // Member Accessor Assignment
                     // LHS
                        // This keyword
                           PUSH __this
                     // RHS
                        PUSH __field____main__Person__gpa
                     POP __child
                     POP __parent
                     POP __rhs
                     ASSIGN __parent[__child] __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
         //---------------------------------------------------------------
      RETURN __this
   __end__ctor____main__Person____Person__char__1__int__float:
   // End Constructor Declaration - __ctor____main__Person____Person__char__1__int__float
   //---------------------------------------------------------------------

   //---------------------------------------------------------------------
   // Method Declaration - Person::add(int, int) -> int
   JUMP __end__method____main__Person____add__int__int
   __method____main__Person____add__int__int:
      // Class Instance
         STACKGET __this 0
      // Parameters
         // Param: a
         STACKGET __main__Person__add__a 1
         // Param: b
         STACKGET __main__Person__add__b 2
      // Body
         //---------------------------------------------------------------
         // Code Block
            // Return
               // Addition
                  // LHS
                     // Addition
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main__Person__age
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // RHS
                           // Identifier - a
                              PUSH __main__Person__add__a
                        POP __rhs
                        POP __lhs
                        ADD __res __lhs __rhs
                        PUSH __res
                  // RHS
                     // Identifier - b
                        PUSH __main__Person__add__b
                  POP __rhs
                  POP __lhs
                  ADD __res __lhs __rhs
                  PUSH __res
               POP __rVal
               RETURN __rVal
         //---------------------------------------------------------------
      RETURN 0
   __end__method____main__Person____add__int__int:
   // End Method Declaration - __method____main__Person____add__int__int
   //---------------------------------------------------------------------

   //---------------------------------------------------------------------
   // Method Declaration - Person::add(float, float) -> float
   JUMP __end__method____main__Person____add__float__float
   __method____main__Person____add__float__float:
      // Class Instance
         STACKGET __this 0
      // Parameters
         // Param: a
         STACKGET __main__Person__add__a 1
         // Param: b
         STACKGET __main__Person__add__b 2
      // Body
         //---------------------------------------------------------------
         // Code Block
            // Return
               // Addition
                  // LHS
                     // Addition
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main__Person__gpa
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // RHS
                           // Identifier - a
                              PUSH __main__Person__add__a
                        POP __rhs
                        POP __lhs
                        ADD __res __lhs __rhs
                        PUSH __res
                  // RHS
                     // Identifier - b
                        PUSH __main__Person__add__b
                  POP __rhs
                  POP __lhs
                  ADD __res __lhs __rhs
                  PUSH __res
               POP __rVal
               RETURN __rVal
         //---------------------------------------------------------------
      RETURN 0
   __end__method____main__Person____add__float__float:
   // End Method Declaration - __method____main__Person____add__float__float
   //---------------------------------------------------------------------

   //---------------------------------------------------------------------
   // Method Declaration - Person::doThing(char[]) -> Name
   JUMP __end__method____main__Person____doThing__char__1
   __method____main__Person____doThing__char__1:
      // Class Instance
         STACKGET __this 0
      // Parameters
         // Param: name
         STACKGET __main__Person__doThing__name 1
      // Body
         //---------------------------------------------------------------
         // Code Block
            //============================================================
            // Class Declaration - __main__Person__doThing__block__5__Thing inherits __main__Object
               // Creating Dispatch Table
                  MALLOC __dtable____main__Person__doThing__block__5__Thing 0
                  // Populate Dispatch Table
               //---------------------------------------------------------
               // Field - Name Thing::name
               ASSIGN __field____main__Person__doThing__block__5__Thing__name 1
               //---------------------------------------------------------
               //---------------------------------------------------------
               // Field - int Thing::age
               ASSIGN __field____main__Person__doThing__block__5__Thing__age 2
               //---------------------------------------------------------
               //---------------------------------------------------------
               // Field - float Thing::gpa
               ASSIGN __field____main__Person__doThing__block__5__Thing__gpa 3
               //---------------------------------------------------------
            // skip over class methods
            JUMP __endclass____main__Person__doThing__block__5__Thing
               //---------------------------------------------------------
               // Constructor Declaration - Thing::Thing() -> Thing
               JUMP __end__ctor____main__Person__doThing__block__5__Thing____Thing
               __ctor____main__Person__doThing__block__5__Thing____Thing:
                  // Creating Class Instance
                     MALLOC __this 4
                     // Add Dispatch Table
                     ASSIGN __this[0] __dtable____main__Person__doThing__block__5__Thing
                  // Parameters
                  // Body
                     //---------------------------------------------------
                     // Code Block
                        // Assignment
                           // RHS
                              // Constructor Call - Name::Name(char[]) -> Name
                                 // Arguments
                                    // Identifier - name
                                       PUSH __main__Person__doThing__name
                                    POP __arg0
                                 // Pushing args in reverse order
                                 PUSH __arg0
                                 CALL __ctor____main__Name____Name__char__1
                                 // Remove args
                                 POP __void
                                 RESPONSE __retval
                                 PUSH __retval
                           // LHS
                              // Member Accessor Assignment
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main__Person__doThing__block__5__Thing__name
                                 POP __child
                                 POP __parent
                                 POP __rhs
                                 ASSIGN __parent[__child] __rhs
                           PUSH __rhs
                        // Statement results can be ignored
                        POP __void
                        // Assignment
                           // RHS
                              // Int Literal
                                 PUSH 0
                           // LHS
                              // Member Accessor Assignment
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main__Person__doThing__block__5__Thing__age
                                 POP __child
                                 POP __parent
                                 POP __rhs
                                 ASSIGN __parent[__child] __rhs
                           PUSH __rhs
                        // Statement results can be ignored
                        POP __void
                        // Assignment
                           // RHS
                              // Float Literal
                                 PUSH 0.0
                           // LHS
                              // Member Accessor Assignment
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main__Person__doThing__block__5__Thing__gpa
                                 POP __child
                                 POP __parent
                                 POP __rhs
                                 ASSIGN __parent[__child] __rhs
                           PUSH __rhs
                        // Statement results can be ignored
                        POP __void
                     //---------------------------------------------------
                  RETURN __this
               __end__ctor____main__Person__doThing__block__5__Thing____Thing:
               // End Constructor Declaration - __ctor____main__Person__doThing__block__5__Thing____Thing
               //---------------------------------------------------------

            __endclass____main__Person__doThing__block__5__Thing:
            // End Class Declaration - __main__Person__doThing__block__5__Thing
            //============================================================

            // Assignment
               // RHS
                  // Constructor Call - Thing::Thing() -> Thing
                     // Arguments
                     // Pushing args in reverse order
                     CALL __ctor____main__Person__doThing__block__5__Thing____Thing
                     // Remove args
                     RESPONSE __retval
                     PUSH __retval
               // LHS
                  // Variable Declaration
                     ASSIGN __main__Person__doThing__block__5__t 0
               POP __rhs
               ASSIGN __main__Person__doThing__block__5__t __rhs
               PUSH __rhs
            // Statement results can be ignored
            POP __void
            // Return
               // Member Accessor
                  // LHS
                     // Identifier - t
                        PUSH __main__Person__doThing__block__5__t
                  // RHS
                     PUSH __field____main__Person__doThing__block__5__Thing__name
                  POP __child
                  POP __parent
                  PUSH __parent[__child]
               POP __rVal
               RETURN __rVal
         //---------------------------------------------------------------
      RETURN 0
   __end__method____main__Person____doThing__char__1:
   // End Method Declaration - __method____main__Person____doThing__char__1
   //---------------------------------------------------------------------

__endclass____main__Person:
// End Class Declaration - __main__Person
//========================================================================

//========================================================================
// Function Declaration - add(int, int) -> int
JUMP __end____main____add__int__int
__main____add__int__int:
   // Parameters
      // Param: a
      STACKGET __main__add__a 0
      // Param: b
      STACKGET __main__add__b 1
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Return
            // Addition
               // LHS
                  // Identifier - a
                     PUSH __main__add__a
               // RHS
                  // Identifier - b
                     PUSH __main__add__b
               POP __rhs
               POP __lhs
               ADD __res __lhs __rhs
               PUSH __res
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____add__int__int:
// End Function Declaration - __main____add__int__int
//========================================================================

//========================================================================
// Function Declaration - add(float, float) -> float
JUMP __end____main____add__float__float
__main____add__float__float:
   // Parameters
      // Param: a
      STACKGET __main__add__a 0
      // Param: b
      STACKGET __main__add__b 1
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Return
            // Addition
               // LHS
                  // Identifier - a
                     PUSH __main__add__a
               // RHS
                  // Identifier - b
                     PUSH __main__add__b
               POP __rhs
               POP __lhs
               ADD __res __lhs __rhs
               PUSH __res
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____add__float__float:
// End Function Declaration - __main____add__float__float
//========================================================================

//========================================================================
// Function Declaration - sum(int[]) -> int
JUMP __end____main____sum__int__1
__main____sum__int__1:
   // Parameters
      // Param: a
      STACKGET __main__sum__a 0
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Assignment
            // RHS
               // Int Literal
                  PUSH 0
            // LHS
               // Variable Declaration
                  ASSIGN __main__sum__block__9__sum 0
            POP __rhs
            ASSIGN __main__sum__block__9__sum __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // For-Loop
         // Init
            // Assignment
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Variable Declaration
                     ASSIGN __main__sum__block__9__for__10__i 0
               POP __rhs
               ASSIGN __main__sum__block__9__for__10__i __rhs
               PUSH __rhs
         JUMP __forcond__10
         __for__10:
            // Update
               // Pre-Increment
                  // RHS
                     // Identifier - i
                        PUSH __main__sum__block__9__for__10__i
                  POP __rhs
                  ADD __main__sum__block__9__for__10__i __main__sum__block__9__for__10__i 1
                  ASSIGN __res __main__sum__block__9__for__10__i
                  PUSH __res
            __forcond__10:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - i
                        PUSH __main__sum__block__9__for__10__i
                  // RHS
                     // Sizeof Operator
                        // RHS
                           // Identifier - a
                              PUSH __main__sum__a
                        // Calculate array size
                        POP __array
                        SIZEOF __size __array
                        PUSH __size
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endfor__10
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment
                     // RHS
                        // Addition
                           // LHS
                              // Identifier - sum
                                 PUSH __main__sum__block__9__sum
                           // RHS
                              // Subscript
                                 // LHS
                                    // Identifier - a
                                       PUSH __main__sum__a
                                 // OFFSET
                                    // Identifier - i
                                       PUSH __main__sum__block__9__for__10__i
                                 POP __offset
                                 POP __pointer
                                 PUSH __pointer[__offset]
                           POP __rhs
                           POP __lhs
                           ADD __res __lhs __rhs
                           PUSH __res
                     POP __rhs
                     ASSIGN __main__sum__block__9__sum __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            // Repeat
            JUMP __for__10
            // End of For
            __endfor__10:
         //---------------------------------------------------------------
         // Return
            // Identifier - sum
               PUSH __main__sum__block__9__sum
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____sum__int__1:
// End Function Declaration - __main____sum__int__1
//========================================================================

//========================================================================
// Function Declaration - sum(float[]) -> float
JUMP __end____main____sum__float__1
__main____sum__float__1:
   // Parameters
      // Param: a
      STACKGET __main__sum__a 0
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Assignment
            // RHS
               // Float Literal
                  PUSH 0.0
            // LHS
               // Variable Declaration
                  ASSIGN __main__sum__block__12__sum 0
            POP __rhs
            ASSIGN __main__sum__block__12__sum __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         //---------------------------------------------------------------
         // For-Loop
         // Init
            // Assignment
               // RHS
                  // Int Literal
                     PUSH 0
               // LHS
                  // Variable Declaration
                     ASSIGN __main__sum__block__12__for__13__i 0
               POP __rhs
               ASSIGN __main__sum__block__12__for__13__i __rhs
               PUSH __rhs
         JUMP __forcond__13
         __for__13:
            // Update
               // Pre-Increment
                  // RHS
                     // Identifier - i
                        PUSH __main__sum__block__12__for__13__i
                  POP __rhs
                  ADD __main__sum__block__12__for__13__i __main__sum__block__12__for__13__i 1
                  ASSIGN __res __main__sum__block__12__for__13__i
                  PUSH __res
            __forcond__13:
            // Condition
               // Less Than
                  // LHS
                     // Identifier - i
                        PUSH __main__sum__block__12__for__13__i
                  // RHS
                     // Sizeof Operator
                        // RHS
                           // Identifier - a
                              PUSH __main__sum__a
                        // Calculate array size
                        POP __array
                        SIZEOF __size __array
                        PUSH __size
                  POP __rhs
                  POP __lhs
                  LT __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endfor__13
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment
                     // RHS
                        // Addition
                           // LHS
                              // Identifier - sum
                                 PUSH __main__sum__block__12__sum
                           // RHS
                              // Subscript
                                 // LHS
                                    // Identifier - a
                                       PUSH __main__sum__a
                                 // OFFSET
                                    // Identifier - i
                                       PUSH __main__sum__block__12__for__13__i
                                 POP __offset
                                 POP __pointer
                                 PUSH __pointer[__offset]
                           POP __rhs
                           POP __lhs
                           ADD __res __lhs __rhs
                           PUSH __res
                     POP __rhs
                     ASSIGN __main__sum__block__12__sum __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            // Repeat
            JUMP __for__13
            // End of For
            __endfor__13:
         //---------------------------------------------------------------
         // Return
            // Identifier - sum
               PUSH __main__sum__block__12__sum
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____sum__float__1:
// End Function Declaration - __main____sum__float__1
//========================================================================

//========================================================================
// Function Declaration - sum(float) -> float
JUMP __end____main____sum__float
__main____sum__float:
   // Parameters
      // Param: a
      STACKGET __main__sum__a 0
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Return
            // Identifier - a
               PUSH __main__sum__a
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____sum__float:
// End Function Declaration - __main____sum__float
//========================================================================

// Function Call - println(int) -> void
   // Arguments
      // Function Call - add(int, int) -> int
         // Arguments
            // Int Literal
               PUSH 4
            // Int Literal
               PUSH 6
            POP __arg1
            POP __arg0
         // Pushing args in reverse order
         PUSH __arg1
         PUSH __arg0
         // *** add
         CALL __main____add__int__int
         // Remove args
         POP __void
         POP __void
         RESPONSE __retval
         PUSH __retval
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__int
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(float) -> void
   // Arguments
      // Function Call - add(float, float) -> float
         // Arguments
            // Float Literal
               PUSH 3.14
            // Float Literal
               PUSH 6.1
            POP __arg1
            POP __arg0
         // Pushing args in reverse order
         PUSH __arg1
         PUSH __arg0
         // *** add
         CALL __main____add__float__float
         // Remove args
         POP __void
         POP __void
         RESPONSE __retval
         PUSH __retval
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__float
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - print(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 6
         ASSIGN __str[0] 's'
         ASSIGN __str[1] 'u'
         ASSIGN __str[2] 'm'
         ASSIGN __str[3] ' '
         ASSIGN __str[4] '='
         ASSIGN __str[5] ' '
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** print
   CALL print__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(int) -> void
   // Arguments
      // Function Call - sum(int[]) -> int
         // Arguments
            // Array Constructor
               // Elements
               // Int Literal
                  PUSH 1
               // Int Literal
                  PUSH 2
               // Int Literal
                  PUSH 3
               // Int Literal
                  PUSH 4
               // Int Literal
                  PUSH 5
               // Int Literal
                  PUSH 6
               POP __elem5
               POP __elem4
               POP __elem3
               POP __elem2
               POP __elem1
               POP __elem0
               MALLOC __list 6
               ASSIGN __list[0] __elem0
               ASSIGN __list[1] __elem1
               ASSIGN __list[2] __elem2
               ASSIGN __list[3] __elem3
               ASSIGN __list[4] __elem4
               ASSIGN __list[5] __elem5
               PUSH __list
            POP __arg0
         // Pushing args in reverse order
         PUSH __arg0
         // *** sum
         CALL __main____sum__int__1
         // Remove args
         POP __void
         RESPONSE __retval
         PUSH __retval
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__int
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - print(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 6
         ASSIGN __str[0] 's'
         ASSIGN __str[1] 'u'
         ASSIGN __str[2] 'm'
         ASSIGN __str[3] ' '
         ASSIGN __str[4] '='
         ASSIGN __str[5] ' '
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** print
   CALL print__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(float) -> void
   // Arguments
      // Function Call - sum(float[]) -> float
         // Arguments
            // Array Constructor
               // Elements
               // Float Literal
                  PUSH 1.0
               // Float Literal
                  PUSH 2.0
               // Float Literal
                  PUSH 3.0
               // Float Literal
                  PUSH 4.0
               // Float Literal
                  PUSH 5.0
               // Float Literal
                  PUSH 6.0
               POP __elem5
               POP __elem4
               POP __elem3
               POP __elem2
               POP __elem1
               POP __elem0
               MALLOC __list 6
               ASSIGN __list[0] __elem0
               ASSIGN __list[1] __elem1
               ASSIGN __list[2] __elem2
               ASSIGN __list[3] __elem3
               ASSIGN __list[4] __elem4
               ASSIGN __list[5] __elem5
               PUSH __list
            POP __arg0
         // Pushing args in reverse order
         PUSH __arg0
         // *** sum
         CALL __main____sum__float__1
         // Remove args
         POP __void
         RESPONSE __retval
         PUSH __retval
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__float
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 25
         ASSIGN __str[0] '='
         ASSIGN __str[1] '='
         ASSIGN __str[2] '='
         ASSIGN __str[3] '='
         ASSIGN __str[4] '='
         ASSIGN __str[5] '='
         ASSIGN __str[6] '='
         ASSIGN __str[7] '='
         ASSIGN __str[8] '='
         ASSIGN __str[9] '='
         ASSIGN __str[10] '='
         ASSIGN __str[11] '='
         ASSIGN __str[12] '='
         ASSIGN __str[13] '='
         ASSIGN __str[14] '='
         ASSIGN __str[15] '='
         ASSIGN __str[16] '='
         ASSIGN __str[17] '='
         ASSIGN __str[18] '='
         ASSIGN __str[19] '='
         ASSIGN __str[20] '='
         ASSIGN __str[21] '='
         ASSIGN __str[22] '='
         ASSIGN __str[23] '='
         ASSIGN __str[24] '='
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Assignment
   // RHS
      // Constructor Call - Person::Person(char[], int, float) -> Person
         // Arguments
            // Null Literal
               ASSIGN __null 0
               PUSH __null
            // Int Literal
               PUSH 22
            // Float Literal
               PUSH 3.69
            POP __arg2
            POP __arg1
            POP __arg0
         // Pushing args in reverse order
         PUSH __arg2
         PUSH __arg1
         PUSH __arg0
         CALL __ctor____main__Person____Person__char__1__int__float
         // Remove args
         POP __void
         POP __void
         POP __void
         RESPONSE __retval
         PUSH __retval
   // LHS
      // Variable Declaration
         ASSIGN __main__p 0
   POP __rhs
   ASSIGN __main__p __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Assignment
   // RHS
      // Constructor Call - Name::Name(char[]) -> Name
         // Arguments
            // String Literal
               MALLOC __str 3
               ASSIGN __str[0] 'A'
               ASSIGN __str[1] 'm'
               ASSIGN __str[2] 'y'
               PUSH __str
            POP __arg0
         // Pushing args in reverse order
         PUSH __arg0
         CALL __ctor____main__Name____Name__char__1
         // Remove args
         POP __void
         RESPONSE __retval
         PUSH __retval
   // LHS
      // Member Accessor Assignment
         // LHS
            // Identifier - p
               PUSH __main__p
         // RHS
            PUSH __field____main__Person__name
         POP __child
         POP __parent
         POP __rhs
         ASSIGN __parent[__child] __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Function Call - print(char[]) -> void
   // Arguments
      // Member Accessor
         // LHS
            // Member Accessor
               // LHS
                  // Identifier - p
                     PUSH __main__p
               // RHS
                  PUSH __field____main__Person__name
               POP __child
               POP __parent
               PUSH __parent[__child]
         // RHS
            PUSH __field____main__Name__name
         POP __child
         POP __parent
         PUSH __parent[__child]
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** print
   CALL print__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - print(char) -> void
   // Arguments
      // Char Literal
         PUSH ' '
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** print
   CALL print__char
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - print(int) -> void
   // Arguments
      // Member Accessor
         // LHS
            // Identifier - p
               PUSH __main__p
         // RHS
            PUSH __field____main__Person__age
         POP __child
         POP __parent
         PUSH __parent[__child]
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** print
   CALL print__int
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - print(char) -> void
   // Arguments
      // Char Literal
         PUSH ' '
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** print
   CALL print__char
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - print(int) -> void
   // Arguments
      // Method Call - Person::add(int, int) -> int
         // LHS
            // Identifier - p
               PUSH __main__p
         // RHS
         // Arguments
            // Int Literal
               PUSH 1
            // Int Literal
               PUSH 2
            POP __arg1
            POP __arg0
         POP __obj
         // Pushing args in reverse order
         PUSH __arg1
         PUSH __arg0
         PUSH __obj
         CALL __method____main__Person____add__int__int
         POP __void
         // Remove args
         POP __void
         POP __void
         RESPONSE __retval
         PUSH __retval
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** print
   CALL print__int
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - print(char) -> void
   // Arguments
      // Char Literal
         PUSH ' '
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** print
   CALL print__char
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(float) -> void
   // Arguments
      // Method Call - Person::add(float, float) -> float
         // LHS
            // Identifier - p
               PUSH __main__p
         // RHS
         // Arguments
            // Float Literal
               PUSH 1.0
            // Float Literal
               PUSH 2.0
            POP __arg1
            POP __arg0
         POP __obj
         // Pushing args in reverse order
         PUSH __arg1
         PUSH __arg0
         PUSH __obj
         CALL __method____main__Person____add__float__float
         POP __void
         // Remove args
         POP __void
         POP __void
         RESPONSE __retval
         PUSH __retval
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__float
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 25
         ASSIGN __str[0] '='
         ASSIGN __str[1] '='
         ASSIGN __str[2] '='
         ASSIGN __str[3] '='
         ASSIGN __str[4] '='
         ASSIGN __str[5] '='
         ASSIGN __str[6] '='
         ASSIGN __str[7] '='
         ASSIGN __str[8] '='
         ASSIGN __str[9] '='
         ASSIGN __str[10] '='
         ASSIGN __str[11] '='
         ASSIGN __str[12] '='
         ASSIGN __str[13] '='
         ASSIGN __str[14] '='
         ASSIGN __str[15] '='
         ASSIGN __str[16] '='
         ASSIGN __str[17] '='
         ASSIGN __str[18] '='
         ASSIGN __str[19] '='
         ASSIGN __str[20] '='
         ASSIGN __str[21] '='
         ASSIGN __str[22] '='
         ASSIGN __str[23] '='
         ASSIGN __str[24] '='
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Assignment
   // RHS
      // Constructor Call - Person::Person() -> Person
         // Arguments
         // Pushing args in reverse order
         CALL __ctor____main__Person____Person
         // Remove args
         RESPONSE __retval
         PUSH __retval
   POP __rhs
   ASSIGN __main__p __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
// Function Call - print(char[]) -> void
   // Arguments
      // Member Accessor
         // LHS
            // Member Accessor
               // LHS
                  // Identifier - p
                     PUSH __main__p
               // RHS
                  PUSH __field____main__Person__name
               POP __child
               POP __parent
               PUSH __parent[__child]
         // RHS
            PUSH __field____main__Name__name
         POP __child
         POP __parent
         PUSH __parent[__child]
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** print
   CALL print__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - print(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 1
         ASSIGN __str[0] ' '
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** print
   CALL print__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - print(int) -> void
   // Arguments
      // Member Accessor
         // LHS
            // Identifier - p
               PUSH __main__p
         // RHS
            PUSH __field____main__Person__age
         POP __child
         POP __parent
         PUSH __parent[__child]
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** print
   CALL print__int
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - print(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 1
         ASSIGN __str[0] ' '
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** print
   CALL print__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - print(int) -> void
   // Arguments
      // Method Call - Person::add(int, int) -> int
         // LHS
            // Identifier - p
               PUSH __main__p
         // RHS
         // Arguments
            // Int Literal
               PUSH 1
            // Int Literal
               PUSH 2
            POP __arg1
            POP __arg0
         POP __obj
         // Pushing args in reverse order
         PUSH __arg1
         PUSH __arg0
         PUSH __obj
         CALL __method____main__Person____add__int__int
         POP __void
         // Remove args
         POP __void
         POP __void
         RESPONSE __retval
         PUSH __retval
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** print
   CALL print__int
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - print(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 1
         ASSIGN __str[0] ' '
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** print
   CALL print__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(float) -> void
   // Arguments
      // Method Call - Person::add(float, float) -> float
         // LHS
            // Identifier - p
               PUSH __main__p
         // RHS
         // Arguments
            // Float Literal
               PUSH 1.0
            // Float Literal
               PUSH 2.0
            POP __arg1
            POP __arg0
         POP __obj
         // Pushing args in reverse order
         PUSH __arg1
         PUSH __arg0
         PUSH __obj
         CALL __method____main__Person____add__float__float
         POP __void
         // Remove args
         POP __void
         POP __void
         RESPONSE __retval
         PUSH __retval
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__float
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char[]) -> void
   // Arguments
      // Member Accessor
         // LHS
            // Method Call - Person::doThing(char[]) -> Name
               // LHS
                  // Identifier - p
                     PUSH __main__p
               // RHS
               // Arguments
                  // String Literal
                     MALLOC __str 5
                     ASSIGN __str[0] 'H'
                     ASSIGN __str[1] 'i'
                     ASSIGN __str[2] 'p'
                     ASSIGN __str[3] 'p'
                     ASSIGN __str[4] 'o'
                     PUSH __str
                  POP __arg0
               POP __obj
               // Pushing args in reverse order
               PUSH __arg0
               PUSH __obj
               CALL __method____main__Person____doThing__char__1
               POP __void
               // Remove args
               POP __void
               RESPONSE __retval
               PUSH __retval
         // RHS
            PUSH __field____main__Name__name
         POP __child
         POP __parent
         PUSH __parent[__child]
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - println(char) -> void
   // Arguments
      // Char Literal
         PUSH 'W'
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** println
   CALL println__char
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - print(char) -> void
   // Arguments
      // Char Literal
         PUSH '\n'
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** print
   CALL print__char
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - print(char) -> void
   // Arguments
      // Char Literal
         PUSH '\t'
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** print
   CALL print__char
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - print(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 7
         ASSIGN __str[0] 'h'
         ASSIGN __str[1] 'e'
         ASSIGN __str[2] 'l'
         ASSIGN __str[3] 'l'
         ASSIGN __str[4] 'o'
         ASSIGN __str[5] ' '
         ASSIGN __str[6] '\n'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** print
   CALL print__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
// Function Call - print(char[]) -> void
   // Arguments
      // String Literal
         MALLOC __str 7
         ASSIGN __str[0] 'h'
         ASSIGN __str[1] 'e'
         ASSIGN __str[2] 'n'
         ASSIGN __str[3] 'l'
         ASSIGN __str[4] 'o'
         ASSIGN __str[5] '\t'
         ASSIGN __str[6] '\n'
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   // *** print
   CALL print__char__1
   // Remove args
   POP __void
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
//========================================================================
//### END OF CODE ########################################################
//========================================================================

