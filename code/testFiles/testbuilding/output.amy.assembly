// AmyAssembly compiled from AmyScript
//========================================================================

//========================================================================
//### LIBRARY CODE #######################################################
//========================================================================

// AmyScript Built-in library
// Author: Amy Burnett
//========================================================================
// Global Builtin Variables

    assign __null 0

//========================================================================
// dont execute library functions 

jump __endOfLibrary

//========================================================================
// Prints a given string to the screen
// void print (char[] stringToPrint);
print__char__1:
    // grab string
    stackget __str 0
    sizeof __size __str
    // print each char
    // init
    assign __i 0
__print__char__1__loop:
    // cond
    cmp __i __size
    jge __print__char__1__endloop
    // Body
    print __str[__i]
    // update
    add __i __i 1
    // repeat
    jump __print__char__1__loop
__print__char__1__endloop:
    return 0

//========================================================================
// Prints an int to the screen
// void print (int intToPrint);
print__int:
    stackget __str 0
    print __str
    return 0

//========================================================================
// Prints a float to the screen
// void print (float floatToPrint);
print__float:
    stackget __str 0
    print __str
    return 0

//========================================================================
// Prints a char to the screen
// void print (char charToPrint);
print__char:
    // grab string
    stackget __char 0
    print __char
    return 0

//========================================================================
// Prints an enum's integer value 
// void print (Enum e);
print__Enum:
    stackget __e 0
    print __e
    return 0

//========================================================================
// Prints a given string to the screen with a newline at the end
// void println (char[] stringToPrint);
println__char__1:
    // grab string
    stackget __str 0
    sizeof __size __str
    // print each char
    // init
    assign __i 0
__println__char__1__loop:
    // cond
    cmp __i __size
    jge __println__char__1__endloop
    // Body
    print __str[__i]
    // update
    add __i __i 1
    // repeat
    jump __println__char__1__loop
__println__char__1__endloop:
    println
    return 0

//========================================================================
// Prints an int to the screen with a newline
// void print (int intToPrint);
println__int:
    stackget __str 0
    println __str
    return 0

//========================================================================
// Prints a float to the screen with a newline
// void println (float floatToPrint);
println__float:
    stackget __str 0
    println __str
    return 0

//========================================================================
// Prints a char to the screen with a newline
// void println (char charToPrint);
println__char:
    // grab string
    stackget __char 0
    println __char
    return 0

//========================================================================
// Prints an enum's integer value with a newline
// void println (Enum e);
println__Enum:
    stackget __e 0
    println __e
    return 0

//========================================================================
// Prints a newline to the console
// void println ();
println:
    println 
    return 0

//========================================================================
// grabs input from the console 
// char[] input ();
input:
    input __line
    return __line

//========================================================================
// exits/stops the program 
exit:
    halt

//========================================================================
// returns default float value
// float float ();
float:
    return 0.0

//========================================================================
// converts int to float
// float intToFloat (int);
intToFloat__int:
    stackget val 0
    itof res val
    return res

//========================================================================
// parses a float from a given char[]
// float stringToFloat (char[]);
stringToFloat__char__1:
    stackget val 0
    stof res val
    return res

//========================================================================
// returns default int value
// int int ();
int:
    return 0

//========================================================================
// converts float to int
// int floatToInt (float);
floatToInt__float:
    stackget val 0
    ftoi res val
    return res

//========================================================================
// parses an int from a given char[]
// int stringToInt (char[]);
stringToInt__char__1:
    stackget val 0
    stoi res val
    return res

//========================================================================
// converts int to string
// char[] string (int);
string__int:
    stackget val 0
    string res val
    return res

//========================================================================
// converts float to string
// char[] string (float);
string__float:
    stackget val 0
    string res val
    return res

//========================================================================

// returns default value for array and object (null)
// null null ();
null:
    return __null

//========================================================================

__endOfLibrary:
    //push prompt
    //call print

    //call input
    //response name

    //push name
    //call println

//========================================================================
//### COMPILED CODE ######################################################
//========================================================================

//========================================================================
// Function Declaration - max(int, int) -> int
JUMP __end____main____max__int__int
__main____max__int__int:
   // Parameters
      // Param: a
      STACKGET __main__max__a 0
      // Param: b
      STACKGET __main__max__b 1
   // Body
      //------------------------------------------------------------------
      // Code Block
         //---------------------------------------------------------------
         // If-Statement
            // Condition
               // Greater Than or Equal to
                  // LHS
                     // Identifier - a
                        PUSH __main__max__a
                  // RHS
                     // Identifier - b
                        PUSH __main__max__b
                  POP __rhs
                  POP __lhs
                  GE __res __lhs __rhs
                  PUSH __res
               POP __cond
               CMP __cond 0
               JEQ __endif__1
            // Body
               // Return
                  // Identifier - a
                     PUSH __main__max__a
                  POP __rVal
                  RETURN __rVal
            JUMP __endif__1
            // End of if
            __endif__1:
         //---------------------------------------------------------------
         // Return
            // Identifier - b
               PUSH __main__max__b
            POP __rVal
            RETURN __rVal
      //------------------------------------------------------------------
   RETURN 0
__end____main____max__int__int:
// End Function Declaration - __main____max__int__int
//========================================================================

//========================================================================
// Function Template - 
   // Instances:
      //==================================================================
      // Function Declaration - sum<:int:>(int[]) -> int
      JUMP __end____main____sum__int____int__1
      __main____sum__int____int__1:
         // Parameters
            // Param: vals
            STACKGET __main__sum__vals 0
         // Body
            //------------------------------------------------------------
            // Code Block
               // Assignment
                  // RHS
                     // Function Call - int() -> int
                        // Arguments
                        // Pushing args in reverse order
                        // *** int
                        CALL int
                        // Remove args
                        RESPONSE __retval
                        PUSH __retval
                  // LHS
                     // Variable Declaration
                        ASSIGN __main__sum__block__2__sum 0
                  POP __rhs
                  ASSIGN __main__sum__block__2__sum __rhs
                  PUSH __rhs
               // Statement results can be ignored
               POP __void
               //---------------------------------------------------------
               // For-Loop
               // Init
                  // Assignment
                     // RHS
                        // Int Literal
                           PUSH 0
                     // LHS
                        // Variable Declaration
                           ASSIGN __main__sum__block__2__for__3__i 0
                     POP __rhs
                     ASSIGN __main__sum__block__2__for__3__i __rhs
                     PUSH __rhs
               JUMP __forcond__3
               __for__3:
                  // Update
                     // Pre-Increment
                        // RHS
                           // Identifier - i
                              PUSH __main__sum__block__2__for__3__i
                        POP __rhs
                        ADD __main__sum__block__2__for__3__i __main__sum__block__2__for__3__i 1
                        ASSIGN __res __main__sum__block__2__for__3__i
                        PUSH __res
                  __forcond__3:
                  // Condition
                     // Less Than
                        // LHS
                           // Identifier - i
                              PUSH __main__sum__block__2__for__3__i
                        // RHS
                           // Sizeof Operator
                              // RHS
                                 // Identifier - vals
                                    PUSH __main__sum__vals
                              // Calculate array size
                              POP __array
                              SIZEOF __size __array
                              PUSH __size
                        POP __rhs
                        POP __lhs
                        LT __res __lhs __rhs
                        PUSH __res
                     POP __cond
                     CMP __cond 0
                     JEQ __endfor__3
                  // Body
                     // Assignment
                        // RHS
                           // Addition
                              // LHS
                                 // Identifier - sum
                                    PUSH __main__sum__block__2__sum
                              // RHS
                                 // Subscript
                                    // LHS
                                       // Identifier - vals
                                          PUSH __main__sum__vals
                                    // OFFSET
                                       // Identifier - i
                                          PUSH __main__sum__block__2__for__3__i
                                    POP __offset
                                    POP __pointer
                                    PUSH __pointer[__offset]
                              POP __rhs
                              POP __lhs
                              ADD __res __lhs __rhs
                              PUSH __res
                        POP __rhs
                        ASSIGN __main__sum__block__2__sum __rhs
                        PUSH __rhs
                     // Statement results can be ignored
                     POP __void
                  // Repeat
                  JUMP __for__3
                  // End of For
                  __endfor__3:
               //---------------------------------------------------------
               // Return
                  // Identifier - sum
                     PUSH __main__sum__block__2__sum
                  POP __rVal
                  RETURN __rVal
            //------------------------------------------------------------
         RETURN 0
      __end____main____sum__int____int__1:
      // End Function Declaration - __main____sum__int____int__1
      //==================================================================

// End Function Template - 
//========================================================================

// Assignment
   // RHS
      // Int Literal
         PUSH 10
   // LHS
      // Variable Declaration
         ASSIGN __main__INITIAL_CAPACITY 0
   POP __rhs
   ASSIGN __main__INITIAL_CAPACITY __rhs
   PUSH __rhs
// Statement results can be ignored
POP __void
//========================================================================
// Class Template - 
   // Instances:
      //==================================================================
      // Class Declaration - __main____Vector__int inherits __main__Object
         // Creating Dispatch Table
            MALLOC __dtable____main____Vector__int 6
            // Populate Dispatch Table
            ASSIGN __dtable____main____Vector__int[0] __method____main____Vector__int____get__int
            ASSIGN __dtable____main____Vector__int[1] __method____main____Vector__int____set__int__int
            ASSIGN __dtable____main____Vector__int[2] __method____main____Vector__int____size
            ASSIGN __dtable____main____Vector__int[3] __method____main____Vector__int____is_empty
            ASSIGN __dtable____main____Vector__int[4] __method____main____Vector__int____push_back__int
            ASSIGN __dtable____main____Vector__int[5] __method____main____Vector__int____pop_back
         //---------------------------------------------------------------
         // Field - int[] Vector<:int:>::data
         ASSIGN __field____main____Vector__int____data 1
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - int Vector<:int:>::size
         ASSIGN __field____main____Vector__int____size 2
         //---------------------------------------------------------------
         //---------------------------------------------------------------
         // Field - int Vector<:int:>::capacity
         ASSIGN __field____main____Vector__int____capacity 3
         //---------------------------------------------------------------
      // skip over class methods
      JUMP __endclass____main____Vector__int
         //---------------------------------------------------------------
         // Constructor Declaration - Vector<:int:>::Vector() -> Vector<:int:>
         JUMP __end__ctor____main____Vector__int____Vector
         __ctor____main____Vector__int____Vector:
            // Creating Class Instance
               MALLOC __this 4
               // Add Dispatch Table
               ASSIGN __this[0] __dtable____main____Vector__int
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment
                     // RHS
                        // Identifier - INITIAL_CAPACITY
                           PUSH __main__INITIAL_CAPACITY
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__int____capacity
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Int Literal
                           PUSH 0
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__int____size
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Assignment
                     // RHS
                        // Array Allocator
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__int____capacity
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                           POP __size
                           MALLOC __ptr __size
                           PUSH __ptr
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__int____data
                           POP __child
                           POP __parent
                           POP __rhs
                           ASSIGN __parent[__child] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN __this
         __end__ctor____main____Vector__int____Vector:
         // End Constructor Declaration - __ctor____main____Vector__int____Vector
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:int:>::get(int) -> int
         JUMP __end__method____main____Vector__int____get__int
         __method____main____Vector__int____get__int:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: index
               STACKGET __main____Vector__int__get__index 1
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Subscript
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__int____data
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // OFFSET
                           // Identifier - index
                              PUSH __main____Vector__int__get__index
                        POP __offset
                        POP __pointer
                        PUSH __pointer[__offset]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__int____get__int:
         // End Method Declaration - __method____main____Vector__int____get__int
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:int:>::set(int, int) -> void
         JUMP __end__method____main____Vector__int____set__int__int
         __method____main____Vector__int____set__int__int:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: index
               STACKGET __main____Vector__int__set__index 1
               // Param: value
               STACKGET __main____Vector__int__set__value 2
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Assignment
                     // RHS
                        // Identifier - value
                           PUSH __main____Vector__int__set__value
                     // LHS
                        // Subscript assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__int____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // OFFSET
                              // Identifier - index
                                 PUSH __main____Vector__int__set__index
                           POP __offset
                           POP __pointer
                     POP __rhs
                     ASSIGN __pointer[__offset] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__int____set__int__int:
         // End Method Declaration - __method____main____Vector__int____set__int__int
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:int:>::size() -> int
         JUMP __end__method____main____Vector__int____size
         __method____main____Vector__int____size:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Member Accessor
                        // LHS
                           // This keyword
                              PUSH __this
                        // RHS
                           PUSH __field____main____Vector__int____size
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__int____size:
         // End Method Declaration - __method____main____Vector__int____size
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:int:>::is_empty() -> int
         JUMP __end__method____main____Vector__int____is_empty
         __method____main____Vector__int____is_empty:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  // Return
                     // Equal
                        // LHS
                           // Member Accessor
                              // LHS
                                 // This keyword
                                    PUSH __this
                              // RHS
                                 PUSH __field____main____Vector__int____size
                              POP __child
                              POP __parent
                              PUSH __parent[__child]
                        // RHS
                           // Int Literal
                              PUSH 0
                        POP __rhs
                        POP __lhs
                        EQUAL __res __lhs __rhs
                        PUSH __res
                     POP __rVal
                     RETURN __rVal
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__int____is_empty:
         // End Method Declaration - __method____main____Vector__int____is_empty
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:int:>::push_back(int) -> void
         JUMP __end__method____main____Vector__int____push_back__int
         __method____main____Vector__int____push_back__int:
            // Class Instance
               STACKGET __this 0
            // Parameters
               // Param: value
               STACKGET __main____Vector__int__push_back__value 1
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Equal
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__int____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__int____capacity
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           POP __rhs
                           POP __lhs
                           EQUAL __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__10
                     // Body
                        //------------------------------------------------
                        // Code Block
                           // Assignment
                              // RHS
                                 // Multiplication
                                    // LHS
                                       // Member Accessor
                                          // LHS
                                             // This keyword
                                                PUSH __this
                                          // RHS
                                             PUSH __field____main____Vector__int____capacity
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    // RHS
                                       // Int Literal
                                          PUSH 2
                                    POP __rhs
                                    POP __lhs
                                    MULTIPLY __res __lhs __rhs
                                    PUSH __res
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__int____capacity
                                    POP __child
                                    POP __parent
                                    POP __rhs
                                    ASSIGN __parent[__child] __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           // Assignment
                              // RHS
                                 // Array Allocator
                                    // Member Accessor
                                       // LHS
                                          // This keyword
                                             PUSH __this
                                       // RHS
                                          PUSH __field____main____Vector__int____capacity
                                       POP __child
                                       POP __parent
                                       PUSH __parent[__child]
                                    POP __size
                                    MALLOC __ptr __size
                                    PUSH __ptr
                              // LHS
                                 // Variable Declaration
                                    ASSIGN __main____Vector__int__push_back__block__9__if__10__block__11__new_data 0
                              POP __rhs
                              ASSIGN __main____Vector__int__push_back__block__9__if__10__block__11__new_data __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                           //---------------------------------------------
                           // For-Loop
                           // Init
                              // Assignment
                                 // RHS
                                    // Int Literal
                                       PUSH 0
                                 // LHS
                                    // Variable Declaration
                                       ASSIGN __main____Vector__int__push_back__block__9__if__10__block__11__for__12__i 0
                                 POP __rhs
                                 ASSIGN __main____Vector__int__push_back__block__9__if__10__block__11__for__12__i __rhs
                                 PUSH __rhs
                           JUMP __forcond__12
                           __for__12:
                              // Update
                                 // Pre-Increment
                                    // RHS
                                       // Identifier - i
                                          PUSH __main____Vector__int__push_back__block__9__if__10__block__11__for__12__i
                                    POP __rhs
                                    ADD __main____Vector__int__push_back__block__9__if__10__block__11__for__12__i __main____Vector__int__push_back__block__9__if__10__block__11__for__12__i 1
                                    ASSIGN __res __main____Vector__int__push_back__block__9__if__10__block__11__for__12__i
                                    PUSH __res
                              __forcond__12:
                              // Condition
                                 // Less Than
                                    // LHS
                                       // Identifier - i
                                          PUSH __main____Vector__int__push_back__block__9__if__10__block__11__for__12__i
                                    // RHS
                                       // Member Accessor
                                          // LHS
                                             // This keyword
                                                PUSH __this
                                          // RHS
                                             PUSH __field____main____Vector__int____size
                                          POP __child
                                          POP __parent
                                          PUSH __parent[__child]
                                    POP __rhs
                                    POP __lhs
                                    LT __res __lhs __rhs
                                    PUSH __res
                                 POP __cond
                                 CMP __cond 0
                                 JEQ __endfor__12
                              // Body
                                 // Assignment
                                    // RHS
                                       // Subscript
                                          // LHS
                                             // Member Accessor
                                                // LHS
                                                   // This keyword
                                                      PUSH __this
                                                // RHS
                                                   PUSH __field____main____Vector__int____data
                                                POP __child
                                                POP __parent
                                                PUSH __parent[__child]
                                          // OFFSET
                                             // Identifier - i
                                                PUSH __main____Vector__int__push_back__block__9__if__10__block__11__for__12__i
                                          POP __offset
                                          POP __pointer
                                          PUSH __pointer[__offset]
                                    // LHS
                                       // Subscript assignment
                                          // LHS
                                             // Identifier - new_data
                                                PUSH __main____Vector__int__push_back__block__9__if__10__block__11__new_data
                                          // OFFSET
                                             // Identifier - i
                                                PUSH __main____Vector__int__push_back__block__9__if__10__block__11__for__12__i
                                          POP __offset
                                          POP __pointer
                                    POP __rhs
                                    ASSIGN __pointer[__offset] __rhs
                                    PUSH __rhs
                                 // Statement results can be ignored
                                 POP __void
                              // Repeat
                              JUMP __for__12
                              // End of For
                              __endfor__12:
                           //---------------------------------------------
                           // Free Operator
                              // RHS
                                 // Member Accessor
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__int____data
                                    POP __child
                                    POP __parent
                                    PUSH __parent[__child]
                              // Free array
                              POP __array
                              FREE __array
                              PUSH __array
                           // Statement results can be ignored
                           POP __void
                           // Assignment
                              // RHS
                                 // Identifier - new_data
                                    PUSH __main____Vector__int__push_back__block__9__if__10__block__11__new_data
                              // LHS
                                 // Member Accessor Assignment
                                    // LHS
                                       // This keyword
                                          PUSH __this
                                    // RHS
                                       PUSH __field____main____Vector__int____data
                                    POP __child
                                    POP __parent
                                    POP __rhs
                                    ASSIGN __parent[__child] __rhs
                              PUSH __rhs
                           // Statement results can be ignored
                           POP __void
                        //------------------------------------------------
                     JUMP __endif__10
                     // End of if
                     __endif__10:
                  //------------------------------------------------------
                  // Assignment
                     // RHS
                        // Identifier - value
                           PUSH __main____Vector__int__push_back__value
                     // LHS
                        // Subscript assignment
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__int____data
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // OFFSET
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__int____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           POP __offset
                           POP __pointer
                     POP __rhs
                     ASSIGN __pointer[__offset] __rhs
                     PUSH __rhs
                  // Statement results can be ignored
                  POP __void
                  // Pre-Increment
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__int____size
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     POP __rhs
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__int____size
                           POP __child
                           POP __parent
                           ADD __parent[__child] __parent[__child] 1
                           ASSIGN __res __parent[__child]
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__int____push_back__int:
         // End Method Declaration - __method____main____Vector__int____push_back__int
         //---------------------------------------------------------------

         //---------------------------------------------------------------
         // Method Declaration - Vector<:int:>::pop_back() -> void
         JUMP __end__method____main____Vector__int____pop_back
         __method____main____Vector__int____pop_back:
            // Class Instance
               STACKGET __this 0
            // Parameters
            // Body
               //---------------------------------------------------------
               // Code Block
                  //------------------------------------------------------
                  // If-Statement
                     // Condition
                        // Equal
                           // LHS
                              // Member Accessor
                                 // LHS
                                    // This keyword
                                       PUSH __this
                                 // RHS
                                    PUSH __field____main____Vector__int____size
                                 POP __child
                                 POP __parent
                                 PUSH __parent[__child]
                           // RHS
                              // Int Literal
                                 PUSH 0
                           POP __rhs
                           POP __lhs
                           EQUAL __res __lhs __rhs
                           PUSH __res
                        POP __cond
                        CMP __cond 0
                        JEQ __endif__14
                     // Body
                        // Return
                           RETURN 0
                     JUMP __endif__14
                     // End of if
                     __endif__14:
                  //------------------------------------------------------
                  // Pre-Decrement
                     // RHS
                        // Member Accessor
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__int____size
                           POP __child
                           POP __parent
                           PUSH __parent[__child]
                     POP __rhs
                     // LHS
                        // Member Accessor Assignment
                           // LHS
                              // This keyword
                                 PUSH __this
                           // RHS
                              PUSH __field____main____Vector__int____size
                           POP __child
                           POP __parent
                           SUBTRACT __parent[__child] __parent[__child] 1
                           ASSIGN __res __parent[__child]
                     PUSH __res
                  // Statement results can be ignored
                  POP __void
               //---------------------------------------------------------
            RETURN 0
         __end__method____main____Vector__int____pop_back:
         // End Method Declaration - __method____main____Vector__int____pop_back
         //---------------------------------------------------------------

      __endclass____main____Vector__int:
      // End Class Declaration - __main____Vector__int
      //==================================================================

// End Class Template - 
//========================================================================

//========================================================================
// Function Declaration - main() -> void
JUMP __end____main____main
__main____main:
   // Parameters
   // Body
      //------------------------------------------------------------------
      // Code Block
         // Assignment
            // RHS
               // Constructor Call - Vector<:int:>::Vector() -> Vector<:int:>
                  // Arguments
                  // Pushing args in reverse order
                  CALL __ctor____main____Vector__int____Vector
                  // Remove args
                  RESPONSE __retval
                  PUSH __retval
            // LHS
               // Variable Declaration
                  ASSIGN __main__main__block__15__nums 0
            POP __rhs
            ASSIGN __main__main__block__15__nums __rhs
            PUSH __rhs
         // Statement results can be ignored
         POP __void
         // Method Call - Vector<:int:>::push_back(int) -> void
            // LHS
               // Identifier - nums
                  PUSH __main__main__block__15__nums
            // RHS
            // Arguments
               // Int Literal
                  PUSH 5
               POP __arg0
            POP __obj
            // Pushing args in reverse order
            PUSH __arg0
            PUSH __obj
            CALL __method____main____Vector__int____push_back__int
            POP __void
            // Remove args
            POP __void
            RESPONSE __retval
            PUSH __retval
         // Statement results can be ignored
         POP __void
         // Method Call - Vector<:int:>::push_back(int) -> void
            // LHS
               // Identifier - nums
                  PUSH __main__main__block__15__nums
            // RHS
            // Arguments
               // Int Literal
                  PUSH 7
               POP __arg0
            POP __obj
            // Pushing args in reverse order
            PUSH __arg0
            PUSH __obj
            CALL __method____main____Vector__int____push_back__int
            POP __void
            // Remove args
            POP __void
            RESPONSE __retval
            PUSH __retval
         // Statement results can be ignored
         POP __void
         // Method Call - Vector<:int:>::push_back(int) -> void
            // LHS
               // Identifier - nums
                  PUSH __main__main__block__15__nums
            // RHS
            // Arguments
               // Int Literal
                  PUSH 21
               POP __arg0
            POP __obj
            // Pushing args in reverse order
            PUSH __arg0
            PUSH __obj
            CALL __method____main____Vector__int____push_back__int
            POP __void
            // Remove args
            POP __void
            RESPONSE __retval
            PUSH __retval
         // Statement results can be ignored
         POP __void
         // Method Call - Vector<:int:>::push_back(int) -> void
            // LHS
               // Identifier - nums
                  PUSH __main__main__block__15__nums
            // RHS
            // Arguments
               // Int Literal
                  PUSH 42
               POP __arg0
            POP __obj
            // Pushing args in reverse order
            PUSH __arg0
            PUSH __obj
            CALL __method____main____Vector__int____push_back__int
            POP __void
            // Remove args
            POP __void
            RESPONSE __retval
            PUSH __retval
         // Statement results can be ignored
         POP __void
         // Method Call - Vector<:int:>::push_back(int) -> void
            // LHS
               // Identifier - nums
                  PUSH __main__main__block__15__nums
            // RHS
            // Arguments
               // Int Literal
                  PUSH 3
               POP __arg0
            POP __obj
            // Pushing args in reverse order
            PUSH __arg0
            PUSH __obj
            CALL __method____main____Vector__int____push_back__int
            POP __void
            // Remove args
            POP __void
            RESPONSE __retval
            PUSH __retval
         // Statement results can be ignored
         POP __void
         // Function Call - println(int) -> void
            // Arguments
               // Function Call - sum<:int:>(int[]) -> int
                  // Arguments
                     // Member Accessor
                        // LHS
                           // Identifier - nums
                              PUSH __main__main__block__15__nums
                        // RHS
                           PUSH __field____main____Vector__int____data
                        POP __child
                        POP __parent
                        PUSH __parent[__child]
                     POP __arg0
                  // Pushing args in reverse order
                  PUSH __arg0
                  // *** sum
                  CALL __main____sum__int____int__1
                  // Remove args
                  POP __void
                  RESPONSE __retval
                  PUSH __retval
               POP __arg0
            // Pushing args in reverse order
            PUSH __arg0
            // *** println
            CALL println__int
            // Remove args
            POP __void
            RESPONSE __retval
            PUSH __retval
         // Statement results can be ignored
         POP __void
      //------------------------------------------------------------------
   RETURN 0
__end____main____main:
// End Function Declaration - __main____main
//========================================================================

// Function Call - main() -> void
   // Arguments
   // Pushing args in reverse order
   // *** main
   CALL __main____main
   // Remove args
   RESPONSE __retval
   PUSH __retval
// Statement results can be ignored
POP __void
//========================================================================
//### END OF CODE ########################################################
//========================================================================

