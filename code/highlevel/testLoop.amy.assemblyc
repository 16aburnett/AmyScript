000 [15, 1, 0] jump __endOfLibrary
001 [0, 1, 1, 0, 0] assign __null 0
002 [-1, 2, 2] print:
003 [35, 1, 3, 0, 0] stackget __str 0
004 [32, 1, 4, 1, 3] sizeof __size __str
005 [0, 1, 5, 0, 0] assign __i 0
006 [-1, 6, 6] __print__loop:
007 [28, 1, 5, 1, 4] cmp __i __size
008 [20, 1, 7] jge __print__endloop
009 [8, 2, 1, 3, 1, 5] print __str[__i]
010 [3, 1, 5, 1, 5, 0, 1] add __i __i 1
011 [15, 1, 6] jump __print__loop
012 [-1, 7, 12] __print__endloop:
013 [13, 0, 0] return 0
014 [-1, 8, 14] println:
015 [35, 1, 3, 0, 0] stackget __str 0
016 [32, 1, 4, 1, 3] sizeof __size __str
017 [0, 1, 5, 0, 0] assign __i 0
018 [-1, 9, 18] __println__loop:
019 [28, 1, 5, 1, 4] cmp __i __size
020 [20, 1, 10] jge __println__endloop
021 [8, 2, 1, 3, 1, 5] print __str[__i]
022 [3, 1, 5, 1, 5, 0, 1] add __i __i 1
023 [15, 1, 9] jump __println__loop
024 [-1, 10, 24] __println__endloop:
025 [9] println
026 [13, 0, 0] return 0
027 [-1, 11, 27] printInt:
028 [35, 1, 3, 0, 0] stackget __str 0
029 [8, 1, 3] print __str
030 [13, 0, 0] return 0
031 [-1, 12, 31] printChar:
032 [35, 1, 13, 0, 0] stackget __char 0
033 [8, 1, 13] print __char
034 [13, 0, 0] return 0
035 [-1, 14, 35] input:
036 [10, 1, 15] input __line
037 [13, 1, 15] return __line
038 [-1, 16, 38] intToString:
039 [35, 1, 17, 0, 0] stackget __val 0
040 [13, 0, 0] return 0
041 [-1, 0, 41] __endOfLibrary:
042 [33, 0, 0] PUSH 0
043 [34, 1, 18] POP __rhs
044 [0, 1, 19, 1, 18] ASSIGN i __rhs
045 [33, 1, 18] PUSH __rhs
046 [15, 1, 20] JUMP __forcond0
047 [-1, 21, 47] __for0:
048 [33, 1, 19] PUSH i
049 [34, 1, 18] POP __rhs
050 [3, 1, 19, 1, 19, 0, 1] ADD i i 1
051 [0, 1, 22, 1, 19] ASSIGN __res i
052 [33, 1, 22] PUSH __res
053 [-1, 20, 53] __forcond0:
054 [33, 1, 19] PUSH i
055 [33, 0, 42] PUSH 42
056 [34, 1, 18] POP __rhs
057 [34, 1, 23] POP __lhs
058 [24, 1, 22, 1, 23, 1, 18] LT __res __lhs __rhs
059 [33, 1, 22] PUSH __res
060 [34, 1, 24] POP __cond
061 [28, 1, 24, 0, 0] CMP __cond 0
062 [18, 1, 25] JEQ __endfor0
063 [33, 1, 19] PUSH i
064 [34, 1, 26] POP __arg0
065 [33, 1, 26] PUSH __arg0
066 [12, 1, 11] CALL printInt
067 [34, 1, 1] POP __null
068 [14, 1, 27] RESPONSE __retval
069 [33, 1, 27] PUSH __retval
070 [1, 1, 3, 0, 0] MALLOC __str 0
071 [33, 1, 3] PUSH __str
072 [34, 1, 26] POP __arg0
073 [33, 1, 26] PUSH __arg0
074 [12, 1, 8] CALL println
075 [34, 1, 1] POP __null
076 [14, 1, 27] RESPONSE __retval
077 [33, 1, 27] PUSH __retval
078 [15, 1, 21] JUMP __for0
079 [-1, 25, 79] __endfor0:
080 [33, 0, 10] PUSH 10
081 [34, 1, 18] POP __rhs
082 [0, 1, 19, 1, 18] ASSIGN i __rhs
083 [33, 1, 18] PUSH __rhs
084 [33, 0, 10] PUSH 10
085 [34, 1, 18] POP __rhs
086 [0, 1, 28, 1, 18] ASSIGN x __rhs
087 [33, 1, 18] PUSH __rhs
088 [-1, 29, 88] __while1:
089 [33, 1, 19] PUSH i
090 [33, 0, 0] PUSH 0
091 [34, 1, 18] POP __rhs
092 [34, 1, 23] POP __lhs
093 [26, 1, 22, 1, 23, 1, 18] GT __res __lhs __rhs
094 [33, 1, 22] PUSH __res
095 [34, 1, 24] POP __cond
096 [28, 1, 24, 0, 0] CMP __cond 0
097 [18, 1, 30] JEQ __endwhile1
098 [0, 1, 22, 1, 19] ASSIGN __res i
099 [4, 1, 19, 1, 19, 0, 1] SUBTRACT i i 1
100 [33, 1, 22] PUSH __res
101 [34, 1, 26] POP __arg0
102 [33, 1, 26] PUSH __arg0
103 [12, 1, 11] CALL printInt
104 [34, 1, 1] POP __null
105 [14, 1, 27] RESPONSE __retval
106 [33, 1, 27] PUSH __retval
107 [1, 1, 3, 0, 0] MALLOC __str 0
108 [33, 1, 3] PUSH __str
109 [34, 1, 26] POP __arg0
110 [33, 1, 26] PUSH __arg0
111 [12, 1, 8] CALL println
112 [34, 1, 1] POP __null
113 [14, 1, 27] RESPONSE __retval
114 [33, 1, 27] PUSH __retval
115 [15, 1, 29] JUMP __while1
116 [-1, 30, 116] __endwhile1:
117 [33, 0, 0] PUSH 0
118 [34, 1, 18] POP __rhs
119 [0, 1, 19, 1, 18] ASSIGN i __rhs
120 [33, 1, 18] PUSH __rhs
121 [15, 1, 31] JUMP __forcond2
122 [-1, 32, 122] __for2:
123 [0, 1, 22, 1, 19] ASSIGN __res i
124 [3, 1, 19, 1, 19, 0, 1] ADD i i 1
125 [33, 1, 22] PUSH __res
126 [-1, 31, 126] __forcond2:
127 [33, 1, 19] PUSH i
128 [33, 0, 5] PUSH 5
129 [34, 1, 18] POP __rhs
130 [34, 1, 23] POP __lhs
131 [24, 1, 22, 1, 23, 1, 18] LT __res __lhs __rhs
132 [33, 1, 22] PUSH __res
133 [34, 1, 24] POP __cond
134 [28, 1, 24, 0, 0] CMP __cond 0
135 [18, 1, 33] JEQ __endfor2
136 [33, 0, 0] PUSH 0
137 [34, 1, 18] POP __rhs
138 [0, 1, 34, 1, 18] ASSIGN j __rhs
139 [33, 1, 18] PUSH __rhs
140 [15, 1, 35] JUMP __forcond3
141 [-1, 36, 141] __for3:
142 [0, 1, 22, 1, 34] ASSIGN __res j
143 [3, 1, 34, 1, 34, 0, 1] ADD j j 1
144 [33, 1, 22] PUSH __res
145 [-1, 35, 145] __forcond3:
146 [33, 1, 34] PUSH j
147 [33, 0, 5] PUSH 5
148 [34, 1, 18] POP __rhs
149 [34, 1, 23] POP __lhs
150 [24, 1, 22, 1, 23, 1, 18] LT __res __lhs __rhs
151 [33, 1, 22] PUSH __res
152 [34, 1, 24] POP __cond
153 [28, 1, 24, 0, 0] CMP __cond 0
154 [18, 1, 37] JEQ __endfor3
155 [33, 1, 19] PUSH i
156 [33, 0, 2] PUSH 2
157 [34, 1, 18] POP __rhs
158 [34, 1, 23] POP __lhs
159 [7, 1, 22, 1, 23, 1, 18] MOD __res __lhs __rhs
160 [33, 1, 22] PUSH __res
161 [33, 1, 34] PUSH j
162 [33, 0, 2] PUSH 2
163 [34, 1, 18] POP __rhs
164 [34, 1, 23] POP __lhs
165 [7, 1, 22, 1, 23, 1, 18] MOD __res __lhs __rhs
166 [33, 1, 22] PUSH __res
167 [34, 1, 18] POP __rhs
168 [34, 1, 23] POP __lhs
169 [3, 1, 22, 1, 23, 1, 18] ADD __res __lhs __rhs
170 [33, 1, 22] PUSH __res
171 [33, 0, 2] PUSH 2
172 [34, 1, 18] POP __rhs
173 [34, 1, 23] POP __lhs
174 [7, 1, 22, 1, 23, 1, 18] MOD __res __lhs __rhs
175 [33, 1, 22] PUSH __res
176 [33, 0, 0] PUSH 0
177 [34, 1, 18] POP __rhs
178 [34, 1, 23] POP __lhs
179 [22, 1, 22, 1, 23, 1, 18] EQUAL __res __lhs __rhs
180 [33, 1, 22] PUSH __res
181 [34, 1, 24] POP __cond
182 [28, 1, 24, 0, 0] CMP __cond 0
183 [18, 1, 38] JEQ __else4
184 [1, 1, 3, 0, 1] MALLOC __str 1
185 [0, 2, 1, 3, 0, 0, 0, 'x'] ASSIGN __str[0] 'x'
186 [33, 1, 3] PUSH __str
187 [34, 1, 26] POP __arg0
188 [33, 1, 26] PUSH __arg0
189 [12, 1, 2] CALL print
190 [34, 1, 1] POP __null
191 [14, 1, 27] RESPONSE __retval
192 [33, 1, 27] PUSH __retval
193 [15, 1, 39] JUMP __endif4
194 [-1, 38, 194] __else4:
195 [1, 1, 3, 0, 1] MALLOC __str 1
196 [0, 2, 1, 3, 0, 0, 0, '.'] ASSIGN __str[0] '.'
197 [33, 1, 3] PUSH __str
198 [34, 1, 26] POP __arg0
199 [33, 1, 26] PUSH __arg0
200 [12, 1, 2] CALL print
201 [34, 1, 1] POP __null
202 [14, 1, 27] RESPONSE __retval
203 [33, 1, 27] PUSH __retval
204 [-1, 39, 204] __endif4:
205 [15, 1, 36] JUMP __for3
206 [-1, 37, 206] __endfor3:
207 [33, 0, 7] PUSH 7
208 [34, 1, 18] POP __rhs
209 [0, 1, 28, 1, 18] ASSIGN x __rhs
210 [33, 1, 18] PUSH __rhs
211 [1, 1, 3, 0, 0] MALLOC __str 0
212 [33, 1, 3] PUSH __str
213 [34, 1, 26] POP __arg0
214 [33, 1, 26] PUSH __arg0
215 [12, 1, 8] CALL println
216 [34, 1, 1] POP __null
217 [14, 1, 27] RESPONSE __retval
218 [33, 1, 27] PUSH __retval
219 [15, 1, 32] JUMP __for2
220 [-1, 33, 220] __endfor2:
221 [33, 1, 19] PUSH i
222 [34, 1, 26] POP __arg0
223 [33, 1, 26] PUSH __arg0
224 [12, 1, 11] CALL printInt
225 [34, 1, 1] POP __null
226 [14, 1, 27] RESPONSE __retval
227 [33, 1, 27] PUSH __retval
228 [1, 1, 3, 0, 0] MALLOC __str 0
229 [33, 1, 3] PUSH __str
230 [34, 1, 26] POP __arg0
231 [33, 1, 26] PUSH __arg0
232 [12, 1, 8] CALL println
233 [34, 1, 1] POP __null
234 [14, 1, 27] RESPONSE __retval
235 [33, 1, 27] PUSH __retval
236 [33, 1, 28] PUSH x
237 [34, 1, 26] POP __arg0
238 [33, 1, 26] PUSH __arg0
239 [12, 1, 11] CALL printInt
240 [34, 1, 1] POP __null
241 [14, 1, 27] RESPONSE __retval
242 [33, 1, 27] PUSH __retval
243 [1, 1, 3, 0, 0] MALLOC __str 0
244 [33, 1, 3] PUSH __str
245 [34, 1, 26] POP __arg0
246 [33, 1, 26] PUSH __arg0
247 [12, 1, 8] CALL println
248 [34, 1, 1] POP __null
249 [14, 1, 27] RESPONSE __retval
250 [33, 1, 27] PUSH __retval
251 [33, 0, 10] PUSH 10
252 [34, 1, 18] POP __rhs
253 [0, 1, 40, 1, 18] ASSIGN w __rhs
254 [33, 1, 18] PUSH __rhs
255 [33, 0, 7] PUSH 7
256 [34, 1, 18] POP __rhs
257 [0, 1, 41, 1, 18] ASSIGN y __rhs
258 [33, 1, 18] PUSH __rhs
259 [-1, 42, 259] __while5:
260 [33, 1, 40] PUSH w
261 [33, 0, 0] PUSH 0
262 [34, 1, 18] POP __rhs
263 [34, 1, 23] POP __lhs
264 [26, 1, 22, 1, 23, 1, 18] GT __res __lhs __rhs
265 [33, 1, 22] PUSH __res
266 [34, 1, 24] POP __cond
267 [28, 1, 24, 0, 0] CMP __cond 0
268 [18, 1, 43] JEQ __endwhile5
269 [33, 1, 40] PUSH w
270 [33, 1, 41] PUSH y
271 [34, 1, 18] POP __rhs
272 [34, 1, 23] POP __lhs
273 [25, 1, 22, 1, 23, 1, 18] LE __res __lhs __rhs
274 [33, 1, 22] PUSH __res
275 [34, 1, 24] POP __cond
276 [28, 1, 24, 0, 0] CMP __cond 0
277 [18, 1, 44] JEQ __endif6
278 [15, 1, 43] JUMP __endwhile5
279 [15, 1, 44] JUMP __endif6
280 [-1, 44, 280] __endif6:
281 [33, 1, 40] PUSH w
282 [34, 1, 18] POP __rhs
283 [4, 1, 40, 1, 40, 0, 1] SUBTRACT w w 1
284 [0, 1, 22, 1, 40] ASSIGN __res w
285 [33, 1, 22] PUSH __res
286 [15, 1, 42] JUMP __while5
287 [-1, 43, 287] __endwhile5:
288 [33, 1, 40] PUSH w
289 [34, 1, 26] POP __arg0
290 [33, 1, 26] PUSH __arg0
291 [12, 1, 11] CALL printInt
292 [34, 1, 1] POP __null
293 [14, 1, 27] RESPONSE __retval
294 [33, 1, 27] PUSH __retval
295 [1, 1, 3, 0, 0] MALLOC __str 0
296 [33, 1, 3] PUSH __str
297 [34, 1, 26] POP __arg0
298 [33, 1, 26] PUSH __arg0
299 [12, 1, 8] CALL println
300 [34, 1, 1] POP __null
301 [14, 1, 27] RESPONSE __retval
302 [33, 1, 27] PUSH __retval
303 [33, 0, 0] PUSH 0
304 [34, 1, 18] POP __rhs
305 [0, 1, 19, 1, 18] ASSIGN i __rhs
306 [33, 1, 18] PUSH __rhs
307 [15, 1, 45] JUMP __forcond7
308 [-1, 46, 308] __for7:
309 [33, 1, 19] PUSH i
310 [33, 0, 1] PUSH 1
311 [34, 1, 18] POP __rhs
312 [34, 1, 23] POP __lhs
313 [3, 1, 22, 1, 23, 1, 18] ADD __res __lhs __rhs
314 [33, 1, 22] PUSH __res
315 [34, 1, 18] POP __rhs
316 [0, 1, 19, 1, 18] ASSIGN i __rhs
317 [33, 1, 18] PUSH __rhs
318 [-1, 45, 318] __forcond7:
319 [33, 1, 19] PUSH i
320 [33, 0, 10] PUSH 10
321 [34, 1, 18] POP __rhs
322 [34, 1, 23] POP __lhs
323 [24, 1, 22, 1, 23, 1, 18] LT __res __lhs __rhs
324 [33, 1, 22] PUSH __res
325 [34, 1, 24] POP __cond
326 [28, 1, 24, 0, 0] CMP __cond 0
327 [18, 1, 47] JEQ __forelse7
328 [33, 1, 19] PUSH i
329 [33, 0, 17] PUSH 17
330 [34, 1, 18] POP __rhs
331 [34, 1, 23] POP __lhs
332 [22, 1, 22, 1, 23, 1, 18] EQUAL __res __lhs __rhs
333 [33, 1, 22] PUSH __res
334 [34, 1, 24] POP __cond
335 [28, 1, 24, 0, 0] CMP __cond 0
336 [18, 1, 48] JEQ __endif8
337 [15, 1, 49] JUMP __endfor7
338 [15, 1, 48] JUMP __endif8
339 [-1, 48, 339] __endif8:
340 [15, 1, 46] JUMP __for7
341 [-1, 47, 341] __forelse7:
342 [1, 1, 3, 0, 39] MALLOC __str 39
343 [0, 2, 1, 3, 0, 0, 0, 'T'] ASSIGN __str[0] 'T'
344 [0, 2, 1, 3, 0, 1, 0, 'h'] ASSIGN __str[1] 'h'
345 [0, 2, 1, 3, 0, 2, 0, 'i'] ASSIGN __str[2] 'i'
346 [0, 2, 1, 3, 0, 3, 0, 's'] ASSIGN __str[3] 's'
347 [0, 2, 1, 3, 0, 4, 0, ' '] ASSIGN __str[4] ' '
348 [0, 2, 1, 3, 0, 5, 0, 'e'] ASSIGN __str[5] 'e'
349 [0, 2, 1, 3, 0, 6, 0, 'x'] ASSIGN __str[6] 'x'
350 [0, 2, 1, 3, 0, 7, 0, 'e'] ASSIGN __str[7] 'e'
351 [0, 2, 1, 3, 0, 8, 0, 'c'] ASSIGN __str[8] 'c'
352 [0, 2, 1, 3, 0, 9, 0, 'u'] ASSIGN __str[9] 'u'
353 [0, 2, 1, 3, 0, 10, 0, 't'] ASSIGN __str[10] 't'
354 [0, 2, 1, 3, 0, 11, 0, 'e'] ASSIGN __str[11] 'e'
355 [0, 2, 1, 3, 0, 12, 0, 's'] ASSIGN __str[12] 's'
356 [0, 2, 1, 3, 0, 13, 0, ' '] ASSIGN __str[13] ' '
357 [0, 2, 1, 3, 0, 14, 0, 'i'] ASSIGN __str[14] 'i'
358 [0, 2, 1, 3, 0, 15, 0, 'f'] ASSIGN __str[15] 'f'
359 [0, 2, 1, 3, 0, 16, 0, ' '] ASSIGN __str[16] ' '
360 [0, 2, 1, 3, 0, 17, 0, 'l'] ASSIGN __str[17] 'l'
361 [0, 2, 1, 3, 0, 18, 0, 'o'] ASSIGN __str[18] 'o'
362 [0, 2, 1, 3, 0, 19, 0, 'o'] ASSIGN __str[19] 'o'
363 [0, 2, 1, 3, 0, 20, 0, 'p'] ASSIGN __str[20] 'p'
364 [0, 2, 1, 3, 0, 21, 0, ' '] ASSIGN __str[21] ' '
365 [0, 2, 1, 3, 0, 22, 0, 'e'] ASSIGN __str[22] 'e'
366 [0, 2, 1, 3, 0, 23, 0, 'x'] ASSIGN __str[23] 'x'
367 [0, 2, 1, 3, 0, 24, 0, 'e'] ASSIGN __str[24] 'e'
368 [0, 2, 1, 3, 0, 25, 0, 'c'] ASSIGN __str[25] 'c'
369 [0, 2, 1, 3, 0, 26, 0, 'u'] ASSIGN __str[26] 'u'
370 [0, 2, 1, 3, 0, 27, 0, 't'] ASSIGN __str[27] 't'
371 [0, 2, 1, 3, 0, 28, 0, 'e'] ASSIGN __str[28] 'e'
372 [0, 2, 1, 3, 0, 29, 0, 's'] ASSIGN __str[29] 's'
373 [0, 2, 1, 3, 0, 30, 0, ' '] ASSIGN __str[30] ' '
374 [0, 2, 1, 3, 0, 31, 0, 'n'] ASSIGN __str[31] 'n'
375 [0, 2, 1, 3, 0, 32, 0, 'o'] ASSIGN __str[32] 'o'
376 [0, 2, 1, 3, 0, 33, 0, 'r'] ASSIGN __str[33] 'r'
377 [0, 2, 1, 3, 0, 34, 0, 'm'] ASSIGN __str[34] 'm'
378 [0, 2, 1, 3, 0, 35, 0, 'a'] ASSIGN __str[35] 'a'
379 [0, 2, 1, 3, 0, 36, 0, 'l'] ASSIGN __str[36] 'l'
380 [0, 2, 1, 3, 0, 37, 0, 'l'] ASSIGN __str[37] 'l'
381 [0, 2, 1, 3, 0, 38, 0, 'y'] ASSIGN __str[38] 'y'
382 [33, 1, 3] PUSH __str
383 [34, 1, 26] POP __arg0
384 [33, 1, 26] PUSH __arg0
385 [12, 1, 8] CALL println
386 [34, 1, 1] POP __null
387 [14, 1, 27] RESPONSE __retval
388 [33, 1, 27] PUSH __retval
389 [-1, 49, 389] __endfor7:
390 [1, 1, 3, 0, 14] MALLOC __str 14
391 [0, 2, 1, 3, 0, 0, 0, 'L'] ASSIGN __str[0] 'L'
392 [0, 2, 1, 3, 0, 1, 0, 'o'] ASSIGN __str[1] 'o'
393 [0, 2, 1, 3, 0, 2, 0, 'o'] ASSIGN __str[2] 'o'
394 [0, 2, 1, 3, 0, 3, 0, 'p'] ASSIGN __str[3] 'p'
395 [0, 2, 1, 3, 0, 4, 0, ' '] ASSIGN __str[4] ' '
396 [0, 2, 1, 3, 0, 5, 0, 'f'] ASSIGN __str[5] 'f'
397 [0, 2, 1, 3, 0, 6, 0, 'i'] ASSIGN __str[6] 'i'
398 [0, 2, 1, 3, 0, 7, 0, 'n'] ASSIGN __str[7] 'n'
399 [0, 2, 1, 3, 0, 8, 0, 'i'] ASSIGN __str[8] 'i'
400 [0, 2, 1, 3, 0, 9, 0, 's'] ASSIGN __str[9] 's'
401 [0, 2, 1, 3, 0, 10, 0, 'h'] ASSIGN __str[10] 'h'
402 [0, 2, 1, 3, 0, 11, 0, 'e'] ASSIGN __str[11] 'e'
403 [0, 2, 1, 3, 0, 12, 0, 'd'] ASSIGN __str[12] 'd'
404 [0, 2, 1, 3, 0, 13, 0, '!'] ASSIGN __str[13] '!'
405 [33, 1, 3] PUSH __str
406 [34, 1, 26] POP __arg0
407 [33, 1, 26] PUSH __arg0
408 [12, 1, 8] CALL println
409 [34, 1, 1] POP __null
410 [14, 1, 27] RESPONSE __retval
411 [33, 1, 27] PUSH __retval
