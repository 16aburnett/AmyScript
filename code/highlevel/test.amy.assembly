// AmyAssembly compiled from AmyScript
// Filename: test.amy
//========================================================================

//========================================================================
//### LIBRARY CODE #######################################################
//========================================================================

// AmyScript Built-in library
// Author: Amy Burnett
//========================================================================

jump __endOfLibrary

//========================================================================
// Global Variables

    assign __null 0

//========================================================================
// Prints a given string to the screen
// void print (char[] stringToPrint);
print:
    // grab string
    stackget __str 0
    sizeof __size __str
    // print each char
    // init
    assign __i 0
__print__loop:
    // cond
    cmp __i __size
    jge __print__endloop
    // Body
    print __str[__i]
    // update
    add __i __i 1
    // repeat
    jump __print__loop
__print__endloop:
    return 0

//========================================================================
// Prints a given string to the screen with a newline at the end
// void println (char[] stringToPrint);
println:
    // grab string
    stackget __str 0
    sizeof __size __str
    // print each char
    // init
    assign __i 0
__println__loop:
    // cond
    cmp __i __size
    jge __println__endloop
    // Body
    print __str[__i]
    // update
    add __i __i 1
    // repeat
    jump __println__loop
__println__endloop:
    println
    return 0

//========================================================================
// Prints an int to the screen
// void printInt (int intToPrint);
printInt:
    stackget __str 0
    print __str
    return 0

//========================================================================
// Prints a float to the screen
// void printFloat (float floatToPrint);
printFloat:
    stackget __str 0
    print __str
    return 0

//========================================================================
// Prints a char to the screen
// void printChar (char charToPrint);
printChar:
    // grab string
    stackget __char 0
    print __char
    return 0

//========================================================================
// grabs input from the console 
// char[] input ();
input:
    input __line
    return __line

//========================================================================
// converts an integer to a string
// char[] intToString (int val);
intToString:
    stackget __val 0

    return 0

//========================================================================

__endOfLibrary:
    //push prompt
    //call print

    //call input
    //response name

    //push name
    //call println

//========================================================================
//### COMPILED CODE ######################################################
//========================================================================

//========================================================================
// Class Declaration - Person
   //---------------------------------------------------------------------
   // Field - name
   ASSIGN __field__Person__name 0
   //---------------------------------------------------------------------
   //---------------------------------------------------------------------
   // Field - age
   ASSIGN __field__Person__age 1
   //---------------------------------------------------------------------
// skip over class methods
JUMP __endclass__Person
   //---------------------------------------------------------------------
   // Constructor Declaration - Person Person
   JUMP __endctor__Person
   Person:
      // Creating Class Instance
         MALLOC __this 2
      // Parameters
         // Param: name
         STACKGET name 0
         // Param: age
         STACKGET age 1
      // Body
         // Assignment
            // RHS
               // Identifier
                  PUSH name
            // LHS
               // Member Accessor Assignment
                  // LHS
                     // This keyword
                        PUSH __this
                  // RHS
                     PUSH __field__Person__name
                  POP __child
                  POP __parent
                  POP __rhs
                  ASSIGN __parent[__child] __rhs
            PUSH __rhs
         // Assignment
            // RHS
               // Identifier
                  PUSH age
            // LHS
               // Member Accessor Assignment
                  // LHS
                     // This keyword
                        PUSH __this
                  // RHS
                     PUSH __field__Person__age
                  POP __child
                  POP __parent
                  POP __rhs
                  ASSIGN __parent[__child] __rhs
            PUSH __rhs
      RETURN __this
   __endctor__Person:
   // End Constructor Declaration - Person
   //---------------------------------------------------------------------

   //---------------------------------------------------------------------
   // Method Declaration
   JUMP __endMethod__Person__getAge
   __method__Person__getAge:
      // Class Instance
         STACKGET __this 0
      // Parameters
      // Body
         // Return
            // Member Accessor
               // LHS
                  // This keyword
                     PUSH __this
               // RHS
                  PUSH __field__Person__age
               POP __child
               POP __parent
               PUSH __parent[__child]
            POP __rVal
            RETURN __rVal
      RETURN 0
   __endMethod__Person__getAge:
   // End Method Declaration - __method__Person__getAge
   //---------------------------------------------------------------------

__endclass__Person:
// End Class Declaration - Person
//========================================================================

// Assignment
   // RHS
      // Constructor Call
         // Arguments
            // Literal
               MALLOC __str 3
               ASSIGN __str[0] 'A'
               ASSIGN __str[1] 'm'
               ASSIGN __str[2] 'y'
               PUSH __str
            POP __arg0
            // Literal
               PUSH 22
            POP __arg1
         // Pushing args in reverse order
         PUSH __arg1
         PUSH __arg0
         CALL Person
         // Remove args
         POP __null
         POP __null
         RESPONSE __retval
         PUSH __retval
   POP __rhs
   ASSIGN person __rhs
   PUSH __rhs
// Function Call
   // Arguments
      // Method Call
         // LHS
            // Identifier
               PUSH person
         // RHS
         // Arguments
         POP __obj
         // Pushing args in reverse order
         PUSH __obj
         CALL __method__Person__getAge
         PUSH __null
         // Remove args
         RESPONSE __retval
         PUSH __retval
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   CALL printInt
   // Remove args
   POP __null
   RESPONSE __retval
   PUSH __retval
// Function Call
   // Arguments
      // Literal
         MALLOC __str 0
         PUSH __str
      POP __arg0
   // Pushing args in reverse order
   PUSH __arg0
   CALL println
   // Remove args
   POP __null
   RESPONSE __retval
   PUSH __retval
//========================================================================
//### END OF CODE ########################################################
//========================================================================

