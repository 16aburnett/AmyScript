000 [15, 1, 0] jump __endOfLibrary
001 [0, 1, 1, 0, 0] assign __null 0
002 [-1, 2, 2] print:
003 [35, 1, 3, 0, 0] stackget __str 0
004 [32, 1, 4, 1, 3] sizeof __size __str
005 [0, 1, 5, 0, 0] assign __i 0
006 [-1, 6, 6] __print__loop:
007 [28, 1, 5, 1, 4] cmp __i __size
008 [20, 1, 7] jge __print__endloop
009 [8, 2, 1, 3, 1, 5] print __str[__i]
010 [3, 1, 5, 1, 5, 0, 1] add __i __i 1
011 [15, 1, 6] jump __print__loop
012 [-1, 7, 12] __print__endloop:
013 [13, 0, 0] return 0
014 [-1, 8, 14] println:
015 [35, 1, 3, 0, 0] stackget __str 0
016 [32, 1, 4, 1, 3] sizeof __size __str
017 [0, 1, 5, 0, 0] assign __i 0
018 [-1, 9, 18] __println__loop:
019 [28, 1, 5, 1, 4] cmp __i __size
020 [20, 1, 10] jge __println__endloop
021 [8, 2, 1, 3, 1, 5] print __str[__i]
022 [3, 1, 5, 1, 5, 0, 1] add __i __i 1
023 [15, 1, 9] jump __println__loop
024 [-1, 10, 24] __println__endloop:
025 [9] println
026 [13, 0, 0] return 0
027 [-1, 11, 27] printInt:
028 [35, 1, 3, 0, 0] stackget __str 0
029 [8, 1, 3] print __str
030 [13, 0, 0] return 0
031 [-1, 12, 31] printFloat:
032 [35, 1, 3, 0, 0] stackget __str 0
033 [8, 1, 3] print __str
034 [13, 0, 0] return 0
035 [-1, 13, 35] printChar:
036 [35, 1, 14, 0, 0] stackget __char 0
037 [8, 1, 14] print __char
038 [13, 0, 0] return 0
039 [-1, 15, 39] input:
040 [10, 1, 16] input __line
041 [13, 1, 16] return __line
042 [-1, 17, 42] intToString:
043 [35, 1, 18, 0, 0] stackget __val 0
044 [13, 0, 0] return 0
045 [-1, 0, 45] __endOfLibrary:
046 [33, 0, 1] PUSH 1
047 [33, 0, 2] PUSH 2
048 [33, 0, 3] PUSH 3
049 [34, 1, 19] POP __elem2
050 [34, 1, 20] POP __elem1
051 [34, 1, 21] POP __elem0
052 [1, 1, 22, 0, 3] MALLOC __list 3
053 [0, 2, 1, 22, 0, 0, 1, 21] ASSIGN __list[0] __elem0
054 [0, 2, 1, 22, 0, 1, 1, 20] ASSIGN __list[1] __elem1
055 [0, 2, 1, 22, 0, 2, 1, 19] ASSIGN __list[2] __elem2
056 [33, 1, 22] PUSH __list
057 [33, 0, 4] PUSH 4
058 [33, 0, 5] PUSH 5
059 [33, 0, 6] PUSH 6
060 [34, 1, 19] POP __elem2
061 [34, 1, 20] POP __elem1
062 [34, 1, 21] POP __elem0
063 [1, 1, 22, 0, 3] MALLOC __list 3
064 [0, 2, 1, 22, 0, 0, 1, 21] ASSIGN __list[0] __elem0
065 [0, 2, 1, 22, 0, 1, 1, 20] ASSIGN __list[1] __elem1
066 [0, 2, 1, 22, 0, 2, 1, 19] ASSIGN __list[2] __elem2
067 [33, 1, 22] PUSH __list
068 [33, 0, 7] PUSH 7
069 [33, 0, 8] PUSH 8
070 [33, 0, 9] PUSH 9
071 [34, 1, 19] POP __elem2
072 [34, 1, 20] POP __elem1
073 [34, 1, 21] POP __elem0
074 [1, 1, 22, 0, 3] MALLOC __list 3
075 [0, 2, 1, 22, 0, 0, 1, 21] ASSIGN __list[0] __elem0
076 [0, 2, 1, 22, 0, 1, 1, 20] ASSIGN __list[1] __elem1
077 [0, 2, 1, 22, 0, 2, 1, 19] ASSIGN __list[2] __elem2
078 [33, 1, 22] PUSH __list
079 [34, 1, 19] POP __elem2
080 [34, 1, 20] POP __elem1
081 [34, 1, 21] POP __elem0
082 [1, 1, 22, 0, 3] MALLOC __list 3
083 [0, 2, 1, 22, 0, 0, 1, 21] ASSIGN __list[0] __elem0
084 [0, 2, 1, 22, 0, 1, 1, 20] ASSIGN __list[1] __elem1
085 [0, 2, 1, 22, 0, 2, 1, 19] ASSIGN __list[2] __elem2
086 [33, 1, 22] PUSH __list
087 [34, 1, 23] POP __rhs
088 [0, 1, 24, 1, 23] ASSIGN nums __rhs
089 [33, 1, 23] PUSH __rhs
090 [33, 0, 0] PUSH 0
091 [34, 1, 23] POP __rhs
092 [0, 1, 25, 1, 23] ASSIGN i __rhs
093 [33, 1, 23] PUSH __rhs
094 [15, 1, 26] JUMP __forcond0
095 [-1, 27, 95] __for0:
096 [33, 1, 25] PUSH i
097 [34, 1, 23] POP __rhs
098 [3, 1, 25, 1, 25, 0, 1] ADD i i 1
099 [0, 1, 28, 1, 25] ASSIGN __res i
100 [33, 1, 28] PUSH __res
101 [-1, 26, 101] __forcond0:
102 [33, 1, 25] PUSH i
103 [33, 0, 3] PUSH 3
104 [34, 1, 23] POP __rhs
105 [34, 1, 29] POP __lhs
106 [24, 1, 28, 1, 29, 1, 23] LT __res __lhs __rhs
107 [33, 1, 28] PUSH __res
108 [34, 1, 30] POP __cond
109 [28, 1, 30, 0, 0] CMP __cond 0
110 [18, 1, 31] JEQ __endfor0
111 [33, 0, 0] PUSH 0
112 [34, 1, 23] POP __rhs
113 [0, 1, 32, 1, 23] ASSIGN j __rhs
114 [33, 1, 23] PUSH __rhs
115 [15, 1, 33] JUMP __forcond1
116 [-1, 34, 116] __for1:
117 [33, 1, 32] PUSH j
118 [34, 1, 23] POP __rhs
119 [3, 1, 32, 1, 32, 0, 1] ADD j j 1
120 [0, 1, 28, 1, 32] ASSIGN __res j
121 [33, 1, 28] PUSH __res
122 [-1, 33, 122] __forcond1:
123 [33, 1, 32] PUSH j
124 [33, 0, 3] PUSH 3
125 [34, 1, 23] POP __rhs
126 [34, 1, 29] POP __lhs
127 [24, 1, 28, 1, 29, 1, 23] LT __res __lhs __rhs
128 [33, 1, 28] PUSH __res
129 [34, 1, 30] POP __cond
130 [28, 1, 30, 0, 0] CMP __cond 0
131 [18, 1, 35] JEQ __endfor1
132 [33, 1, 24] PUSH nums
133 [33, 1, 25] PUSH i
134 [34, 1, 36] POP __offset
135 [34, 1, 37] POP __pointer
136 [33, 2, 1, 37, 1, 36] PUSH __pointer[__offset]
137 [33, 1, 32] PUSH j
138 [34, 1, 36] POP __offset
139 [34, 1, 37] POP __pointer
140 [33, 2, 1, 37, 1, 36] PUSH __pointer[__offset]
141 [34, 1, 38] POP __arg0
142 [33, 1, 38] PUSH __arg0
143 [12, 1, 11] CALL printInt
144 [34, 1, 1] POP __null
145 [14, 1, 39] RESPONSE __retval
146 [33, 1, 39] PUSH __retval
147 [1, 1, 3, 0, 1] MALLOC __str 1
148 [0, 2, 1, 3, 0, 0, 0, ' '] ASSIGN __str[0] ' '
149 [33, 1, 3] PUSH __str
150 [34, 1, 38] POP __arg0
151 [33, 1, 38] PUSH __arg0
152 [12, 1, 2] CALL print
153 [34, 1, 1] POP __null
154 [14, 1, 39] RESPONSE __retval
155 [33, 1, 39] PUSH __retval
156 [15, 1, 34] JUMP __for1
157 [-1, 35, 157] __endfor1:
158 [1, 1, 3, 0, 0] MALLOC __str 0
159 [33, 1, 3] PUSH __str
160 [34, 1, 38] POP __arg0
161 [33, 1, 38] PUSH __arg0
162 [12, 1, 8] CALL println
163 [34, 1, 1] POP __null
164 [14, 1, 39] RESPONSE __retval
165 [33, 1, 39] PUSH __retval
166 [15, 1, 27] JUMP __for0
167 [-1, 31, 167] __endfor0:
168 [1, 1, 3, 0, 0] MALLOC __str 0
169 [33, 1, 3] PUSH __str
170 [34, 1, 38] POP __arg0
171 [33, 1, 38] PUSH __arg0
172 [12, 1, 8] CALL println
173 [34, 1, 1] POP __null
174 [14, 1, 39] RESPONSE __retval
175 [33, 1, 39] PUSH __retval
