000 [15, 1, 0] jump __endOfLibrary
001 [0, 1, 1, 0, 0] assign __null 0
002 [-1, 2, 2] print:
003 [35, 1, 3, 0, 0] stackget __str 0
004 [32, 1, 4, 1, 3] sizeof __size __str
005 [0, 1, 5, 0, 0] assign __i 0
006 [-1, 6, 6] __print__loop:
007 [28, 1, 5, 1, 4] cmp __i __size
008 [20, 1, 7] jge __print__endloop
009 [8, 2, 1, 3, 1, 5] print __str[__i]
010 [3, 1, 5, 1, 5, 0, 1] add __i __i 1
011 [15, 1, 6] jump __print__loop
012 [-1, 7, 12] __print__endloop:
013 [13, 0, 0] return 0
014 [-1, 8, 14] println:
015 [35, 1, 3, 0, 0] stackget __str 0
016 [32, 1, 4, 1, 3] sizeof __size __str
017 [0, 1, 5, 0, 0] assign __i 0
018 [-1, 9, 18] __println__loop:
019 [28, 1, 5, 1, 4] cmp __i __size
020 [20, 1, 10] jge __println__endloop
021 [8, 2, 1, 3, 1, 5] print __str[__i]
022 [3, 1, 5, 1, 5, 0, 1] add __i __i 1
023 [15, 1, 9] jump __println__loop
024 [-1, 10, 24] __println__endloop:
025 [9] println
026 [13, 0, 0] return 0
027 [-1, 11, 27] printInt:
028 [35, 1, 3, 0, 0] stackget __str 0
029 [8, 1, 3] print __str
030 [13, 0, 0] return 0
031 [-1, 12, 31] printFloat:
032 [35, 1, 3, 0, 0] stackget __str 0
033 [8, 1, 3] print __str
034 [13, 0, 0] return 0
035 [-1, 13, 35] printChar:
036 [35, 1, 14, 0, 0] stackget __char 0
037 [8, 1, 14] print __char
038 [13, 0, 0] return 0
039 [-1, 15, 39] input:
040 [10, 1, 16] input __line
041 [13, 1, 16] return __line
042 [-1, 17, 42] intToString:
043 [35, 1, 18, 0, 0] stackget __val 0
044 [13, 0, 0] return 0
045 [-1, 0, 45] __endOfLibrary:
046 [0, 1, 19, 0, 0] ASSIGN __field__Person__m_name 0
047 [0, 1, 20, 0, 1] ASSIGN __field__Person__m_age 1
048 [0, 1, 21, 0, 2] ASSIGN __field__Person__m_nums 2
049 [15, 1, 22] JUMP __endclass__Person
050 [15, 1, 23] JUMP __endctor__Person
051 [-1, 24, 51] Person:
052 [1, 1, 25, 0, 3] MALLOC __this 3
053 [35, 1, 26, 0, 0] STACKGET name 0
054 [35, 1, 27, 0, 1] STACKGET age 1
055 [33, 1, 26] PUSH name
056 [33, 1, 25] PUSH __this
057 [33, 1, 19] PUSH __field__Person__m_name
058 [34, 1, 28] POP __child
059 [34, 1, 29] POP __parent
060 [34, 1, 30] POP __rhs
061 [0, 2, 1, 29, 1, 28, 1, 30] ASSIGN __parent[__child] __rhs
062 [33, 1, 30] PUSH __rhs
063 [33, 1, 27] PUSH age
064 [33, 1, 25] PUSH __this
065 [33, 1, 20] PUSH __field__Person__m_age
066 [34, 1, 28] POP __child
067 [34, 1, 29] POP __parent
068 [34, 1, 30] POP __rhs
069 [0, 2, 1, 29, 1, 28, 1, 30] ASSIGN __parent[__child] __rhs
070 [33, 1, 30] PUSH __rhs
071 [33, 0, 5] PUSH 5
072 [34, 1, 4] POP __size
073 [1, 1, 31, 1, 4] MALLOC __ptr __size
074 [33, 1, 31] PUSH __ptr
075 [33, 1, 25] PUSH __this
076 [33, 1, 21] PUSH __field__Person__m_nums
077 [34, 1, 28] POP __child
078 [34, 1, 29] POP __parent
079 [34, 1, 30] POP __rhs
080 [0, 2, 1, 29, 1, 28, 1, 30] ASSIGN __parent[__child] __rhs
081 [33, 1, 30] PUSH __rhs
082 [13, 1, 25] RETURN __this
083 [-1, 23, 83] __endctor__Person:
084 [15, 1, 32] JUMP __endMethod__Person__getAge
085 [-1, 33, 85] __method__Person__getAge:
086 [35, 1, 25, 0, 0] STACKGET __this 0
087 [33, 1, 25] PUSH __this
088 [33, 1, 20] PUSH __field__Person__m_age
089 [34, 1, 28] POP __child
090 [34, 1, 29] POP __parent
091 [33, 2, 1, 29, 1, 28] PUSH __parent[__child]
092 [34, 1, 34] POP __rVal
093 [13, 1, 34] RETURN __rVal
094 [13, 0, 0] RETURN 0
095 [-1, 32, 95] __endMethod__Person__getAge:
096 [-1, 22, 96] __endclass__Person:
097 [15, 1, 35] JUMP __end__max
098 [-1, 36, 98] max:
099 [35, 1, 37, 0, 0] STACKGET a 0
100 [35, 1, 38, 0, 1] STACKGET b 1
101 [33, 1, 37] PUSH a
102 [33, 1, 38] PUSH b
103 [34, 1, 30] POP __rhs
104 [34, 1, 39] POP __lhs
105 [27, 1, 40, 1, 39, 1, 30] GE __res __lhs __rhs
106 [33, 1, 40] PUSH __res
107 [34, 1, 41] POP __cond
108 [28, 1, 41, 0, 0] CMP __cond 0
109 [18, 1, 42] JEQ __endif0
110 [33, 1, 37] PUSH a
111 [34, 1, 34] POP __rVal
112 [13, 1, 34] RETURN __rVal
113 [15, 1, 42] JUMP __endif0
114 [-1, 42, 114] __endif0:
115 [33, 1, 38] PUSH b
116 [34, 1, 34] POP __rVal
117 [13, 1, 34] RETURN __rVal
118 [13, 0, 0] RETURN 0
119 [-1, 35, 119] __end__max:
120 [33, 0, 2] PUSH 2
121 [34, 1, 4] POP __size
122 [1, 1, 31, 1, 4] MALLOC __ptr __size
123 [33, 1, 31] PUSH __ptr
124 [34, 1, 30] POP __rhs
125 [0, 1, 43, 1, 30] ASSIGN people __rhs
126 [33, 1, 30] PUSH __rhs
127 [33, 0, 0] PUSH 0
128 [34, 1, 30] POP __rhs
129 [0, 1, 44, 1, 30] ASSIGN amyIndex __rhs
130 [33, 1, 30] PUSH __rhs
131 [33, 0, 1] PUSH 1
132 [34, 1, 30] POP __rhs
133 [34, 1, 39] POP __lhs
134 [3, 1, 40, 1, 39, 1, 30] ADD __res __lhs __rhs
135 [33, 1, 40] PUSH __res
136 [34, 1, 30] POP __rhs
137 [0, 1, 45, 1, 30] ASSIGN camIndex __rhs
138 [33, 1, 30] PUSH __rhs
139 [1, 1, 3, 0, 0] MALLOC __str 0
140 [33, 1, 3] PUSH __str
141 [33, 0, 0] PUSH 0
142 [34, 1, 46] POP __arg1
143 [34, 1, 47] POP __arg0
144 [33, 1, 46] PUSH __arg1
145 [33, 1, 47] PUSH __arg0
146 [12, 1, 24] CALL Person
147 [34, 1, 1] POP __null
148 [34, 1, 1] POP __null
149 [14, 1, 48] RESPONSE __retval
150 [33, 1, 48] PUSH __retval
151 [33, 1, 43] PUSH people
152 [33, 1, 44] PUSH amyIndex
153 [34, 1, 49] POP __offset
154 [34, 1, 50] POP __pointer
155 [34, 1, 30] POP __rhs
156 [0, 2, 1, 50, 1, 49, 1, 30] ASSIGN __pointer[__offset] __rhs
157 [33, 1, 30] PUSH __rhs
158 [1, 1, 3, 0, 7] MALLOC __str 7
159 [0, 2, 1, 3, 0, 0, 0, 'C'] ASSIGN __str[0] 'C'
160 [0, 2, 1, 3, 0, 1, 0, 'a'] ASSIGN __str[1] 'a'
161 [0, 2, 1, 3, 0, 2, 0, 'm'] ASSIGN __str[2] 'm'
162 [0, 2, 1, 3, 0, 3, 0, 'e'] ASSIGN __str[3] 'e'
163 [0, 2, 1, 3, 0, 4, 0, 'r'] ASSIGN __str[4] 'r'
164 [0, 2, 1, 3, 0, 5, 0, 'o'] ASSIGN __str[5] 'o'
165 [0, 2, 1, 3, 0, 6, 0, 'n'] ASSIGN __str[6] 'n'
166 [33, 1, 3] PUSH __str
167 [33, 0, 21] PUSH 21
168 [34, 1, 46] POP __arg1
169 [34, 1, 47] POP __arg0
170 [33, 1, 46] PUSH __arg1
171 [33, 1, 47] PUSH __arg0
172 [12, 1, 24] CALL Person
173 [34, 1, 1] POP __null
174 [34, 1, 1] POP __null
175 [14, 1, 48] RESPONSE __retval
176 [33, 1, 48] PUSH __retval
177 [33, 1, 43] PUSH people
178 [33, 1, 45] PUSH camIndex
179 [34, 1, 49] POP __offset
180 [34, 1, 50] POP __pointer
181 [34, 1, 30] POP __rhs
182 [0, 2, 1, 50, 1, 49, 1, 30] ASSIGN __pointer[__offset] __rhs
183 [33, 1, 30] PUSH __rhs
184 [1, 1, 3, 0, 3] MALLOC __str 3
185 [0, 2, 1, 3, 0, 0, 0, 'A'] ASSIGN __str[0] 'A'
186 [0, 2, 1, 3, 0, 1, 0, 'm'] ASSIGN __str[1] 'm'
187 [0, 2, 1, 3, 0, 2, 0, 'y'] ASSIGN __str[2] 'y'
188 [33, 1, 3] PUSH __str
189 [33, 1, 43] PUSH people
190 [33, 1, 44] PUSH amyIndex
191 [34, 1, 49] POP __offset
192 [34, 1, 50] POP __pointer
193 [33, 2, 1, 50, 1, 49] PUSH __pointer[__offset]
194 [33, 1, 19] PUSH __field__Person__m_name
195 [34, 1, 28] POP __child
196 [34, 1, 29] POP __parent
197 [34, 1, 30] POP __rhs
198 [0, 2, 1, 29, 1, 28, 1, 30] ASSIGN __parent[__child] __rhs
199 [33, 1, 30] PUSH __rhs
200 [33, 1, 43] PUSH people
201 [33, 1, 45] PUSH camIndex
202 [34, 1, 49] POP __offset
203 [34, 1, 50] POP __pointer
204 [33, 2, 1, 50, 1, 49] PUSH __pointer[__offset]
205 [34, 1, 51] POP __obj
206 [33, 1, 51] PUSH __obj
207 [12, 1, 33] CALL __method__Person__getAge
208 [33, 1, 1] PUSH __null
209 [14, 1, 48] RESPONSE __retval
210 [33, 1, 48] PUSH __retval
211 [33, 1, 43] PUSH people
212 [33, 1, 44] PUSH amyIndex
213 [34, 1, 49] POP __offset
214 [34, 1, 50] POP __pointer
215 [33, 2, 1, 50, 1, 49] PUSH __pointer[__offset]
216 [33, 1, 20] PUSH __field__Person__m_age
217 [34, 1, 28] POP __child
218 [34, 1, 29] POP __parent
219 [34, 1, 30] POP __rhs
220 [0, 2, 1, 29, 1, 28, 1, 30] ASSIGN __parent[__child] __rhs
221 [33, 1, 30] PUSH __rhs
222 [33, 0, 3.14] PUSH 3.14
223 [33, 1, 43] PUSH people
224 [33, 1, 44] PUSH amyIndex
225 [34, 1, 49] POP __offset
226 [34, 1, 50] POP __pointer
227 [33, 2, 1, 50, 1, 49] PUSH __pointer[__offset]
228 [33, 1, 21] PUSH __field__Person__m_nums
229 [34, 1, 28] POP __child
230 [34, 1, 29] POP __parent
231 [33, 2, 1, 29, 1, 28] PUSH __parent[__child]
232 [33, 0, 0] PUSH 0
233 [34, 1, 49] POP __offset
234 [34, 1, 50] POP __pointer
235 [34, 1, 30] POP __rhs
236 [0, 2, 1, 50, 1, 49, 1, 30] ASSIGN __pointer[__offset] __rhs
237 [33, 1, 30] PUSH __rhs
238 [33, 0, 6.28] PUSH 6.28
239 [33, 1, 43] PUSH people
240 [33, 1, 44] PUSH amyIndex
241 [34, 1, 49] POP __offset
242 [34, 1, 50] POP __pointer
243 [33, 2, 1, 50, 1, 49] PUSH __pointer[__offset]
244 [33, 1, 21] PUSH __field__Person__m_nums
245 [34, 1, 28] POP __child
246 [34, 1, 29] POP __parent
247 [33, 2, 1, 29, 1, 28] PUSH __parent[__child]
248 [33, 0, 1] PUSH 1
249 [34, 1, 49] POP __offset
250 [34, 1, 50] POP __pointer
251 [34, 1, 30] POP __rhs
252 [0, 2, 1, 50, 1, 49, 1, 30] ASSIGN __pointer[__offset] __rhs
253 [33, 1, 30] PUSH __rhs
254 [33, 1, 43] PUSH people
255 [33, 0, 0] PUSH 0
256 [34, 1, 49] POP __offset
257 [34, 1, 50] POP __pointer
258 [33, 2, 1, 50, 1, 49] PUSH __pointer[__offset]
259 [33, 1, 19] PUSH __field__Person__m_name
260 [34, 1, 28] POP __child
261 [34, 1, 29] POP __parent
262 [33, 2, 1, 29, 1, 28] PUSH __parent[__child]
263 [34, 1, 47] POP __arg0
264 [33, 1, 47] PUSH __arg0
265 [12, 1, 8] CALL println
266 [34, 1, 1] POP __null
267 [14, 1, 48] RESPONSE __retval
268 [33, 1, 48] PUSH __retval
269 [33, 0, 5] PUSH 5
270 [34, 1, 4] POP __size
271 [1, 1, 31, 1, 4] MALLOC __ptr __size
272 [33, 1, 31] PUSH __ptr
273 [34, 1, 30] POP __rhs
274 [0, 1, 52, 1, 30] ASSIGN nums __rhs
275 [33, 1, 30] PUSH __rhs
276 [33, 0, 0] PUSH 0
277 [34, 1, 30] POP __rhs
278 [0, 1, 53, 1, 30] ASSIGN i __rhs
279 [33, 1, 30] PUSH __rhs
280 [15, 1, 54] JUMP __forcond1
281 [-1, 55, 281] __for1:
282 [33, 1, 53] PUSH i
283 [34, 1, 30] POP __rhs
284 [3, 1, 53, 1, 53, 0, 1] ADD i i 1
285 [0, 1, 40, 1, 53] ASSIGN __res i
286 [33, 1, 40] PUSH __res
287 [-1, 54, 287] __forcond1:
288 [33, 1, 53] PUSH i
289 [33, 0, 5] PUSH 5
290 [34, 1, 30] POP __rhs
291 [34, 1, 39] POP __lhs
292 [24, 1, 40, 1, 39, 1, 30] LT __res __lhs __rhs
293 [33, 1, 40] PUSH __res
294 [34, 1, 41] POP __cond
295 [28, 1, 41, 0, 0] CMP __cond 0
296 [18, 1, 56] JEQ __endfor1
297 [33, 1, 52] PUSH nums
298 [33, 1, 53] PUSH i
299 [34, 1, 49] POP __offset
300 [34, 1, 50] POP __pointer
301 [33, 2, 1, 50, 1, 49] PUSH __pointer[__offset]
302 [34, 1, 47] POP __arg0
303 [33, 1, 47] PUSH __arg0
304 [12, 1, 11] CALL printInt
305 [34, 1, 1] POP __null
306 [14, 1, 48] RESPONSE __retval
307 [33, 1, 48] PUSH __retval
308 [15, 1, 55] JUMP __for1
309 [-1, 56, 309] __endfor1:
310 [1, 1, 3, 0, 0] MALLOC __str 0
311 [33, 1, 3] PUSH __str
312 [34, 1, 47] POP __arg0
313 [33, 1, 47] PUSH __arg0
314 [12, 1, 8] CALL println
315 [34, 1, 1] POP __null
316 [14, 1, 48] RESPONSE __retval
317 [33, 1, 48] PUSH __retval
318 [33, 0, 0] PUSH 0
319 [34, 1, 30] POP __rhs
320 [0, 1, 57, 1, 30] ASSIGN mybool __rhs
321 [33, 1, 30] PUSH __rhs
322 [33, 0, 5] PUSH 5
323 [33, 0, 0] PUSH 0
324 [34, 1, 30] POP __rhs
325 [34, 1, 39] POP __lhs
326 [26, 1, 40, 1, 39, 1, 30] GT __res __lhs __rhs
327 [33, 1, 40] PUSH __res
328 [34, 1, 41] POP __cond
329 [28, 1, 41, 0, 0] CMP __cond 0
330 [18, 1, 58] JEQ __elif2x0
331 [15, 1, 59] JUMP __endif2
332 [-1, 58, 332] __elif2x0:
333 [33, 1, 57] PUSH mybool
334 [34, 1, 41] POP __cond
335 [28, 1, 41, 0, 0] CMP __cond 0
336 [18, 1, 60] JEQ __else2
337 [33, 1, 57] PUSH mybool
338 [34, 1, 47] POP __arg0
339 [33, 1, 47] PUSH __arg0
340 [12, 1, 11] CALL printInt
341 [34, 1, 1] POP __null
342 [14, 1, 48] RESPONSE __retval
343 [33, 1, 48] PUSH __retval
344 [15, 1, 59] JUMP __endif2
345 [-1, 60, 345] __else2:
346 [1, 1, 3, 0, 3] MALLOC __str 3
347 [0, 2, 1, 3, 0, 0, 0, 'Y'] ASSIGN __str[0] 'Y'
348 [0, 2, 1, 3, 0, 1, 0, 'e'] ASSIGN __str[1] 'e'
349 [0, 2, 1, 3, 0, 2, 0, 's'] ASSIGN __str[2] 's'
350 [33, 1, 3] PUSH __str
351 [34, 1, 47] POP __arg0
352 [33, 1, 47] PUSH __arg0
353 [12, 1, 8] CALL println
354 [34, 1, 1] POP __null
355 [14, 1, 48] RESPONSE __retval
356 [33, 1, 48] PUSH __retval
357 [-1, 59, 357] __endif2:
358 [33, 0, 10] PUSH 10
359 [34, 1, 30] POP __rhs
360 [0, 1, 61, 1, 30] ASSIGN y __rhs
361 [33, 1, 30] PUSH __rhs
362 [34, 1, 30] POP __rhs
363 [0, 1, 62, 1, 30] ASSIGN x __rhs
364 [33, 1, 30] PUSH __rhs
365 [34, 1, 47] POP __arg0
366 [33, 1, 47] PUSH __arg0
367 [12, 1, 11] CALL printInt
368 [34, 1, 1] POP __null
369 [14, 1, 48] RESPONSE __retval
370 [33, 1, 48] PUSH __retval
371 [33, 0, 0] PUSH 0
372 [34, 1, 30] POP __rhs
373 [0, 1, 62, 1, 30] ASSIGN x __rhs
374 [33, 1, 30] PUSH __rhs
375 [-1, 63, 375] __while3:
376 [33, 0, 1] PUSH 1
377 [34, 1, 41] POP __cond
378 [28, 1, 41, 0, 0] CMP __cond 0
379 [18, 1, 64] JEQ __endwhile3
380 [0, 1, 40, 1, 62] ASSIGN __res x
381 [3, 1, 62, 1, 62, 0, 1] ADD x x 1
382 [33, 1, 40] PUSH __res
383 [33, 0, 3] PUSH 3
384 [34, 1, 30] POP __rhs
385 [34, 1, 39] POP __lhs
386 [26, 1, 40, 1, 39, 1, 30] GT __res __lhs __rhs
387 [33, 1, 40] PUSH __res
388 [34, 1, 41] POP __cond
389 [28, 1, 41, 0, 0] CMP __cond 0
390 [18, 1, 65] JEQ __endif4
391 [15, 1, 64] JUMP __endwhile3
392 [15, 1, 65] JUMP __endif4
393 [-1, 65, 393] __endif4:
394 [15, 1, 63] JUMP __while3
395 [-1, 64, 395] __endwhile3:
396 [33, 0, 21] PUSH 21
397 [33, 0, 12] PUSH 12
398 [34, 1, 30] POP __rhs
399 [34, 1, 39] POP __lhs
400 [3, 1, 40, 1, 39, 1, 30] ADD __res __lhs __rhs
401 [33, 1, 40] PUSH __res
402 [33, 1, 52] PUSH nums
403 [33, 1, 62] PUSH x
404 [34, 1, 30] POP __rhs
405 [4, 1, 62, 1, 62, 0, 1] SUBTRACT x x 1
406 [0, 1, 40, 1, 62] ASSIGN __res x
407 [33, 1, 40] PUSH __res
408 [34, 1, 49] POP __offset
409 [34, 1, 50] POP __pointer
410 [34, 1, 30] POP __rhs
411 [0, 2, 1, 50, 1, 49, 1, 30] ASSIGN __pointer[__offset] __rhs
412 [33, 1, 30] PUSH __rhs
413 [34, 1, 30] POP __rhs
414 [0, 1, 66, 1, 30] ASSIGN w __rhs
415 [33, 1, 30] PUSH __rhs
