000 [15, 1, 0] jump __endOfLibrary
001 [0, 1, 1, 0, 0] assign __null 0
002 [-1, 2, 2] print:
003 [35, 1, 3, 0, 0] stackget __str 0
004 [32, 1, 4, 1, 3] sizeof __size __str
005 [0, 1, 5, 0, 0] assign __i 0
006 [-1, 6, 6] __print__loop:
007 [28, 1, 5, 1, 4] cmp __i __size
008 [20, 1, 7] jge __print__endloop
009 [8, 2, 1, 3, 1, 5] print __str[__i]
010 [3, 1, 5, 1, 5, 0, 1] add __i __i 1
011 [15, 1, 6] jump __print__loop
012 [-1, 7, 12] __print__endloop:
013 [13, 0, 0] return 0
014 [-1, 8, 14] println:
015 [35, 1, 3, 0, 0] stackget __str 0
016 [32, 1, 4, 1, 3] sizeof __size __str
017 [0, 1, 5, 0, 0] assign __i 0
018 [-1, 9, 18] __println__loop:
019 [28, 1, 5, 1, 4] cmp __i __size
020 [20, 1, 10] jge __println__endloop
021 [8, 2, 1, 3, 1, 5] print __str[__i]
022 [3, 1, 5, 1, 5, 0, 1] add __i __i 1
023 [15, 1, 9] jump __println__loop
024 [-1, 10, 24] __println__endloop:
025 [9] println
026 [13, 0, 0] return 0
027 [-1, 11, 27] printInt:
028 [35, 1, 3, 0, 0] stackget __str 0
029 [8, 1, 3] print __str
030 [13, 0, 0] return 0
031 [-1, 12, 31] printChar:
032 [35, 1, 13, 0, 0] stackget __char 0
033 [8, 1, 13] print __char
034 [13, 0, 0] return 0
035 [-1, 14, 35] input:
036 [10, 1, 15] input __line
037 [13, 1, 15] return __line
038 [-1, 16, 38] intToString:
039 [35, 1, 17, 0, 0] stackget __val 0
040 [13, 0, 0] return 0
041 [-1, 0, 41] __endOfLibrary:
042 [0, 1, 18, 0, 0] ASSIGN __field__Person__m_name 0
043 [0, 1, 19, 0, 1] ASSIGN __field__Person__m_age 1
044 [0, 1, 20, 0, 2] ASSIGN __field__Person__m_nums 2
045 [15, 1, 21] JUMP __endclass__Person
046 [15, 1, 22] JUMP __endctor__Person
047 [-1, 23, 47] Person:
048 [1, 1, 24, 0, 3] MALLOC __this 3
049 [35, 1, 25, 0, 0] STACKGET name 0
050 [35, 1, 26, 0, 1] STACKGET age 1
051 [33, 1, 25] PUSH name
052 [33, 1, 24] PUSH __this
053 [33, 1, 18] PUSH __field__Person__m_name
054 [34, 1, 27] POP __child
055 [34, 1, 28] POP __parent
056 [34, 1, 29] POP __rhs
057 [0, 2, 1, 28, 1, 27, 1, 29] ASSIGN __parent[__child] __rhs
058 [33, 1, 29] PUSH __rhs
059 [33, 1, 26] PUSH age
060 [33, 1, 24] PUSH __this
061 [33, 1, 19] PUSH __field__Person__m_age
062 [34, 1, 27] POP __child
063 [34, 1, 28] POP __parent
064 [34, 1, 29] POP __rhs
065 [0, 2, 1, 28, 1, 27, 1, 29] ASSIGN __parent[__child] __rhs
066 [33, 1, 29] PUSH __rhs
067 [33, 0, 5] PUSH 5
068 [34, 1, 4] POP __size
069 [1, 1, 30, 1, 4] MALLOC __ptr __size
070 [33, 1, 30] PUSH __ptr
071 [33, 1, 24] PUSH __this
072 [33, 1, 20] PUSH __field__Person__m_nums
073 [34, 1, 27] POP __child
074 [34, 1, 28] POP __parent
075 [34, 1, 29] POP __rhs
076 [0, 2, 1, 28, 1, 27, 1, 29] ASSIGN __parent[__child] __rhs
077 [33, 1, 29] PUSH __rhs
078 [13, 1, 24] RETURN __this
079 [-1, 22, 79] __endctor__Person:
080 [15, 1, 31] JUMP __endMethod__Person__getAge
081 [-1, 32, 81] __method__Person__getAge:
082 [35, 1, 24, 0, 0] STACKGET __this 0
083 [33, 1, 24] PUSH __this
084 [33, 1, 19] PUSH __field__Person__m_age
085 [34, 1, 27] POP __child
086 [34, 1, 28] POP __parent
087 [33, 2, 1, 28, 1, 27] PUSH __parent[__child]
088 [34, 1, 33] POP __rVal
089 [13, 1, 33] RETURN __rVal
090 [13, 0, 0] RETURN 0
091 [-1, 31, 91] __endMethod__Person__getAge:
092 [-1, 21, 92] __endclass__Person:
093 [15, 1, 34] JUMP __end__max
094 [-1, 35, 94] max:
095 [35, 1, 36, 0, 0] STACKGET a 0
096 [35, 1, 37, 0, 1] STACKGET b 1
097 [33, 1, 36] PUSH a
098 [33, 1, 37] PUSH b
099 [34, 1, 29] POP __rhs
100 [34, 1, 38] POP __lhs
101 [27, 1, 39, 1, 38, 1, 29] GE __res __lhs __rhs
102 [33, 1, 39] PUSH __res
103 [34, 1, 40] POP __cond
104 [28, 1, 40, 0, 0] CMP __cond 0
105 [18, 1, 41] JEQ __endif0
106 [33, 1, 36] PUSH a
107 [34, 1, 33] POP __rVal
108 [13, 1, 33] RETURN __rVal
109 [15, 1, 41] JUMP __endif0
110 [-1, 41, 110] __endif0:
111 [33, 1, 37] PUSH b
112 [34, 1, 33] POP __rVal
113 [13, 1, 33] RETURN __rVal
114 [13, 0, 0] RETURN 0
115 [-1, 34, 115] __end__max:
116 [33, 0, 2] PUSH 2
117 [34, 1, 4] POP __size
118 [1, 1, 30, 1, 4] MALLOC __ptr __size
119 [33, 1, 30] PUSH __ptr
120 [34, 1, 29] POP __rhs
121 [0, 1, 42, 1, 29] ASSIGN people __rhs
122 [33, 1, 29] PUSH __rhs
123 [33, 0, 0] PUSH 0
124 [34, 1, 29] POP __rhs
125 [0, 1, 43, 1, 29] ASSIGN amyIndex __rhs
126 [33, 1, 29] PUSH __rhs
127 [33, 0, 1] PUSH 1
128 [34, 1, 29] POP __rhs
129 [34, 1, 38] POP __lhs
130 [3, 1, 39, 1, 38, 1, 29] ADD __res __lhs __rhs
131 [33, 1, 39] PUSH __res
132 [34, 1, 29] POP __rhs
133 [0, 1, 44, 1, 29] ASSIGN camIndex __rhs
134 [33, 1, 29] PUSH __rhs
135 [12, 1, 23] CALL Person
136 [14, 1, 45] RESPONSE __retval
137 [33, 1, 45] PUSH __retval
138 [33, 1, 42] PUSH people
139 [33, 1, 43] PUSH amyIndex
140 [34, 1, 46] POP __offset
141 [34, 1, 47] POP __pointer
142 [34, 1, 29] POP __rhs
143 [0, 2, 1, 47, 1, 46, 1, 29] ASSIGN __pointer[__offset] __rhs
144 [33, 1, 29] PUSH __rhs
145 [1, 1, 3, 0, 7] MALLOC __str 7
146 [0, 2, 1, 3, 0, 0, 0, 'C'] ASSIGN __str[0] 'C'
147 [0, 2, 1, 3, 0, 1, 0, 'a'] ASSIGN __str[1] 'a'
148 [0, 2, 1, 3, 0, 2, 0, 'm'] ASSIGN __str[2] 'm'
149 [0, 2, 1, 3, 0, 3, 0, 'e'] ASSIGN __str[3] 'e'
150 [0, 2, 1, 3, 0, 4, 0, 'r'] ASSIGN __str[4] 'r'
151 [0, 2, 1, 3, 0, 5, 0, 'o'] ASSIGN __str[5] 'o'
152 [0, 2, 1, 3, 0, 6, 0, 'n'] ASSIGN __str[6] 'n'
153 [33, 1, 3] PUSH __str
154 [34, 1, 48] POP __arg0
155 [33, 0, 21] PUSH 21
156 [34, 1, 49] POP __arg1
157 [33, 1, 49] PUSH __arg1
158 [33, 1, 48] PUSH __arg0
159 [12, 1, 23] CALL Person
160 [34, 1, 1] POP __null
161 [34, 1, 1] POP __null
162 [14, 1, 45] RESPONSE __retval
163 [33, 1, 45] PUSH __retval
164 [33, 1, 42] PUSH people
165 [33, 1, 44] PUSH camIndex
166 [34, 1, 46] POP __offset
167 [34, 1, 47] POP __pointer
168 [34, 1, 29] POP __rhs
169 [0, 2, 1, 47, 1, 46, 1, 29] ASSIGN __pointer[__offset] __rhs
170 [33, 1, 29] PUSH __rhs
171 [1, 1, 3, 0, 3] MALLOC __str 3
172 [0, 2, 1, 3, 0, 0, 0, 'A'] ASSIGN __str[0] 'A'
173 [0, 2, 1, 3, 0, 1, 0, 'm'] ASSIGN __str[1] 'm'
174 [0, 2, 1, 3, 0, 2, 0, 'y'] ASSIGN __str[2] 'y'
175 [33, 1, 3] PUSH __str
176 [33, 1, 42] PUSH people
177 [33, 1, 43] PUSH amyIndex
178 [34, 1, 46] POP __offset
179 [34, 1, 47] POP __pointer
180 [33, 2, 1, 47, 1, 46] PUSH __pointer[__offset]
181 [33, 1, 18] PUSH __field__Person__m_name
182 [34, 1, 27] POP __child
183 [34, 1, 28] POP __parent
184 [34, 1, 29] POP __rhs
185 [0, 2, 1, 28, 1, 27, 1, 29] ASSIGN __parent[__child] __rhs
186 [33, 1, 29] PUSH __rhs
187 [33, 1, 42] PUSH people
188 [33, 1, 44] PUSH camIndex
189 [34, 1, 46] POP __offset
190 [34, 1, 47] POP __pointer
191 [33, 2, 1, 47, 1, 46] PUSH __pointer[__offset]
192 [34, 1, 50] POP __obj
193 [33, 1, 50] PUSH __obj
194 [12, 1, 32] CALL __method__Person__getAge
195 [33, 1, 1] PUSH __null
196 [14, 1, 45] RESPONSE __retval
197 [33, 1, 45] PUSH __retval
198 [33, 1, 42] PUSH people
199 [33, 1, 43] PUSH amyIndex
200 [34, 1, 46] POP __offset
201 [34, 1, 47] POP __pointer
202 [33, 2, 1, 47, 1, 46] PUSH __pointer[__offset]
203 [33, 1, 19] PUSH __field__Person__m_age
204 [34, 1, 27] POP __child
205 [34, 1, 28] POP __parent
206 [34, 1, 29] POP __rhs
207 [0, 2, 1, 28, 1, 27, 1, 29] ASSIGN __parent[__child] __rhs
208 [33, 1, 29] PUSH __rhs
209 [33, 0, 3.14] PUSH 3.14
210 [33, 1, 42] PUSH people
211 [33, 1, 43] PUSH amyIndex
212 [34, 1, 46] POP __offset
213 [34, 1, 47] POP __pointer
214 [33, 2, 1, 47, 1, 46] PUSH __pointer[__offset]
215 [33, 1, 20] PUSH __field__Person__m_nums
216 [34, 1, 27] POP __child
217 [34, 1, 28] POP __parent
218 [33, 2, 1, 28, 1, 27] PUSH __parent[__child]
219 [33, 0, 0] PUSH 0
220 [34, 1, 46] POP __offset
221 [34, 1, 47] POP __pointer
222 [34, 1, 29] POP __rhs
223 [0, 2, 1, 47, 1, 46, 1, 29] ASSIGN __pointer[__offset] __rhs
224 [33, 1, 29] PUSH __rhs
225 [33, 0, 6.28] PUSH 6.28
226 [33, 1, 42] PUSH people
227 [33, 1, 43] PUSH amyIndex
228 [34, 1, 46] POP __offset
229 [34, 1, 47] POP __pointer
230 [33, 2, 1, 47, 1, 46] PUSH __pointer[__offset]
231 [33, 1, 20] PUSH __field__Person__m_nums
232 [34, 1, 27] POP __child
233 [34, 1, 28] POP __parent
234 [33, 2, 1, 28, 1, 27] PUSH __parent[__child]
235 [33, 0, 1] PUSH 1
236 [34, 1, 46] POP __offset
237 [34, 1, 47] POP __pointer
238 [34, 1, 29] POP __rhs
239 [0, 2, 1, 47, 1, 46, 1, 29] ASSIGN __pointer[__offset] __rhs
240 [33, 1, 29] PUSH __rhs
241 [33, 1, 42] PUSH people
242 [33, 0, 0] PUSH 0
243 [34, 1, 46] POP __offset
244 [34, 1, 47] POP __pointer
245 [33, 2, 1, 47, 1, 46] PUSH __pointer[__offset]
246 [33, 1, 18] PUSH __field__Person__m_name
247 [34, 1, 27] POP __child
248 [34, 1, 28] POP __parent
249 [33, 2, 1, 28, 1, 27] PUSH __parent[__child]
250 [34, 1, 48] POP __arg0
251 [33, 1, 48] PUSH __arg0
252 [12, 1, 8] CALL println
253 [34, 1, 1] POP __null
254 [14, 1, 45] RESPONSE __retval
255 [33, 1, 45] PUSH __retval
256 [33, 0, 5] PUSH 5
257 [34, 1, 4] POP __size
258 [1, 1, 30, 1, 4] MALLOC __ptr __size
259 [33, 1, 30] PUSH __ptr
260 [34, 1, 29] POP __rhs
261 [0, 1, 51, 1, 29] ASSIGN nums __rhs
262 [33, 1, 29] PUSH __rhs
263 [33, 0, 0] PUSH 0
264 [34, 1, 29] POP __rhs
265 [0, 1, 52, 1, 29] ASSIGN i __rhs
266 [33, 1, 29] PUSH __rhs
267 [-1, 53, 267] __for1:
268 [33, 1, 52] PUSH i
269 [33, 1, 51] PUSH nums
270 [34, 1, 48] POP __arg0
271 [33, 1, 48] PUSH __arg0
272 [12, 1, 54] CALL sizeof
273 [34, 1, 1] POP __null
274 [14, 1, 45] RESPONSE __retval
275 [33, 1, 45] PUSH __retval
276 [34, 1, 29] POP __rhs
277 [34, 1, 38] POP __lhs
278 [24, 1, 39, 1, 38, 1, 29] LT __res __lhs __rhs
279 [33, 1, 39] PUSH __res
280 [34, 1, 40] POP __cond
281 [28, 1, 40, 0, 0] CMP __cond 0
282 [18, 1, 55] JEQ __endfor1
283 [33, 1, 51] PUSH nums
284 [33, 1, 52] PUSH i
285 [34, 1, 46] POP __offset
286 [34, 1, 47] POP __pointer
287 [33, 2, 1, 47, 1, 46] PUSH __pointer[__offset]
288 [34, 1, 48] POP __arg0
289 [1, 1, 3, 0, 1] MALLOC __str 1
290 [0, 2, 1, 3, 0, 0, 0, ' '] ASSIGN __str[0] ' '
291 [33, 1, 3] PUSH __str
292 [34, 1, 49] POP __arg1
293 [33, 1, 49] PUSH __arg1
294 [33, 1, 48] PUSH __arg0
295 [12, 1, 2] CALL print
296 [34, 1, 1] POP __null
297 [34, 1, 1] POP __null
298 [14, 1, 45] RESPONSE __retval
299 [33, 1, 45] PUSH __retval
300 [33, 1, 52] PUSH i
301 [34, 1, 29] POP __rhs
302 [3, 1, 52, 1, 52, 0, 1] ADD i i 1
303 [0, 1, 39, 1, 52] ASSIGN __res i
304 [33, 1, 39] PUSH __res
305 [15, 1, 53] JUMP __for1
306 [-1, 55, 306] __endfor1:
307 [1, 1, 3, 0, 0] MALLOC __str 0
308 [33, 1, 3] PUSH __str
309 [34, 1, 48] POP __arg0
310 [33, 1, 48] PUSH __arg0
311 [12, 1, 8] CALL println
312 [34, 1, 1] POP __null
313 [14, 1, 45] RESPONSE __retval
314 [33, 1, 45] PUSH __retval
315 [33, 0, 0] PUSH 0
316 [34, 1, 29] POP __rhs
317 [0, 1, 56, 1, 29] ASSIGN mybool __rhs
318 [33, 1, 29] PUSH __rhs
319 [33, 1, 51] PUSH nums
320 [34, 1, 48] POP __arg0
321 [33, 1, 48] PUSH __arg0
322 [12, 1, 54] CALL sizeof
323 [34, 1, 1] POP __null
324 [14, 1, 45] RESPONSE __retval
325 [33, 1, 45] PUSH __retval
326 [33, 0, 0] PUSH 0
327 [34, 1, 29] POP __rhs
328 [34, 1, 38] POP __lhs
329 [26, 1, 39, 1, 38, 1, 29] GT __res __lhs __rhs
330 [33, 1, 39] PUSH __res
331 [34, 1, 40] POP __cond
332 [28, 1, 40, 0, 0] CMP __cond 0
333 [18, 1, 57] JEQ __elif2x0
334 [1, 1, 3, 0, 6] MALLOC __str 6
335 [0, 2, 1, 3, 0, 0, 0, 'N'] ASSIGN __str[0] 'N'
336 [0, 2, 1, 3, 0, 1, 0, 'u'] ASSIGN __str[1] 'u'
337 [0, 2, 1, 3, 0, 2, 0, 'm'] ASSIGN __str[2] 'm'
338 [0, 2, 1, 3, 0, 3, 0, 's'] ASSIGN __str[3] 's'
339 [0, 2, 1, 3, 0, 4, 0, ':'] ASSIGN __str[4] ':'
340 [0, 2, 1, 3, 0, 5, 0, ' '] ASSIGN __str[5] ' '
341 [33, 1, 3] PUSH __str
342 [34, 1, 48] POP __arg0
343 [33, 1, 48] PUSH __arg0
344 [12, 1, 2] CALL print
345 [34, 1, 1] POP __null
346 [14, 1, 45] RESPONSE __retval
347 [33, 1, 45] PUSH __retval
348 [33, 1, 51] PUSH nums
349 [34, 1, 48] POP __arg0
350 [33, 1, 48] PUSH __arg0
351 [12, 1, 2] CALL print
352 [34, 1, 1] POP __null
353 [14, 1, 45] RESPONSE __retval
354 [33, 1, 45] PUSH __retval
355 [12, 1, 8] CALL println
356 [14, 1, 45] RESPONSE __retval
357 [33, 1, 45] PUSH __retval
358 [15, 1, 58] JUMP __endif2
359 [-1, 57, 359] __elif2x0:
360 [33, 1, 56] PUSH mybool
361 [34, 1, 40] POP __cond
362 [28, 1, 40, 0, 0] CMP __cond 0
363 [18, 1, 59] JEQ __else2
364 [33, 1, 56] PUSH mybool
365 [34, 1, 48] POP __arg0
366 [33, 1, 48] PUSH __arg0
367 [12, 1, 8] CALL println
368 [34, 1, 1] POP __null
369 [14, 1, 45] RESPONSE __retval
370 [33, 1, 45] PUSH __retval
371 [15, 1, 58] JUMP __endif2
372 [-1, 59, 372] __else2:
373 [1, 1, 3, 0, 3] MALLOC __str 3
374 [0, 2, 1, 3, 0, 0, 0, 'Y'] ASSIGN __str[0] 'Y'
375 [0, 2, 1, 3, 0, 1, 0, 'e'] ASSIGN __str[1] 'e'
376 [0, 2, 1, 3, 0, 2, 0, 's'] ASSIGN __str[2] 's'
377 [33, 1, 3] PUSH __str
378 [34, 1, 48] POP __arg0
379 [33, 1, 48] PUSH __arg0
380 [12, 1, 8] CALL println
381 [34, 1, 1] POP __null
382 [14, 1, 45] RESPONSE __retval
383 [33, 1, 45] PUSH __retval
384 [-1, 58, 384] __endif2:
385 [33, 0, 10] PUSH 10
386 [34, 1, 29] POP __rhs
387 [0, 1, 60, 1, 29] ASSIGN y __rhs
388 [33, 1, 29] PUSH __rhs
389 [34, 1, 29] POP __rhs
390 [0, 1, 61, 1, 29] ASSIGN x __rhs
391 [33, 1, 29] PUSH __rhs
392 [34, 1, 48] POP __arg0
393 [33, 1, 48] PUSH __arg0
394 [12, 1, 8] CALL println
395 [34, 1, 1] POP __null
396 [14, 1, 45] RESPONSE __retval
397 [33, 1, 45] PUSH __retval
398 [33, 0, 0] PUSH 0
399 [34, 1, 29] POP __rhs
400 [0, 1, 61, 1, 29] ASSIGN x __rhs
401 [33, 1, 29] PUSH __rhs
402 [-1, 62, 402] __while3:
403 [33, 0, 1] PUSH 1
404 [34, 1, 40] POP __cond
405 [28, 1, 40, 0, 0] CMP __cond 0
406 [18, 1, 63] JEQ __endwhile3
407 [0, 1, 39, 1, 61] ASSIGN __res x
408 [3, 1, 61, 1, 61, 0, 1] ADD x x 1
409 [33, 1, 39] PUSH __res
410 [33, 0, 10] PUSH 10
411 [34, 1, 29] POP __rhs
412 [34, 1, 38] POP __lhs
413 [26, 1, 39, 1, 38, 1, 29] GT __res __lhs __rhs
414 [33, 1, 39] PUSH __res
415 [34, 1, 40] POP __cond
416 [28, 1, 40, 0, 0] CMP __cond 0
417 [18, 1, 64] JEQ __endif4
418 [15, 1, 63] JUMP __endwhile3
419 [15, 1, 64] JUMP __endif4
420 [-1, 64, 420] __endif4:
421 [15, 1, 62] JUMP __while3
422 [-1, 63, 422] __endwhile3:
423 [33, 0, 21] PUSH 21
424 [33, 0, 12] PUSH 12
425 [34, 1, 29] POP __rhs
426 [34, 1, 38] POP __lhs
427 [3, 1, 39, 1, 38, 1, 29] ADD __res __lhs __rhs
428 [33, 1, 39] PUSH __res
429 [33, 1, 51] PUSH nums
430 [0, 1, 39, 1, 61] ASSIGN __res x
431 [3, 1, 61, 1, 61, 0, 1] ADD x x 1
432 [33, 1, 39] PUSH __res
433 [34, 1, 46] POP __offset
434 [34, 1, 47] POP __pointer
435 [34, 1, 29] POP __rhs
436 [0, 2, 1, 47, 1, 46, 1, 29] ASSIGN __pointer[__offset] __rhs
437 [33, 1, 29] PUSH __rhs
438 [34, 1, 29] POP __rhs
439 [0, 1, 65, 1, 29] ASSIGN w __rhs
440 [33, 1, 29] PUSH __rhs
441 [33, 0, 10] PUSH 10
442 [34, 1, 29] POP __rhs
443 [0, 1, 66, 1, 29] ASSIGN nCols __rhs
444 [33, 1, 29] PUSH __rhs
445 [34, 1, 29] POP __rhs
446 [0, 1, 67, 1, 29] ASSIGN nRows __rhs
447 [33, 1, 29] PUSH __rhs
448 [33, 1, 67] PUSH nRows
449 [33, 1, 66] PUSH nCols
450 [34, 1, 4] POP __size
451 [1, 1, 30, 1, 4] MALLOC __ptr __size
452 [33, 1, 30] PUSH __ptr
453 [34, 1, 29] POP __rhs
454 [0, 1, 68, 1, 29] ASSIGN board __rhs
455 [33, 1, 29] PUSH __rhs
456 [33, 0, 7.34] PUSH 7.34
457 [33, 1, 68] PUSH board
458 [33, 0, 0] PUSH 0
459 [34, 1, 46] POP __offset
460 [34, 1, 47] POP __pointer
461 [33, 2, 1, 47, 1, 46] PUSH __pointer[__offset]
462 [33, 0, 0] PUSH 0
463 [34, 1, 46] POP __offset
464 [34, 1, 47] POP __pointer
465 [34, 1, 29] POP __rhs
466 [0, 2, 1, 47, 1, 46, 1, 29] ASSIGN __pointer[__offset] __rhs
467 [33, 1, 29] PUSH __rhs
468 [33, 0, 1] PUSH 1
469 [34, 1, 29] POP __rhs
470 [0, 1, 69, 1, 29] ASSIGN apple __rhs
471 [33, 1, 29] PUSH __rhs
