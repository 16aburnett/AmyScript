000 [15, 1, 0] jump __endOfLibrary
001 [0, 1, 1, 0, 0] assign __null 0
002 [-1, 2, 2] print:
003 [35, 1, 3, 0, 0] stackget __str 0
004 [32, 1, 4, 1, 3] sizeof __size __str
005 [0, 1, 5, 0, 0] assign __i 0
006 [-1, 6, 6] __print__loop:
007 [28, 1, 5, 1, 4] cmp __i __size
008 [20, 1, 7] jge __print__endloop
009 [8, 2, 1, 3, 1, 5] print __str[__i]
010 [3, 1, 5, 1, 5, 0, 1] add __i __i 1
011 [15, 1, 6] jump __print__loop
012 [-1, 7, 12] __print__endloop:
013 [13, 0, 0] return 0
014 [-1, 8, 14] println:
015 [35, 1, 3, 0, 0] stackget __str 0
016 [32, 1, 4, 1, 3] sizeof __size __str
017 [0, 1, 5, 0, 0] assign __i 0
018 [-1, 9, 18] __println__loop:
019 [28, 1, 5, 1, 4] cmp __i __size
020 [20, 1, 10] jge __println__endloop
021 [8, 2, 1, 3, 1, 5] print __str[__i]
022 [3, 1, 5, 1, 5, 0, 1] add __i __i 1
023 [15, 1, 9] jump __println__loop
024 [-1, 10, 24] __println__endloop:
025 [9] println
026 [13, 0, 0] return 0
027 [-1, 11, 27] printInt:
028 [35, 1, 3, 0, 0] stackget __str 0
029 [8, 1, 3] print __str
030 [13, 0, 0] return 0
031 [-1, 12, 31] printFloat:
032 [35, 1, 3, 0, 0] stackget __str 0
033 [8, 1, 3] print __str
034 [13, 0, 0] return 0
035 [-1, 13, 35] printChar:
036 [35, 1, 14, 0, 0] stackget __char 0
037 [8, 1, 14] print __char
038 [13, 0, 0] return 0
039 [-1, 15, 39] input:
040 [10, 1, 16] input __line
041 [13, 1, 16] return __line
042 [-1, 17, 42] intToString:
043 [35, 1, 18, 0, 0] stackget __val 0
044 [13, 0, 0] return 0
045 [-1, 0, 45] __endOfLibrary:
046 [33, 0, 0] PUSH 0
047 [34, 1, 19] POP __rhs
048 [0, 1, 20, 1, 19] ASSIGN i __rhs
049 [33, 1, 19] PUSH __rhs
050 [15, 1, 21] JUMP __forcond0
051 [-1, 22, 51] __for0:
052 [33, 1, 20] PUSH i
053 [34, 1, 19] POP __rhs
054 [3, 1, 20, 1, 20, 0, 1] ADD i i 1
055 [0, 1, 23, 1, 20] ASSIGN __res i
056 [33, 1, 23] PUSH __res
057 [-1, 21, 57] __forcond0:
058 [33, 1, 20] PUSH i
059 [33, 0, 42] PUSH 42
060 [34, 1, 19] POP __rhs
061 [34, 1, 24] POP __lhs
062 [24, 1, 23, 1, 24, 1, 19] LT __res __lhs __rhs
063 [33, 1, 23] PUSH __res
064 [34, 1, 25] POP __cond
065 [28, 1, 25, 0, 0] CMP __cond 0
066 [18, 1, 26] JEQ __endfor0
067 [33, 1, 20] PUSH i
068 [34, 1, 27] POP __arg0
069 [33, 1, 27] PUSH __arg0
070 [12, 1, 11] CALL printInt
071 [34, 1, 1] POP __null
072 [14, 1, 28] RESPONSE __retval
073 [33, 1, 28] PUSH __retval
074 [1, 1, 3, 0, 0] MALLOC __str 0
075 [33, 1, 3] PUSH __str
076 [34, 1, 27] POP __arg0
077 [33, 1, 27] PUSH __arg0
078 [12, 1, 8] CALL println
079 [34, 1, 1] POP __null
080 [14, 1, 28] RESPONSE __retval
081 [33, 1, 28] PUSH __retval
082 [15, 1, 22] JUMP __for0
083 [-1, 26, 83] __endfor0:
084 [33, 0, 10] PUSH 10
085 [34, 1, 19] POP __rhs
086 [0, 1, 20, 1, 19] ASSIGN i __rhs
087 [33, 1, 19] PUSH __rhs
088 [33, 0, 10] PUSH 10
089 [34, 1, 19] POP __rhs
090 [0, 1, 29, 1, 19] ASSIGN x __rhs
091 [33, 1, 19] PUSH __rhs
092 [-1, 30, 92] __while1:
093 [33, 1, 20] PUSH i
094 [33, 0, 0] PUSH 0
095 [34, 1, 19] POP __rhs
096 [34, 1, 24] POP __lhs
097 [26, 1, 23, 1, 24, 1, 19] GT __res __lhs __rhs
098 [33, 1, 23] PUSH __res
099 [34, 1, 25] POP __cond
100 [28, 1, 25, 0, 0] CMP __cond 0
101 [18, 1, 31] JEQ __endwhile1
102 [0, 1, 23, 1, 20] ASSIGN __res i
103 [4, 1, 20, 1, 20, 0, 1] SUBTRACT i i 1
104 [33, 1, 23] PUSH __res
105 [34, 1, 27] POP __arg0
106 [33, 1, 27] PUSH __arg0
107 [12, 1, 11] CALL printInt
108 [34, 1, 1] POP __null
109 [14, 1, 28] RESPONSE __retval
110 [33, 1, 28] PUSH __retval
111 [1, 1, 3, 0, 0] MALLOC __str 0
112 [33, 1, 3] PUSH __str
113 [34, 1, 27] POP __arg0
114 [33, 1, 27] PUSH __arg0
115 [12, 1, 8] CALL println
116 [34, 1, 1] POP __null
117 [14, 1, 28] RESPONSE __retval
118 [33, 1, 28] PUSH __retval
119 [15, 1, 30] JUMP __while1
120 [-1, 31, 120] __endwhile1:
121 [33, 0, 0] PUSH 0
122 [34, 1, 19] POP __rhs
123 [0, 1, 20, 1, 19] ASSIGN i __rhs
124 [33, 1, 19] PUSH __rhs
125 [15, 1, 32] JUMP __forcond2
126 [-1, 33, 126] __for2:
127 [0, 1, 23, 1, 20] ASSIGN __res i
128 [3, 1, 20, 1, 20, 0, 1] ADD i i 1
129 [33, 1, 23] PUSH __res
130 [-1, 32, 130] __forcond2:
131 [33, 1, 20] PUSH i
132 [33, 0, 5] PUSH 5
133 [34, 1, 19] POP __rhs
134 [34, 1, 24] POP __lhs
135 [24, 1, 23, 1, 24, 1, 19] LT __res __lhs __rhs
136 [33, 1, 23] PUSH __res
137 [34, 1, 25] POP __cond
138 [28, 1, 25, 0, 0] CMP __cond 0
139 [18, 1, 34] JEQ __endfor2
140 [33, 0, 0] PUSH 0
141 [34, 1, 19] POP __rhs
142 [0, 1, 35, 1, 19] ASSIGN j __rhs
143 [33, 1, 19] PUSH __rhs
144 [15, 1, 36] JUMP __forcond3
145 [-1, 37, 145] __for3:
146 [0, 1, 23, 1, 35] ASSIGN __res j
147 [3, 1, 35, 1, 35, 0, 1] ADD j j 1
148 [33, 1, 23] PUSH __res
149 [-1, 36, 149] __forcond3:
150 [33, 1, 35] PUSH j
151 [33, 0, 5] PUSH 5
152 [34, 1, 19] POP __rhs
153 [34, 1, 24] POP __lhs
154 [24, 1, 23, 1, 24, 1, 19] LT __res __lhs __rhs
155 [33, 1, 23] PUSH __res
156 [34, 1, 25] POP __cond
157 [28, 1, 25, 0, 0] CMP __cond 0
158 [18, 1, 38] JEQ __endfor3
159 [33, 1, 20] PUSH i
160 [33, 0, 2] PUSH 2
161 [34, 1, 19] POP __rhs
162 [34, 1, 24] POP __lhs
163 [7, 1, 23, 1, 24, 1, 19] MOD __res __lhs __rhs
164 [33, 1, 23] PUSH __res
165 [33, 1, 35] PUSH j
166 [33, 0, 2] PUSH 2
167 [34, 1, 19] POP __rhs
168 [34, 1, 24] POP __lhs
169 [7, 1, 23, 1, 24, 1, 19] MOD __res __lhs __rhs
170 [33, 1, 23] PUSH __res
171 [34, 1, 19] POP __rhs
172 [34, 1, 24] POP __lhs
173 [3, 1, 23, 1, 24, 1, 19] ADD __res __lhs __rhs
174 [33, 1, 23] PUSH __res
175 [33, 0, 2] PUSH 2
176 [34, 1, 19] POP __rhs
177 [34, 1, 24] POP __lhs
178 [7, 1, 23, 1, 24, 1, 19] MOD __res __lhs __rhs
179 [33, 1, 23] PUSH __res
180 [33, 0, 0] PUSH 0
181 [34, 1, 19] POP __rhs
182 [34, 1, 24] POP __lhs
183 [22, 1, 23, 1, 24, 1, 19] EQUAL __res __lhs __rhs
184 [33, 1, 23] PUSH __res
185 [34, 1, 25] POP __cond
186 [28, 1, 25, 0, 0] CMP __cond 0
187 [18, 1, 39] JEQ __else4
188 [1, 1, 3, 0, 1] MALLOC __str 1
189 [0, 2, 1, 3, 0, 0, 0, 'x'] ASSIGN __str[0] 'x'
190 [33, 1, 3] PUSH __str
191 [34, 1, 27] POP __arg0
192 [33, 1, 27] PUSH __arg0
193 [12, 1, 2] CALL print
194 [34, 1, 1] POP __null
195 [14, 1, 28] RESPONSE __retval
196 [33, 1, 28] PUSH __retval
197 [15, 1, 40] JUMP __endif4
198 [-1, 39, 198] __else4:
199 [1, 1, 3, 0, 1] MALLOC __str 1
200 [0, 2, 1, 3, 0, 0, 0, '.'] ASSIGN __str[0] '.'
201 [33, 1, 3] PUSH __str
202 [34, 1, 27] POP __arg0
203 [33, 1, 27] PUSH __arg0
204 [12, 1, 2] CALL print
205 [34, 1, 1] POP __null
206 [14, 1, 28] RESPONSE __retval
207 [33, 1, 28] PUSH __retval
208 [-1, 40, 208] __endif4:
209 [15, 1, 37] JUMP __for3
210 [-1, 38, 210] __endfor3:
211 [33, 0, 7] PUSH 7
212 [34, 1, 19] POP __rhs
213 [0, 1, 29, 1, 19] ASSIGN x __rhs
214 [33, 1, 19] PUSH __rhs
215 [1, 1, 3, 0, 0] MALLOC __str 0
216 [33, 1, 3] PUSH __str
217 [34, 1, 27] POP __arg0
218 [33, 1, 27] PUSH __arg0
219 [12, 1, 8] CALL println
220 [34, 1, 1] POP __null
221 [14, 1, 28] RESPONSE __retval
222 [33, 1, 28] PUSH __retval
223 [15, 1, 33] JUMP __for2
224 [-1, 34, 224] __endfor2:
225 [33, 1, 20] PUSH i
226 [34, 1, 27] POP __arg0
227 [33, 1, 27] PUSH __arg0
228 [12, 1, 11] CALL printInt
229 [34, 1, 1] POP __null
230 [14, 1, 28] RESPONSE __retval
231 [33, 1, 28] PUSH __retval
232 [1, 1, 3, 0, 0] MALLOC __str 0
233 [33, 1, 3] PUSH __str
234 [34, 1, 27] POP __arg0
235 [33, 1, 27] PUSH __arg0
236 [12, 1, 8] CALL println
237 [34, 1, 1] POP __null
238 [14, 1, 28] RESPONSE __retval
239 [33, 1, 28] PUSH __retval
240 [33, 1, 29] PUSH x
241 [34, 1, 27] POP __arg0
242 [33, 1, 27] PUSH __arg0
243 [12, 1, 11] CALL printInt
244 [34, 1, 1] POP __null
245 [14, 1, 28] RESPONSE __retval
246 [33, 1, 28] PUSH __retval
247 [1, 1, 3, 0, 0] MALLOC __str 0
248 [33, 1, 3] PUSH __str
249 [34, 1, 27] POP __arg0
250 [33, 1, 27] PUSH __arg0
251 [12, 1, 8] CALL println
252 [34, 1, 1] POP __null
253 [14, 1, 28] RESPONSE __retval
254 [33, 1, 28] PUSH __retval
255 [33, 0, 10] PUSH 10
256 [34, 1, 19] POP __rhs
257 [0, 1, 41, 1, 19] ASSIGN w __rhs
258 [33, 1, 19] PUSH __rhs
259 [33, 0, 7] PUSH 7
260 [34, 1, 19] POP __rhs
261 [0, 1, 42, 1, 19] ASSIGN y __rhs
262 [33, 1, 19] PUSH __rhs
263 [-1, 43, 263] __while5:
264 [33, 1, 41] PUSH w
265 [33, 0, 0] PUSH 0
266 [34, 1, 19] POP __rhs
267 [34, 1, 24] POP __lhs
268 [26, 1, 23, 1, 24, 1, 19] GT __res __lhs __rhs
269 [33, 1, 23] PUSH __res
270 [34, 1, 25] POP __cond
271 [28, 1, 25, 0, 0] CMP __cond 0
272 [18, 1, 44] JEQ __endwhile5
273 [33, 1, 41] PUSH w
274 [33, 1, 42] PUSH y
275 [34, 1, 19] POP __rhs
276 [34, 1, 24] POP __lhs
277 [25, 1, 23, 1, 24, 1, 19] LE __res __lhs __rhs
278 [33, 1, 23] PUSH __res
279 [34, 1, 25] POP __cond
280 [28, 1, 25, 0, 0] CMP __cond 0
281 [18, 1, 45] JEQ __endif6
282 [15, 1, 44] JUMP __endwhile5
283 [15, 1, 45] JUMP __endif6
284 [-1, 45, 284] __endif6:
285 [33, 1, 41] PUSH w
286 [34, 1, 19] POP __rhs
287 [4, 1, 41, 1, 41, 0, 1] SUBTRACT w w 1
288 [0, 1, 23, 1, 41] ASSIGN __res w
289 [33, 1, 23] PUSH __res
290 [15, 1, 43] JUMP __while5
291 [-1, 44, 291] __endwhile5:
292 [33, 1, 41] PUSH w
293 [34, 1, 27] POP __arg0
294 [33, 1, 27] PUSH __arg0
295 [12, 1, 11] CALL printInt
296 [34, 1, 1] POP __null
297 [14, 1, 28] RESPONSE __retval
298 [33, 1, 28] PUSH __retval
299 [1, 1, 3, 0, 0] MALLOC __str 0
300 [33, 1, 3] PUSH __str
301 [34, 1, 27] POP __arg0
302 [33, 1, 27] PUSH __arg0
303 [12, 1, 8] CALL println
304 [34, 1, 1] POP __null
305 [14, 1, 28] RESPONSE __retval
306 [33, 1, 28] PUSH __retval
307 [33, 0, 0] PUSH 0
308 [34, 1, 19] POP __rhs
309 [0, 1, 20, 1, 19] ASSIGN i __rhs
310 [33, 1, 19] PUSH __rhs
311 [15, 1, 46] JUMP __forcond7
312 [-1, 47, 312] __for7:
313 [33, 1, 20] PUSH i
314 [33, 0, 1] PUSH 1
315 [34, 1, 19] POP __rhs
316 [34, 1, 24] POP __lhs
317 [3, 1, 23, 1, 24, 1, 19] ADD __res __lhs __rhs
318 [33, 1, 23] PUSH __res
319 [34, 1, 19] POP __rhs
320 [0, 1, 20, 1, 19] ASSIGN i __rhs
321 [33, 1, 19] PUSH __rhs
322 [-1, 46, 322] __forcond7:
323 [33, 1, 20] PUSH i
324 [33, 0, 10] PUSH 10
325 [34, 1, 19] POP __rhs
326 [34, 1, 24] POP __lhs
327 [24, 1, 23, 1, 24, 1, 19] LT __res __lhs __rhs
328 [33, 1, 23] PUSH __res
329 [34, 1, 25] POP __cond
330 [28, 1, 25, 0, 0] CMP __cond 0
331 [18, 1, 48] JEQ __forelse7
332 [33, 1, 20] PUSH i
333 [33, 0, 17] PUSH 17
334 [34, 1, 19] POP __rhs
335 [34, 1, 24] POP __lhs
336 [22, 1, 23, 1, 24, 1, 19] EQUAL __res __lhs __rhs
337 [33, 1, 23] PUSH __res
338 [34, 1, 25] POP __cond
339 [28, 1, 25, 0, 0] CMP __cond 0
340 [18, 1, 49] JEQ __endif8
341 [15, 1, 50] JUMP __endfor7
342 [15, 1, 49] JUMP __endif8
343 [-1, 49, 343] __endif8:
344 [15, 1, 47] JUMP __for7
345 [-1, 48, 345] __forelse7:
346 [1, 1, 3, 0, 39] MALLOC __str 39
347 [0, 2, 1, 3, 0, 0, 0, 'T'] ASSIGN __str[0] 'T'
348 [0, 2, 1, 3, 0, 1, 0, 'h'] ASSIGN __str[1] 'h'
349 [0, 2, 1, 3, 0, 2, 0, 'i'] ASSIGN __str[2] 'i'
350 [0, 2, 1, 3, 0, 3, 0, 's'] ASSIGN __str[3] 's'
351 [0, 2, 1, 3, 0, 4, 0, ' '] ASSIGN __str[4] ' '
352 [0, 2, 1, 3, 0, 5, 0, 'e'] ASSIGN __str[5] 'e'
353 [0, 2, 1, 3, 0, 6, 0, 'x'] ASSIGN __str[6] 'x'
354 [0, 2, 1, 3, 0, 7, 0, 'e'] ASSIGN __str[7] 'e'
355 [0, 2, 1, 3, 0, 8, 0, 'c'] ASSIGN __str[8] 'c'
356 [0, 2, 1, 3, 0, 9, 0, 'u'] ASSIGN __str[9] 'u'
357 [0, 2, 1, 3, 0, 10, 0, 't'] ASSIGN __str[10] 't'
358 [0, 2, 1, 3, 0, 11, 0, 'e'] ASSIGN __str[11] 'e'
359 [0, 2, 1, 3, 0, 12, 0, 's'] ASSIGN __str[12] 's'
360 [0, 2, 1, 3, 0, 13, 0, ' '] ASSIGN __str[13] ' '
361 [0, 2, 1, 3, 0, 14, 0, 'i'] ASSIGN __str[14] 'i'
362 [0, 2, 1, 3, 0, 15, 0, 'f'] ASSIGN __str[15] 'f'
363 [0, 2, 1, 3, 0, 16, 0, ' '] ASSIGN __str[16] ' '
364 [0, 2, 1, 3, 0, 17, 0, 'l'] ASSIGN __str[17] 'l'
365 [0, 2, 1, 3, 0, 18, 0, 'o'] ASSIGN __str[18] 'o'
366 [0, 2, 1, 3, 0, 19, 0, 'o'] ASSIGN __str[19] 'o'
367 [0, 2, 1, 3, 0, 20, 0, 'p'] ASSIGN __str[20] 'p'
368 [0, 2, 1, 3, 0, 21, 0, ' '] ASSIGN __str[21] ' '
369 [0, 2, 1, 3, 0, 22, 0, 'e'] ASSIGN __str[22] 'e'
370 [0, 2, 1, 3, 0, 23, 0, 'x'] ASSIGN __str[23] 'x'
371 [0, 2, 1, 3, 0, 24, 0, 'e'] ASSIGN __str[24] 'e'
372 [0, 2, 1, 3, 0, 25, 0, 'c'] ASSIGN __str[25] 'c'
373 [0, 2, 1, 3, 0, 26, 0, 'u'] ASSIGN __str[26] 'u'
374 [0, 2, 1, 3, 0, 27, 0, 't'] ASSIGN __str[27] 't'
375 [0, 2, 1, 3, 0, 28, 0, 'e'] ASSIGN __str[28] 'e'
376 [0, 2, 1, 3, 0, 29, 0, 's'] ASSIGN __str[29] 's'
377 [0, 2, 1, 3, 0, 30, 0, ' '] ASSIGN __str[30] ' '
378 [0, 2, 1, 3, 0, 31, 0, 'n'] ASSIGN __str[31] 'n'
379 [0, 2, 1, 3, 0, 32, 0, 'o'] ASSIGN __str[32] 'o'
380 [0, 2, 1, 3, 0, 33, 0, 'r'] ASSIGN __str[33] 'r'
381 [0, 2, 1, 3, 0, 34, 0, 'm'] ASSIGN __str[34] 'm'
382 [0, 2, 1, 3, 0, 35, 0, 'a'] ASSIGN __str[35] 'a'
383 [0, 2, 1, 3, 0, 36, 0, 'l'] ASSIGN __str[36] 'l'
384 [0, 2, 1, 3, 0, 37, 0, 'l'] ASSIGN __str[37] 'l'
385 [0, 2, 1, 3, 0, 38, 0, 'y'] ASSIGN __str[38] 'y'
386 [33, 1, 3] PUSH __str
387 [34, 1, 27] POP __arg0
388 [33, 1, 27] PUSH __arg0
389 [12, 1, 8] CALL println
390 [34, 1, 1] POP __null
391 [14, 1, 28] RESPONSE __retval
392 [33, 1, 28] PUSH __retval
393 [-1, 50, 393] __endfor7:
394 [1, 1, 3, 0, 14] MALLOC __str 14
395 [0, 2, 1, 3, 0, 0, 0, 'L'] ASSIGN __str[0] 'L'
396 [0, 2, 1, 3, 0, 1, 0, 'o'] ASSIGN __str[1] 'o'
397 [0, 2, 1, 3, 0, 2, 0, 'o'] ASSIGN __str[2] 'o'
398 [0, 2, 1, 3, 0, 3, 0, 'p'] ASSIGN __str[3] 'p'
399 [0, 2, 1, 3, 0, 4, 0, ' '] ASSIGN __str[4] ' '
400 [0, 2, 1, 3, 0, 5, 0, 'f'] ASSIGN __str[5] 'f'
401 [0, 2, 1, 3, 0, 6, 0, 'i'] ASSIGN __str[6] 'i'
402 [0, 2, 1, 3, 0, 7, 0, 'n'] ASSIGN __str[7] 'n'
403 [0, 2, 1, 3, 0, 8, 0, 'i'] ASSIGN __str[8] 'i'
404 [0, 2, 1, 3, 0, 9, 0, 's'] ASSIGN __str[9] 's'
405 [0, 2, 1, 3, 0, 10, 0, 'h'] ASSIGN __str[10] 'h'
406 [0, 2, 1, 3, 0, 11, 0, 'e'] ASSIGN __str[11] 'e'
407 [0, 2, 1, 3, 0, 12, 0, 'd'] ASSIGN __str[12] 'd'
408 [0, 2, 1, 3, 0, 13, 0, '!'] ASSIGN __str[13] '!'
409 [33, 1, 3] PUSH __str
410 [34, 1, 27] POP __arg0
411 [33, 1, 27] PUSH __arg0
412 [12, 1, 8] CALL println
413 [34, 1, 1] POP __null
414 [14, 1, 28] RESPONSE __retval
415 [33, 1, 28] PUSH __retval
